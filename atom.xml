<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>James Wang</title>
  
  <subtitle>中文技术博客</subtitle>
  <link href="https://adymilk.github.io/atom.xml" rel="self"/>
  
  <link href="https://adymilk.github.io/"/>
  <updated>2021-09-08T07:32:16.942Z</updated>
  <id>https://adymilk.github.io/</id>
  
  <author>
    <name>王恒</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决macOS系统向日葵远控无法被远程控制问题（白屏）</title>
    <link href="https://adymilk.github.io/2021/09/08/20210908-10/"/>
    <id>https://adymilk.github.io/2021/09/08/20210908-10/</id>
    <published>2021-09-08T07:13:08.000Z</published>
    <updated>2021-09-08T07:32:16.942Z</updated>
    
    <content type="html"><![CDATA[<p>向日葵远控软件除了在mac电脑中使用安全隐私内的录屏功能添入权限，还需添加另外一个步骤</p><p> 1.正常配置中，在设置 - 安全性与隐私 内，将屏幕录制、文件和文件夹、完全的磁盘访问权限 全部添入向日葵客户端<br>         <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/c6228d9259064b34a9a15ecb608ef3bb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p><span id="more"></span><p> 2.点击辅助功能，解锁按钮后，点击左下角的 加号，进行选择程序<br>         <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/40ba5917d8ba455aa59296072cff5f17.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p><ol start="3"><li>通过文件访达command + shift +G 打开，输入</li></ol> <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Applications/SunloginClient.app/Contents/Helpers/SunloginClient_Desktop</span><br></pre></td></tr></table></div></figure><p>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/456d291e7a474060ac94b217e0f38408.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p><p>找到它，并点击打开。确保向日葵和该程序均选中后，可保存更改</p><p>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/43059f8114704e7995334ad82b5d3702.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p><ol start="4"><li>重启向日葵客户端，即可远程操作了，觉得还不错的话 给个赞或关注吧</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;向日葵远控软件除了在mac电脑中使用安全隐私内的录屏功能添入权限，还需添加另外一个步骤&lt;/p&gt;
&lt;p&gt; 1.正常配置中，在设置 - 安全性与隐私 内，将屏幕录制、文件和文件夹、完全的磁盘访问权限 全部添入向日葵客户端&lt;br&gt; 
        &lt;img     class=&quot;lazyload lazyload-gif&quot;
          src=&quot;/images/loading.svg&quot; data-src=&quot;https://img-blog.csdnimg.cn/c6228d9259064b34a9a15ecb608ef3bb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16&quot;  style=&quot;width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;&quot;  alt=&quot;在这里插入图片描述&quot;&gt;
      &lt;/p&gt;</summary>
    
    
    
    <category term="Mac" scheme="https://adymilk.github.io/categories/Mac/"/>
    
    
    <category term="Mac" scheme="https://adymilk.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac 傻瓜式 安装 window 10 双系统教程</title>
    <link href="https://adymilk.github.io/2021/09/08/20210908-9/"/>
    <id>https://adymilk.github.io/2021/09/08/20210908-9/</id>
    <published>2021-09-08T07:01:44.000Z</published>
    <updated>2021-09-08T08:47:58.120Z</updated>
    
    <content type="html"><![CDATA[<p>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/c9c7ac26f2814719923ab34c395f2d99.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p><span id="more"></span><blockquote><p>一款运行快速、操作简单、功能强大的应用程序，无需重启即可在您的 Intel 或 Apple M1 Mac 上运行 Windows。包含 30 多种一键式工具，可简化 Mac 和 Windows 上的日常任务。</p></blockquote><blockquote><p>无需重启在 Mac 上运行 Windows.<br>访问 Microsoft Office for Windows 和 Internet Explorer<br>在您的 Mac 上运行超过 200,000 个 Windows 应用程序而不会有性能问题<br>在 Mac 虚拟机中跨多个操作系统开发和测试<br>在 Mac 和 Windows 之间无缝转移和分享内容<br>融合模式：隐藏 Windows 桌面，像使用 Mac 应用程序一样使用 Windows 应用程序<br>快速、强大、便捷<br>可运行数千种 Windows 应用程序，如 Microsoft Office、Internet Explorer、Access、Quicken、QuickBooks、Visual Studio，甚至支持对图像要求较高的游戏和 CAD 项目，而不影响任何性能且无需重启。</p></blockquote><video src='https://www.parallels.cn/fileadmin/res/video/pd/pd17/drag_and_drop.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'></video>        <h2 id="支持-Apple-M1-芯片"   >          <a href="#支持-Apple-M1-芯片" class="heading-link"><i class="fas fa-link"></i></a><a href="#支持-Apple-M1-芯片" class="headerlink" title="支持 Apple M1 芯片"></a>支持 Apple M1 芯片</h2>      <p>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/4d3f1c68492e4b12bee685ddfbac704f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p>        <h2 id="破解教程点这里"   >          <a href="#破解教程点这里" class="heading-link"><i class="fas fa-link"></i></a><a href="#破解教程点这里" class="headerlink" title="破解教程点这里 "></a>破解教程<a href="/2021/06/24/20210624-1/">点这里 </a></h2>      ]]></content>
    
    
    <summary type="html">&lt;p&gt;
        &lt;img     class=&quot;lazyload lazyload-gif&quot;
          src=&quot;/images/loading.svg&quot; data-src=&quot;https://img-blog.csdnimg.cn/c9c7ac26f2814719923ab34c395f2d99.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16&quot;  style=&quot;width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;&quot;  alt=&quot;在这里插入图片描述&quot;&gt;
      &lt;/p&gt;</summary>
    
    
    
    <category term="Mac" scheme="https://adymilk.github.io/categories/Mac/"/>
    
    
    <category term="Mac" scheme="https://adymilk.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>【强烈推荐】hexo 图片生成外链最佳解决办法</title>
    <link href="https://adymilk.github.io/2021/09/08/20210908-8/"/>
    <id>https://adymilk.github.io/2021/09/08/20210908-8/</id>
    <published>2021-09-08T03:53:48.000Z</published>
    <updated>2021-09-08T08:48:01.355Z</updated>
    
    <content type="html"><![CDATA[<p>用hexo 写博客最麻烦的就是图片图片外链的问题了，之前也尝试过七牛云存储,新浪云，亦或者是自己把图片上传的博客根目录下的source 文件夹内等等，最终仍然无法解决快捷写博客的痛点。因为通常我们都习惯在文章中放几张截图，比如代码异常报错信息。通常以往的操作都是保存截图到本地，然后上传到七牛云或者github或者码云 ,这期间必须要把图片保存下来才可以生成一个图片外链。实在是太麻烦了，今天我就给出一个新的解决方案！</p><span id="more"></span><p>效果展示        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/d3ea2bb532b142fab7bbb2511c6cdd93.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p><p>最近我发现在CSDN 写博客倒是挺方便的啊，他的编辑器可以直接粘贴截图后自动生成markdown 图片，这样的话就大大方便了我们去生成图片上传的过程。而且还省去了购买云存储资源，实在是一个不错的方法/</p><p>在CSDN 的编辑器写完文章后，直接复制到hexo 大功告成！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;用hexo 写博客最麻烦的就是图片图片外链的问题了，之前也尝试过七牛云存储,新浪云，亦或者是自己把图片上传的博客根目录下的source 文件夹内等等，最终仍然无法解决快捷写博客的痛点。因为通常我们都习惯在文章中放几张截图，比如代码异常报错信息。通常以往的操作都是保存截图到本地，然后上传到七牛云或者github或者码云 ,这期间必须要把图片保存下来才可以生成一个图片外链。实在是太麻烦了，今天我就给出一个新的解决方案！&lt;/p&gt;</summary>
    
    
    
    <category term="代码笔记" scheme="https://adymilk.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo 实现主页每日一言功能</title>
    <link href="https://adymilk.github.io/2021/09/08/20210908-7/"/>
    <id>https://adymilk.github.io/2021/09/08/20210908-7/</id>
    <published>2021-09-08T03:49:59.000Z</published>
    <updated>2021-09-08T08:48:13.326Z</updated>
    
    <content type="html"><![CDATA[<p>[API]今日诗词 - 每日一句，一款优质的一言API<br>每次返回一句诗词<br>根据时间、地点、天气、事件智能推荐<br>支持图片和 JSON 格式调用，一分钟快速部署</p><span id="more"></span><p>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/6c45b4ee7d404573a43215994120026e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p>        <h2 id="图片形式调用"   >          <a href="#图片形式调用" class="heading-link"><i class="fas fa-link"></i></a><a href="#图片形式调用" class="headerlink" title="图片形式调用"></a>图片形式调用</h2>      <blockquote><p>调用地址为：<span class="exturl"><a class="exturl__link"   href="https://v2.jinrishici.com/one.svg" >https://v2.jinrishici.com/one.svg</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></blockquote><p>如果需要自定义图片的文字的大小、间距、颜色，可以在图片地址后面加参数。</p><p>例如：</p><blockquote><p><span class="exturl"><a class="exturl__link"   href="https://v2.jinrishici.com/one.svg?font-size=20&amp;spacing=2&amp;color=blue" >https://v2.jinrishici.com/one.svg?font-size=20&amp;spacing=2&amp;color=blue</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></blockquote>        <h2 id="文字形式调用"   >          <a href="#文字形式调用" class="heading-link"><i class="fas fa-link"></i></a><a href="#文字形式调用" class="headerlink" title="文字形式调用"></a>文字形式调用</h2>      <p>第一步 ，你需要在网站的 </body> 之前放置快速加载 JS 文件：</p><script src="https://sdk.jinrishici.com/v2/browser/jinrishici.js" charset="utf-8"></script><p>第二步，在你需要放置诗词的地方，直接复制下面的代码到需要插入的地方：</p><p><span id="jinrishici-sentence">正在加载今日诗词….</span></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>这个网站推荐 <span class="exturl"><a class="exturl__link"   href="https://www.jinrishici.com/" >https://www.jinrishici.com/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> 有很详细的文档<br>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/96ef02f6c5484beba2754afe6bdaa2ad.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[API]今日诗词 - 每日一句，一款优质的一言API&lt;br&gt;每次返回一句诗词&lt;br&gt;根据时间、地点、天气、事件智能推荐&lt;br&gt;支持图片和 JSON 格式调用，一分钟快速部署&lt;/p&gt;</summary>
    
    
    
    <category term="代码笔记" scheme="https://adymilk.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo 实现主页每天自动更新一个背景图</title>
    <link href="https://adymilk.github.io/2021/09/08/20210908-6/"/>
    <id>https://adymilk.github.io/2021/09/08/20210908-6/</id>
    <published>2021-09-08T03:17:39.000Z</published>
    <updated>2021-09-09T07:26:39.033Z</updated>
    
    <content type="html"><![CDATA[<p>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/d46e128e1f3b463fb75435f49bad84b3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p><p>实现的方法其实很简单，用的是必应提供的一个免费的接口。<br>该接口每天会自动更新一张美图，我们把这个接口用作我们网站的背景图，即可实现每日自动更新一个背景！是不是很方便啊！</p><span id="more"></span>        <h2 id="必应每日一图API"   >          <a href="#必应每日一图API" class="heading-link"><i class="fas fa-link"></i></a><a href="#必应每日一图API" class="headerlink" title="必应每日一图API"></a>必应每日一图API</h2>      <p>图片来源是bing每日一图。<br>每天给用户提供一张不同的图片，每个月有一个属于自己的主题。支持https。</p><p>api地址：<span class="exturl"><a class="exturl__link"   href="https://api.mfstudio.cc/bing/" >https://api.mfstudio.cc/bing/</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>效果展示<br>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/c83ac4a5fc8f4d7ca75b91c0587277b8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16"  style="width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;"  alt="在这里插入图片描述">      </p>        <h3 id="应用举例"   >          <a href="#应用举例" class="heading-link"><i class="fas fa-link"></i></a><a href="#应用举例" class="headerlink" title="应用举例"></a>应用举例</h3>      <p>我是在我的hexo 博客的根目录下 <code>_config.yml</code> 文件中配置的，如下</p><figure class="highlight plaintext"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bg_image:</span><br><span class="line">    enable: true</span><br><span class="line">    # In theme directory (source/images): /images/avatar.png</span><br><span class="line">    # In site directory (source/uploads): /uploads/avatar.png</span><br><span class="line">    # You can also use a link of image. 接口地址</span><br><span class="line">    url: https://api.mfstudio.cc/bing/</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;
        &lt;img     class=&quot;lazyload lazyload-gif&quot;
          src=&quot;/images/loading.svg&quot; data-src=&quot;https://img-blog.csdnimg.cn/d46e128e1f3b463fb75435f49bad84b3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,x_16&quot;  style=&quot;width: image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,tepx;height: t_Q1NETiBA5bCP5p6rdmlw,size_20,color_FFFFFF,t_70,g_se,px;&quot;  alt=&quot;在这里插入图片描述&quot;&gt;
      &lt;/p&gt;
&lt;p&gt;实现的方法其实很简单，用的是必应提供的一个免费的接口。&lt;br&gt;该接口每天会自动更新一张美图，我们把这个接口用作我们网站的背景图，即可实现每日自动更新一个背景！是不是很方便啊！&lt;/p&gt;</summary>
    
    
    
    <category term="代码笔记" scheme="https://adymilk.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>JavaScript Promise 对象的使用</title>
    <link href="https://adymilk.github.io/2021/09/08/20210908-5/"/>
    <id>https://adymilk.github.io/2021/09/08/20210908-5/</id>
    <published>2021-09-08T02:51:42.000Z</published>
    <updated>2021-09-08T04:08:46.474Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>ECMAscript 6 原生新增了 Promise 对象</p></blockquote><p>下面我们来一起看一看 Promise 的用法和使用场景</p>        <h2 id="1、Promise-的作用是什么？"   >          <a href="#1、Promise-的作用是什么？" class="heading-link"><i class="fas fa-link"></i></a><a href="#1、Promise-的作用是什么？" class="headerlink" title="1、Promise 的作用是什么？"></a>1、Promise 的作用是什么？</h2>      <blockquote><p>简单理解：它是用来处理异步操作的，用来传递异步操作的消息</p></blockquote><span id="more"></span><p>1.1 下面我们来看一段代码</p><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//resove和reject 是形参，可以自定义参数名</span></span><br><span class="line"><span class="keyword">var</span> myPromiseDemo = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve,reject</span>)</span>&#123;</span><br><span class="line"><span class="comment">//这里写需要异步执行的函数,如果testFun() 方法执行完成,会调用形参resove函数返回testFun 返回结果，否则调用reject函数</span></span><br><span class="line"><span class="comment">//模拟异步</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> myDate = testFun();</span><br><span class="line"><span class="comment">//返回数据</span></span><br><span class="line">resolve(myDate);</span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用我们定义的 Promise</span></span><br><span class="line">myPromise.then(<span class="function"><span class="params">p</span>=&gt;</span>&#123;</span><br><span class="line"><span class="comment">//接收异步函数返回结果，这里会打印出testFun函数的返回值</span></span><br><span class="line"><span class="built_in">console</span>.log(p);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义测试函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testFun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;测试函数返回数据&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>        <h3 id="2、Promise-优缺点"   >          <a href="#2、Promise-优缺点" class="heading-link"><i class="fas fa-link"></i></a><a href="#2、Promise-优缺点" class="headerlink" title="2、Promise 优缺点"></a>2、Promise 优缺点</h3>      <blockquote><p>有了 Promise 对象，就可以将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数。此外，Promise 对象提供统一的接口，使得控制异步操作更加容易。<br>Promise 也有一些缺点。首先，无法取消 Promise，一旦新建它就会立即执行，无法中途取消。其次，如果不设置回调函数，Promise 内部抛出的错误，不会反应到外部。第三，当处于 Pending 状态时，无法得知目前进展到哪一个阶段（刚刚开始还是即将完成）。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;ECMAscript 6 原生新增了 Promise 对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面我们来一起看一看 Promise 的用法和使用场景&lt;/p&gt;

        &lt;h2 id=&quot;1、Promise-的作用是什么？&quot;   &gt;
          &lt;a href=&quot;#1、Promise-的作用是什么？&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#1、Promise-的作用是什么？&quot; class=&quot;headerlink&quot; title=&quot;1、Promise 的作用是什么？&quot;&gt;&lt;/a&gt;1、Promise 的作用是什么？&lt;/h2&gt;
      &lt;blockquote&gt;
&lt;p&gt;简单理解：它是用来处理异步操作的，用来传递异步操作的消息&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="代码笔记" scheme="https://adymilk.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Laravel DB::transaction 方式如何传参</title>
    <link href="https://adymilk.github.io/2021/09/08/20210908-4/"/>
    <id>https://adymilk.github.io/2021/09/08/20210908-4/</id>
    <published>2021-09-08T02:50:03.000Z</published>
    <updated>2021-09-08T04:08:50.498Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>今天在使用 Laravel 的事务的时候，一直报变量未定义的错误</p></blockquote><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$order_id</span> = 12;</span><br><span class="line"></span><br><span class="line">DB::transaction(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line"><span class="variable">$tmp</span> = <span class="variable">$order_id</span>;</span><br><span class="line">&#125;);</span><br><span class="line">Undefined variable: order_id</span><br></pre></td></tr></table></div></figure><p>仔细一看，才发现这是个匿名函数</p><span id="more"></span><p>匿名函数<br>所以正确的使用方式是</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$order_id</span> = 12;</span><br><span class="line"></span><br><span class="line">DB::transaction(<span class="keyword">function</span> () use (<span class="variable">$order_id</span>) &#123;</span><br><span class="line"><span class="variable">$tmp</span> = <span class="variable">$order_id</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></div></figure><p>参数写在哪里，第一个括号还是第二个括号<br>这是第二次见到 PHP 的匿名函数，所以比较新鲜。。。</p><p>看官方的示例</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Closures can also accept regular arguments</span></span><br><span class="line"><span class="variable">$example</span> = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$arg</span></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$message</span></span>) </span>&#123;</span><br><span class="line">    var_dump(<span class="variable">$arg</span> . <span class="string">&#x27; &#x27;</span> . <span class="variable">$message</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$example</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span>(<span class="number">11</span>) <span class="string">&quot;hello world&quot;</span></span><br></pre></td></tr></table></div></figure><p>可见，</p><p>第一个括号里的参数是留给调用者的<br>第二个括号，即 use 后的括号是用来继承上下文的</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;今天在使用 Laravel 的事务的时候，一直报变量未定义的错误&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;div class=&quot;table-container&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$order_id&lt;/span&gt; = 12;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DB::transaction(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;function&lt;/span&gt;&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;variable&quot;&gt;$tmp&lt;/span&gt; = &lt;span class=&quot;variable&quot;&gt;$order_id&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Undefined variable: order_id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;

&lt;p&gt;仔细一看，才发现这是个匿名函数&lt;/p&gt;</summary>
    
    
    
    <category term="Laravel" scheme="https://adymilk.github.io/categories/Laravel/"/>
    
    
    <category term="Laravel" scheme="https://adymilk.github.io/tags/Laravel/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 反爬虫</title>
    <link href="https://adymilk.github.io/2021/09/08/20210908-3/"/>
    <id>https://adymilk.github.io/2021/09/08/20210908-3/</id>
    <published>2021-09-08T02:49:10.000Z</published>
    <updated>2021-09-08T02:50:54.182Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>今日头条蜘蛛疯狂抓取导致cpu爆满，这个蜘蛛真是太残忍了，抓取的频率太高了，而在今日头条内会屏蔽网站内的所有广告，所以这种抓取没什么用，都形成CC攻击了。</p></blockquote><span id="more"></span><p>最近网站访问明显慢了很多，阿里云一整就给我网站拉进小黑屋，看了网站监控发现都是今日头条抓取，本来我没想管，但是抓取频率超过了基础防火墙而且CPU爆满</p><p>禁止了立马好了。</p><p>我的服务器是4H4G20M带宽，本来也就一千多人访问，通过监控软件查看居然达到了六万。太疯狂了</p><p>nginx在站点的设置，配置文件中 server{ } 中添加</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#禁止爬虫工具的抓取</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">&quot;Bytespider|FISPIDER|YisouSpider&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">403</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></div></figure><p>Appache:<br>在伪静态里设置 这里以thinkphp为例！</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteEngine on</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">RewriteRule ^(.*)$ index.php [L,E=PATH_INFO:<span class="variable">$1</span>]</span><br><span class="line"><span class="comment">#禁止爬虫工具的抓取</span></span><br><span class="line">RewriteCond %&#123;HTTP_USER_AGENT&#125; <span class="string">&quot;^.*FISPIDER.*|.*YisouSpider.*$&quot;</span> [NC]</span><br><span class="line">RewriteRule ^(.*)$ - [R=404,L]</span><br><span class="line"></span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></div></figure><p>配置完不用重启,就能生效!</p><p>记录</p><p>#禁止爬虫工具的抓取</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">&quot;Bytespider|FISPIDER|AhrefsBot|SemrushBot|MJ12bot&quot;</span>) &#123;</span><br><span class="line"><span class="built_in">return</span> 403;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;今日头条蜘蛛疯狂抓取导致cpu爆满，这个蜘蛛真是太残忍了，抓取的频率太高了，而在今日头条内会屏蔽网站内的所有广告，所以这种抓取没什么用，都形成CC攻击了。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="代码笔记" scheme="https://adymilk.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Ngnix" scheme="https://adymilk.github.io/tags/Ngnix/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 自定义公共函数报错 Call to undefined function App\Http\Controllers\success()</title>
    <link href="https://adymilk.github.io/2021/09/08/20210908-2/"/>
    <id>https://adymilk.github.io/2021/09/08/20210908-2/</id>
    <published>2021-09-08T02:45:27.000Z</published>
    <updated>2021-09-08T02:48:54.884Z</updated>
    
    <content type="html"><![CDATA[<p>今天在写PHP的时候遇到了一个不曾有过的问题，就是在项目应用下写个公共文件，在控制器内能够访问到的，但是今天写了这个之后控制器不能访问，于是就开启了解决问题的道路。</p><span id="more"></span><p>这个主要就是需要配置一下，打开你项目的composer.json文件，然后在autoLoad里面添加上你的公共文件路径：</p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;autoload&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;psr-4&quot;</span>: &#123;</span><br><span class="line">         <span class="string">&quot;App\\&quot;</span>: <span class="string">&quot;app/&quot;</span>,</span><br><span class="line">         <span class="string">&quot;Database\\Factories\\&quot;</span>: <span class="string">&quot;database/factories/&quot;</span>,</span><br><span class="line">         <span class="string">&quot;Database\\Seeders\\&quot;</span>: <span class="string">&quot;database/seeders/&quot;</span></span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="string">&quot;files&quot;</span>:[</span><br><span class="line">         <span class="string">&quot;app/common.php&quot;</span></span><br><span class="line">     ]</span><br><span class="line"> &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p>然后再执行一下：composer dump-autoload 就OK了</p><p>完美解决~</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天在写PHP的时候遇到了一个不曾有过的问题，就是在项目应用下写个公共文件，在控制器内能够访问到的，但是今天写了这个之后控制器不能访问，于是就开启了解决问题的道路。&lt;/p&gt;</summary>
    
    
    
    <category term="Laravel" scheme="https://adymilk.github.io/categories/Laravel/"/>
    
    
    <category term="Laravel" scheme="https://adymilk.github.io/tags/Laravel/"/>
    
  </entry>
  
  <entry>
    <title>laravel Table ‘users‘ already exists</title>
    <link href="https://adymilk.github.io/2021/09/08/20210908-1/"/>
    <id>https://adymilk.github.io/2021/09/08/20210908-1/</id>
    <published>2021-09-08T02:36:17.000Z</published>
    <updated>2021-09-08T02:48:00.317Z</updated>
    
    <content type="html"><![CDATA[        <h2 id="标题报错如下图"   >          <a href="#标题报错如下图" class="heading-link"><i class="fas fa-link"></i></a><a href="#标题报错如下图" class="headerlink" title="标题报错如下图"></a>标题报错如下图</h2>      <p>        <img     class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210603110244962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NTkwODc5,size_16,color_FFFFFF,t_70#pic_center"  style="width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;"  alt="在这里插入图片描述">      </p><span id="more"></span>        <h2 id="标题解决方案："   >          <a href="#标题解决方案：" class="heading-link"><i class="fas fa-link"></i></a><a href="#标题解决方案：" class="headerlink" title="标题解决方案："></a>标题解决方案：</h2>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">function</span> <span class="function"><span class="title">up</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        Schema::dropIfExists(<span class="string">&#x27;users&#x27;</span>);//增加这一条语句，即可解决问题</span><br><span class="line">        Schema::create(<span class="string">&#x27;users&#x27;</span>, <span class="keyword">function</span> (Blueprint <span class="variable">$table</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span>-&gt;id();</span><br><span class="line">            <span class="variable">$table</span>-&gt;string(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">            <span class="variable">$table</span>-&gt;string(<span class="string">&#x27;email&#x27;</span>)-&gt;unique();</span><br><span class="line">            <span class="variable">$table</span>-&gt;timestamp(<span class="string">&#x27;email_verified_at&#x27;</span>)-&gt;nullable();</span><br><span class="line">            <span class="variable">$table</span>-&gt;string(<span class="string">&#x27;password&#x27;</span>);</span><br><span class="line">            <span class="variable">$table</span>-&gt;rememberToken();</span><br><span class="line">            <span class="variable">$table</span>-&gt;timestamps();</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;标题报错如下图&quot;   &gt;
          &lt;a href=&quot;#标题报错如下图&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#标题报错如下图&quot; class=&quot;headerlink&quot; title=&quot;标题报错如下图&quot;&gt;&lt;/a&gt;标题报错如下图&lt;/h2&gt;
      &lt;p&gt;
        &lt;img     class=&quot;lazyload lazyload-gif&quot;
          src=&quot;/images/loading.svg&quot; data-src=&quot;https://img-blog.csdnimg.cn/20210603110244962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NTkwODc5,size_16,color_FFFFFF,t_70#pic_center&quot;  style=&quot;width: image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,tepx;height: t_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Fpx;&quot;  alt=&quot;在这里插入图片描述&quot;&gt;
      &lt;/p&gt;</summary>
    
    
    
    <category term="Laravel" scheme="https://adymilk.github.io/categories/Laravel/"/>
    
    
    <category term="Laravel" scheme="https://adymilk.github.io/tags/Laravel/"/>
    
  </entry>
  
  <entry>
    <title>laravel socket 实现万物互联</title>
    <link href="https://adymilk.github.io/2021/09/07/20210901/"/>
    <id>https://adymilk.github.io/2021/09/07/20210901/</id>
    <published>2021-09-07T07:05:29.000Z</published>
    <updated>2021-09-07T07:46:33.904Z</updated>
    
    <content type="html"><![CDATA[<p>laravel socket 实现万物互联</p><span id="more"></span><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://ably.com/packs/media/assets/home/publish-subscribe-with-presence-76e2a9920ed917be3f9e2157d624239f.svg" >      </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;laravel socket 实现万物互联&lt;/p&gt;</summary>
    
    
    
    <category term="Minitab" scheme="https://adymilk.github.io/categories/Minitab/"/>
    
    
    <category term="Minitab" scheme="https://adymilk.github.io/tags/Minitab/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 模型取出来的时间和数据库存储的时间不一致</title>
    <link href="https://adymilk.github.io/2021/07/09/20210903-1/"/>
    <id>https://adymilk.github.io/2021/07/09/20210903-1/</id>
    <published>2021-07-09T07:05:29.000Z</published>
    <updated>2021-09-08T04:12:49.282Z</updated>
    
    <content type="html"><![CDATA[<p>laravel 模型取出来的时间和数据库存储的时间不一致</p><p>laravel 8 默认的时区是 美国时间，需要手动在.ENV 这样增加配置</p><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">APP_TIMEZONE=PRC</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;laravel 模型取出来的时间和数据库存储的时间不一致&lt;/p&gt;
&lt;p&gt;laravel 8 默认的时区是 美国时间，需要手动在.ENV 这样增加配置&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;div class=&quot;table-container&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;APP_TIMEZONE=PRC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Minitab" scheme="https://adymilk.github.io/categories/Minitab/"/>
    
    
    <category term="Minitab" scheme="https://adymilk.github.io/tags/Minitab/"/>
    
  </entry>
  
  <entry>
    <title>Minitab 二次开发实时生成控制图</title>
    <link href="https://adymilk.github.io/2021/06/29/20210629-1/"/>
    <id>https://adymilk.github.io/2021/06/29/20210629-1/</id>
    <published>2021-06-29T07:05:29.000Z</published>
    <updated>2021-09-07T07:46:36.853Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>minitab 是一个非常不错的数据分析软件，简单易用，功能强大！有兴趣可以<span class="exturl"><a class="exturl__link"   href="https://www.minitab.com/zh-cn/support/downloads/" >下载试用</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></blockquote><p>本文将介绍如何通过调用 Minitab 接口实现实时spc 控制图</p><span id="more"></span><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://techmax.com.cn/uploadfile/2021/0226/20210226105352646.jpg" >      </p><video src='https://techmax.com.cn/public/spc.mp4' type='video/mp4' controls='controls'  width='100%' height='100%'></video>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;minitab 是一个非常不错的数据分析软件，简单易用，功能强大！有兴趣可以&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;https://www.minitab.com/zh-cn/support/downloads/&quot; &gt;下载试用&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文将介绍如何通过调用 Minitab 接口实现实时spc 控制图&lt;/p&gt;</summary>
    
    
    
    <category term="Minitab" scheme="https://adymilk.github.io/categories/Minitab/"/>
    
    
    <category term="Minitab" scheme="https://adymilk.github.io/tags/Minitab/"/>
    
  </entry>
  
  <entry>
    <title>Parallels Desktop 目前最佳永久使用方法</title>
    <link href="https://adymilk.github.io/2021/06/24/20210624-1/"/>
    <id>https://adymilk.github.io/2021/06/24/20210624-1/</id>
    <published>2021-06-24T02:15:48.000Z</published>
    <updated>2021-09-09T07:35:19.294Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="cd6b1a4fea76c08a60f3d2d2b578f5bdb3309c1251bb4bfdd78b5d4829f5cac0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    <category term="Mac" scheme="https://adymilk.github.io/categories/Mac/"/>
    
    
    <category term="Mac" scheme="https://adymilk.github.io/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Laravel8 配置修改不生效，缓存问题解决方案</title>
    <link href="https://adymilk.github.io/2021/06/23/20210623-2/"/>
    <id>https://adymilk.github.io/2021/06/23/20210623-2/</id>
    <published>2021-06-23T03:35:30.000Z</published>
    <updated>2021-06-24T04:16:36.580Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel 发布到服务器上之后，后面修改了配置后，页面读取的还是旧的配置。 最终问题解决是通过执行如下命令清除配置缓存</p><span id="more"></span><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">php artisan config:clear</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><p><span class="exturl"><a class="exturl__link"   href="https://laravel.com/docs/8.x/deployment#optimizing-configuration-loading" >https://laravel.com/docs/8.x/deployment#optimizing-configuration-loading</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>这个问题在官网文档已经说明，仔细阅读文档</p><blockquote><p>When deploying your application to production, you should make sure that you run the config:cache Artisan command during your deployment process:</p></blockquote><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php artisan config:cache</span><br><span class="line"></span><br></pre></td></tr></table></div></figure><blockquote><p>If you are building a large application with many routes, you should make sure that you are running the route:cache Artisan command during your deployment process:</p></blockquote><figure class="highlight php"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php artisan route:cache</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Laravel 发布到服务器上之后，后面修改了配置后，页面读取的还是旧的配置。 最终问题解决是通过执行如下命令清除配置缓存&lt;/p&gt;</summary>
    
    
    
    <category term="Laravel" scheme="https://adymilk.github.io/categories/Laravel/"/>
    
    
    <category term="Laravel" scheme="https://adymilk.github.io/tags/Laravel/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号token 验证失败解决方案</title>
    <link href="https://adymilk.github.io/2021/06/23/20210623-1/"/>
    <id>https://adymilk.github.io/2021/06/23/20210623-1/</id>
    <published>2021-06-23T03:21:32.000Z</published>
    <updated>2021-06-24T04:16:46.647Z</updated>
    
    <content type="html"><![CDATA[<p>最近在做微信公众号开发的时候遇到一个token 验证失败的问题，折腾了好久。最终解决了。这里特别记录一下，给接下来的小伙伴填坑，少走弯路。</p><span id="more"></span><p>token 验证失败 其实官网论坛发现遇到这个问题的人有很多，我最终是把 https 换成 http 之后，微信服务器验证通过。</p><p>估计是我用的是证书不行吧，后来我又试了宝塔上面的免费证书，也没有任何问题！</p><p>微信公众号开发，推荐使用 easyWechat 这个框架，简单易用。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在做微信公众号开发的时候遇到一个token 验证失败的问题，折腾了好久。最终解决了。这里特别记录一下，给接下来的小伙伴填坑，少走弯路。&lt;/p&gt;</summary>
    
    
    
    <category term="微信公众号" scheme="https://adymilk.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
    
    <category term="微信公众号" scheme="https://adymilk.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>数据科学</title>
    <link href="https://adymilk.github.io/2020/07/14/20200715-1/"/>
    <id>https://adymilk.github.io/2020/07/14/20200715-1/</id>
    <published>2020-07-14T13:09:00.000Z</published>
    <updated>2021-06-20T09:47:37.641Z</updated>
    
    <content type="html"><![CDATA[<p>数据科学最近成为计算机的热门领域。数据科学是利用计算机的运算能力对数据进行处理，从数据中提取信息，进而形成“知识”。它已经影响了计算机视觉、信号处理、自然语言识别等计算机分支。数据科学已经在IT、金融、医学、自动驾驶等领域得到广泛使用。(如果你熟知中情局的棱镜泄密事件，你会发现数据科学已经在情报领域广泛使用。)</p><span id="more"></span><p>近期的工作一直在研究统计学软件，对数据分析领域略有研究。才发现统计怎么让用户的数据会说话。统计用样本估计总体，用模型预测未来。</p><p>Minitab 软件本身开放的是C# 的COM 组件接口，一般的开发者可以通过C# 调用Minitab 的数据分析能力。这种COM 组件的是无法被WEB程序调用的。于是我经过一点时间的研究，写了一个 Windows 服务，开机后自动运行。然后不断的请求一个http 接口，进行获取数据。该接口中可以定义很多变量作为参数，比如，分析类型，子组大小，判异原则等。</p><p>windows 服务接受到数据和参数后，会自动调用Minitab COM 组件接口进行统计分析，生成相应的分析图行和文字说明。</p><p>前端每次调用web接口的时候，必须传递一个唯一标识OrderID,实际上就是向数据库写入一条记录。之后前端在循环查找OrderID的结果。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;数据科学最近成为计算机的热门领域。数据科学是利用计算机的运算能力对数据进行处理，从数据中提取信息，进而形成“知识”。它已经影响了计算机视觉、信号处理、自然语言识别等计算机分支。数据科学已经在IT、金融、医学、自动驾驶等领域得到广泛使用。(如果你熟知中情局的棱镜泄密事件，你会发现数据科学已经在情报领域广泛使用。)&lt;/p&gt;</summary>
    
    
    
    
    <category term="生活笔记" scheme="https://adymilk.github.io/tags/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序入门唠嗑第一课</title>
    <link href="https://adymilk.github.io/2018/11/26/20181126/"/>
    <id>https://adymilk.github.io/2018/11/26/20181126/</id>
    <published>2018-11-26T12:33:00.000Z</published>
    <updated>2021-06-24T05:56:06.307Z</updated>
    
    <content type="html"><![CDATA[        <h3 id="如何理解微信小程序"   >          <a href="#如何理解微信小程序" class="heading-link"><i class="fas fa-link"></i></a><a href="#如何理解微信小程序" class="headerlink" title="如何理解微信小程序"></a>如何理解微信小程序</h3>      <p>在学习微信小程序开发之前，首先我们要大致了解一个概念。微信小程序和传统安卓在手机上的程序（App) 有什么区别？</p><span id="more"></span><p><strong>传统手机APP</strong>：有独立的安装包，必须安装在手机上才可以使用！<br><strong>微信小程序</strong>：依赖于微信APP，必须在微信内部才可以使用！</p><p>微信小程序其实啊，它并不是新兴产物。早在5年前的 <code>html5</code> 时代就已经开始孕育了。为啥这么说呢? 客观不要着急，你先吃点瓜子点心，且听我给你慢慢道来！</p><p>如果你平时玩手机比较细心的话，你可能会发现。当我们在微信或者朋友圈点开一个链接的时候。有些链接跳转过去竟然是一个无与伦比美丽的APP，比如在微信里打开京东的网站（jd.com)<br>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="/img/20181126-2.jpg"  alt="京东">      <br><strong>这是微信内部打开的京东商城</strong></p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="/img/20181126-3.png"  alt="京东">      <br><strong>这是京东APP打开的京东商城</strong></p><p>一个是微信内部打开的京东首页，一个是京东APP打开的京东首页。是不是二者几乎没有差别。我记得好像微信内部一直都有为京东提供这样一个特殊服务。（刘强东到底和马化腾做了什么PY交易，微信对京东这些年的支持从来就没断过）。从京东在微信内部这个以与众不同的平台来分析，你就会明白其实微信小程序这个如意算盘早就在谋划了。这就好像马云曾经公开针对京东说的一句能够让刘强东听了吐血的话，</p><blockquote><p>阿里巴巴的存在即是为了培养更多的京东</p></blockquote><p><strong>刘强东：nmmp。。。。</strong></p><p>实际上京东和阿里是两个势均力敌的竞争对手！</p><p>这也就是为什么这么多年来，微信里面只有京东网站而淘宝的网站链接每次点击都是访问失败！让你复制到浏览器打开的原因。<br>你在微信里面买东西，不管是在京东，拼夕夕，唯美会，聚美优品….什么什什么付款的从来都没有支付宝支付的选项。有时候你确实微信里没钱，想用支付宝，这就很尴尬了。（这个时候我就会打开微信朋友圈，看看谁最新发布了动态，然后找他微信借钱2333333.）</p><p>好了，牛逼越哈越远了。回到我们今天的主题！微信小程序到底是不是程序？</p><blockquote><p>核心理念：<br>小程序是一种不需要下载安装即可使用的应用，它实现了应用『触手可及』的梦想，用户扫一扫或搜一搜即可打开应用。也体现了『用完即走』的理念，用户不关心是否安装太多应用的问题。应用将无处不在，随时可用，但又无需安装卸载。<br>微信创始人：张小龙</p></blockquote><p>我的答案：勉强算是小程序吧，但绝对不是APP！</p><p>小程序这个叫法，其实就是微信内部一厢情愿的叫法。后来树大招风，店大欺客。没办法，人家在自己内部制定了一个规则，并且取名一个一个新的语言叫做<br>①WXML(WeiXin Mark Language，微信标记语言)<br>②WXSS(WeiXin Style Sheet，微信样式表)</p><p>③JS作为小程序的逻辑语言(Java，小程序的主体)</p><p>如果你之前的前端基础比较好的话，你对于微信小程序学习起来上手会非常快！</p>        <h2 id="小程序简要分析"   >          <a href="#小程序简要分析" class="heading-link"><i class="fas fa-link"></i></a><a href="#小程序简要分析" class="headerlink" title="小程序简要分析"></a>小程序简要分析</h2>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://ws2.sinaimg.cn/large/9ac1c132jw1f89ht2sqa0j21640p0q8y.jpg"  alt="小程序目录结构分析">      </p><ul><li>全局配置文件<br>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://ws3.sinaimg.cn/large/9ac1c132jw1f89htxlj2wj20rb09sjs4.jpg"  alt="全局配置文件">      </li></ul>        <h2 id="小程序的优点"   >          <a href="#小程序的优点" class="heading-link"><i class="fas fa-link"></i></a><a href="#小程序的优点" class="headerlink" title="小程序的优点"></a>小程序的优点</h2>      <ul><li>比传统的 Hybird 应用在操作体验上，它具有更快、更流畅的应用体验，摆脱混合应用对浏览器性能的依赖且能够调用系统原生接口，有一定的数据缓存能力。</li><li>比 React Native 类应用，更轻量级。</li><li>比 Native App ，则胜在开发周期短、投入成本低、使用便捷，且依托微信庞大的用户基础和粘性，可以迅速引流，验证产品模式和用户需求。</li></ul>        <h2 id="小程序的缺点"   >          <a href="#小程序的缺点" class="heading-link"><i class="fas fa-link"></i></a><a href="#小程序的缺点" class="headerlink" title="小程序的缺点"></a>小程序的缺点</h2>      <ul><li>目前限制应用包大小为 1024 kb 。</li><li>微信开放接口 API 较少。</li><li>仅限于小应用的能力，想要实现复杂应用能力上还不足。</li><li>在多层级使用场景以及需要跳转类的需求上劣势明显。</li><li>不支持 A 标签，无法打开普通网页。</li></ul>        <h2 id="总结"   >          <a href="#总结" class="heading-link"><i class="fas fa-link"></i></a><a href="#总结" class="headerlink" title="总结"></a>总结</h2>      <p>小程序在开发上不具有太高难度，更要考量的是作为产品或服务的设计和使用场景的优化上，微信小程序的真正优势在于开发成本低、更快速的迭代，可以快速测试用户需求，而不是技术上的颠覆。对于创业者和小公司来说，是一个快速启动的方式。但对于希望走的更远的企业，原生或 RN 类 APP 目前还绕不过去，微信小程序只能作为一个产品填补式的存在，当然这些还需要具体产品具体规划。</p><p>通过上述信息我们可以这样认为，小程序是一个可通过 Web 技术栈开发，使用微信框架调用原生功能的类 Web 小应用，小体现在它本身的能力受微信的规则和框架的限制。这种形式仅仅在操作体验上优于传统 Hybird 开发的应用，与 React Native 开发复杂应用的能力要低太多，目前不在一个层次上。现阶段所展现的能力受限，随着用户和开发者的持续投入，微信也许会进一步释放它的能力，潜力较高。小程序如果在技术上可以获得强大的支持，对于低频应用（日历等小工具类以及其它形形色色的应用）或者应用使用场景（消费类浅层级应用使用场景）的补充，还是大有可为。</p>        <h2 id="学习方法"   >          <a href="#学习方法" class="heading-link"><i class="fas fa-link"></i></a><a href="#学习方法" class="headerlink" title="学习方法"></a>学习方法</h2>      <p>虽然小程序是一种类前端的代码，能够让学习者上手非常快，大大的节约了学习成本。但是要想把小程序做的出类拔萃，则需要学习者具备扎实的前端基础以及过硬的 <code>js</code> 技术。<br>小程序的开发架构也是最近比较流行的前后端分离的开发方式。后端程度提供一个数据接口为前端界面提供必要的数据支撑！前端也需要根据业务需要向后端发送数据请求！</p>        <h2 id="微信小程序文档"   >          <a href="#微信小程序文档" class="heading-link"><i class="fas fa-link"></i></a><a href="#微信小程序文档" class="headerlink" title="微信小程序文档"></a>微信小程序文档</h2>      <ul><li><span class="exturl"><a class="exturl__link"   href="https://developers.weixin.qq.com/miniprogram/dev/#%E4%BD%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%A8%8B%E5%BA%8F" >你的第一个小程序</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li><li><span class="exturl"><a class="exturl__link"   href="http://www.runoob.com/w3cnote/wx-xcx-repo.html" >微信小程序开发资源汇总</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></li></ul>        <h2 id="待续…"   >          <a href="#待续…" class="heading-link"><i class="fas fa-link"></i></a><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h2>      <p>哦，对了。给你讲个故事，从前有个人特别浪荡，他曾经说过这样一句话。</p><blockquote><p>如果哪一天你看到大街上一个戴着高礼帽黑礼服弹着吉他在演唱一首《当年情》的年轻人，那个人大概就是我了。请记得给我投一块钱。我这样开玩笑的和朋友说道。此时我的内心早已不能平静了。</p></blockquote><p>点击 <span class="exturl"><a class="exturl__link"   href="https://blog.adymilk.cn/2018/05/27/20180512/" >《生活虐我千百遍，我对生活如初恋》了解更多</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;如何理解微信小程序&quot;   &gt;
          &lt;a href=&quot;#如何理解微信小程序&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#如何理解微信小程序&quot; class=&quot;headerlink&quot; title=&quot;如何理解微信小程序&quot;&gt;&lt;/a&gt;如何理解微信小程序&lt;/h3&gt;
      &lt;p&gt;在学习微信小程序开发之前，首先我们要大致了解一个概念。微信小程序和传统安卓在手机上的程序（App) 有什么区别？&lt;/p&gt;</summary>
    
    
    
    <category term="代码笔记" scheme="https://adymilk.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="微信小程序" scheme="https://adymilk.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>手淘首页的3大核心权重</title>
    <link href="https://adymilk.github.io/2018/07/20/20180720-1/"/>
    <id>https://adymilk.github.io/2018/07/20/20180720-1/</id>
    <published>2018-07-20T03:45:43.000Z</published>
    <updated>2021-06-24T05:56:52.449Z</updated>
    
    <content type="html"><![CDATA[<p>手淘首页流量的爆发是围绕三个核心权重来的。核心权重主要决定了我们的宝贝的一些基础数据。</p><span id="more"></span><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="/img/20180720-1.jpg" >      </p>        <h2 id="三大核心权重的第1个：点击率。"   >          <a href="#三大核心权重的第1个：点击率。" class="heading-link"><i class="fas fa-link"></i></a><a href="#三大核心权重的第1个：点击率。" class="headerlink" title="三大核心权重的第1个：点击率。"></a>三大核心权重的第1个：点击率。</h2>      <p>如果连点击率都达不到要求的情况下，我们的宝贝是很难入池的。</p>        <h2 id="三大核心权重的第2个：收藏加购率和收藏加购量。"   >          <a href="#三大核心权重的第2个：收藏加购率和收藏加购量。" class="heading-link"><i class="fas fa-link"></i></a><a href="#三大核心权重的第2个：收藏加购率和收藏加购量。" class="headerlink" title="三大核心权重的第2个：收藏加购率和收藏加购量。"></a>三大核心权重的第2个：收藏加购率和收藏加购量。</h2>      <p>收藏加购率和收藏加购量是决定我们宝贝是否能够获取到手淘首页流量de 第二大权重。只有收藏加购率和收藏加购量达到了行业爆款的均值，我们才能够持续地获取手淘首页流量、持续地往上增长。</p>        <h2 id="三大核心权重的第3个：宝贝的成交能力。"   >          <a href="#三大核心权重的第3个：宝贝的成交能力。" class="heading-link"><i class="fas fa-link"></i></a><a href="#三大核心权重的第3个：宝贝的成交能力。" class="headerlink" title="三大核心权重的第3个：宝贝的成交能力。"></a>三大核心权重的第3个：宝贝的成交能力。</h2>      <p>我们的点击率优化得很好，我们收藏加购率也好，但是如果我们的宝贝只有流量不成交，这个时候我们手淘首页流量就会出现下滑的情况。</p><p>这也是大家在单品有时候会遇到这样的情况，比如说上了淘抢购活动之后，因为短期内有大量的收藏架构，导致了活动结束之后的2到3天之内会爆发几千甚至过万的手淘首页流量了，最终因为转化成交能力的不足，就导致了手淘首页流量不能持续的增长。</p><blockquote><p>点击率</p></blockquote><p>点击率是决定宝贝是否能够入池的一个标准，要想宝贝入池就必须要达到行业的均值。</p><p>因为我们主要是在猜你喜欢位置进行展现，这个位置，我们可以参考直通车流量解析工具推广词表下载下面有一个类目点击率，我们可以参考这个点击率，以我做猜你喜欢和手淘首页流量的经验看，用直通车定向推广的时候，我们的第一大要求就是我们单品在猜你喜欢的点击率必须要高于这个点击率！</p><p>我对于我团队的要求是创意图的点击率必须高于这个点击率的1.5-2倍，大家记住如果你回去在操作的过程当中发现你的猜你喜欢的点击率是类目点击率的1.5到2倍，那你的猜你喜欢是一定能够做好的。这是第一步，我们必须要去优化点击率。</p><p>很多同学会问到说：这个我的创意图点击率不高，不知道怎么去做一张高点击率的主图，怎么办？这里给大家一个参考：</p><p>去生意参谋当中的流量排行榜，生意参谋市场行情，商品店铺榜的下面有个流量排行榜，在流量排行榜当中，它是按流量指数进行排序，一般情况下流量指数非常高的，都是手淘首页爆发很高的。这个时候大家可以去逐步的去查看整个排行榜的宝贝，逐个分析，如果看到了手淘首页流量很大的宝贝，学习他的主图设计就可以了。</p><blockquote><p>收藏加购率和收藏架构量</p></blockquote><p>第二大核心权重是收藏加购率和收藏架构量。我们要在单品从选款开始就要去关注这个指标，不光是手淘首页、搜索、包括活动都要去考核这个基础数据。在生意参谋的商品效果当中，我们可以去分析和计算出来我们店铺当前宝贝的收藏率和加购率。</p><p>这里给大家强调一点：如果说是季节性很强的商品，我们可以参考最近7天数据；如果说季节性不强的标品，我们可以去参考最近30天的数据</p><p>用加购件数除以商品的访客数，基本上可以大致算出宝贝的加购率；收藏人数除以访客数再乘以百分之百，就是宝贝收藏率。这两个指标要达到行业平均值。</p><p>有同学会问行业平均值怎么算，是不是要去行业分析中分析，其实不用。就按照你店铺现有数据去进行对比，选择最优的宝贝再去优化。给大家分享一个优化的技巧：</p><p>大家看这个宝贝，这个是类目第一，在宝贝主图的第3张，做了这样的1张主图：“收藏加入购物车，下单送好礼！”。大家记记住他写的是“收藏加入购物车，下单送好礼！”。有很多小店写的是“收藏加购，送xxx”，这个是违规的，想一下我就收藏加购，但是我不拍，你是不是把礼品送给我？</p><p>记住，必须满足下单的条件。“因为赠品有限，请亲们收藏加购截图给客服登记，优先赠送发货。”</p><p>第一让买家收藏加购，第二提升了客户的询单，同时也提升了宝贝的访问深度和停留时间！</p><p>做了这样一张主图之后，这个店铺的老板跟我说，整个宝贝的收藏加购率在原有基础上提升了30%，所以说我建议大家在你的宝贝上都去做这样的活动。这是提升收藏加购率的一个小技巧。</p><blockquote><p>转化成交能力</p></blockquote><p>第三个核心指标是转化成交能力，也就是我们说的最多的产出。要想手淘首页流量持续地爆发或者持续稳定地增长，流量就一定要有产出，如果有流量不产出，那就是耍流氓。怎么去理解这句话，就是两个情侣天天在谈恋爱，最后没落实到实处，就是耍流氓。 </p><p>大家可以看我给大家的截图，手淘首页的流量体量最大，但是转化率很低，支付转化率只有0.6。我们看中间的一段数据，他的收藏人数和加购人数非常的大。</p><p>针对这种情况，我们和搜索对比完之后，我们发现它的转化率是低于搜索，但是手淘首页进来的流量最终转化我们要从购物车去进行转化，大家可以看到这张PPT当中购物车转化是10%，这样计算在手淘首页加购的2393个人当中，我们按10%来计算也可以成交接近240单。</p><p>这个时候大家一定要坚持去做购物车的营销。强调两点，购物车营销它是影响单品最低价的，影响你的活动，所以说如果大家要上活动的宝贝要慎重。第二，多区间价多Sku的宝贝，不能做购物车营销。因为你一旦做了购物车营销，你的最高价Sku也会按照最低价Sku价格进行成交，他是直接一口价成交，他不是按照整个比例来的。</p><p>那针对于要上活动，有多区间价的宝贝，如何去提升转化成交能力呢？我们可以利用店铺后台当中的客户运营平台中的智能营销工具，比如说短信的营销、兴趣客户的转化、优惠券的关怀以及专享价。</p><p>专享价工具是针对于不同的标签人群的定向专享活动。好，简单举个例子，我们的一个宝贝正常的价格是100元，我们可以针对新顾客设置为100元，为了做老客营销，或者说针对于收藏加购的人群做二次营销，我们可以把它活动价设置为80元。</p><p>当买家第一次进店看到我们宝贝是100元，当买家收藏或者加购之后，他在收藏和加购中重新来回到宝贝的时候，他看到的价格就是80元，这个时候对他的转化影响很大。这个工具不会影响最低价。</p><blockquote><p>总结</p></blockquote><p>这三大核心权重，大家记住它是依次排序，我们必须从第一个点击率开始去满足，只有点击率达到了行业标准以上，我们的宝贝才有可能在猜你喜欢位置上被推荐，结合我们的选品基础，收藏加购数据达标之后，我们手淘首页流量就能够增长。</p><p>最终我们在收藏加购的用户中，在直接转化的用户当中，我们多做一些营销活动来提升我们整体单品的转化成交能力，提升我们单品的优惠价值，这样我们手淘首页的流量就能够持续的增长。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;手淘首页流量的爆发是围绕三个核心权重来的。核心权重主要决定了我们的宝贝的一些基础数据。&lt;/p&gt;</summary>
    
    
    
    <category term="生活笔记" scheme="https://adymilk.github.io/categories/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="淘宝" scheme="https://adymilk.github.io/tags/%E6%B7%98%E5%AE%9D/"/>
    
    <category term="电商" scheme="https://adymilk.github.io/tags/%E7%94%B5%E5%95%86/"/>
    
  </entry>
  
  <entry>
    <title>人工智能Ai人脸融合技术</title>
    <link href="https://adymilk.github.io/2018/06/30/20180630-1/"/>
    <id>https://adymilk.github.io/2018/06/30/20180630-1/</id>
    <published>2018-06-30T03:45:43.000Z</published>
    <updated>2021-06-24T05:59:27.039Z</updated>
    
    <content type="html"><![CDATA[        <h2 id="体验地址-H5-手机端访问"   >          <a href="#体验地址-H5-手机端访问" class="heading-link"><i class="fas fa-link"></i></a><a href="#体验地址-H5-手机端访问" class="headerlink" title="体验地址(H5 手机端访问)"></a>体验地址(H5 手机端访问)</h2>      <p><span class="exturl"><a class="exturl__link"   href="http://0551shengteng.cn/FaceFusion/" >人工智能在线P图，只需一秒</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><span id="more"></span>        <h2 id="开源地址"   >          <a href="#开源地址" class="heading-link"><i class="fas fa-link"></i></a><a href="#开源地址" class="headerlink" title="开源地址"></a>开源地址</h2>      <p><span class="exturl"><a class="exturl__link"   href="https://github.com/adymilk/FaceFusion" >https://github.com/adymilk/FaceFusion</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;体验地址-H5-手机端访问&quot;   &gt;
          &lt;a href=&quot;#体验地址-H5-手机端访问&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#体验地址-H5-手机端访问&quot; class=&quot;headerlink&quot; title=&quot;体验地址(H5 手机端访问)&quot;&gt;&lt;/a&gt;体验地址(H5 手机端访问)&lt;/h2&gt;
      &lt;p&gt;&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot;   href=&quot;http://0551shengteng.cn/FaceFusion/&quot; &gt;人工智能在线P图，只需一秒&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="代码笔记" scheme="https://adymilk.github.io/categories/%E4%BB%A3%E7%A0%81%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Ai" scheme="https://adymilk.github.io/tags/Ai/"/>
    
    <category term="计算机视觉" scheme="https://adymilk.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/"/>
    
  </entry>
  
</feed>
